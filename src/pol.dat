./add.dat:./potential/electrostatics/fields.h:                             double aDD,                              // Thole damping aDD (dipole - dipole)
./add.dat:./potential/electrostatics/fields.h:                                          double aDD,                              // Thole damping aDD (dipole - dipole)
./add.dat:./potential/electrostatics/fields.h:                                        double aDD,                              // Thole damping aDD (dipole - dipole)
./add.dat:./potential/electrostatics/fields.h:                                    double aDD,                              // Thole damping aDD (dipole - dipole)
./add.dat:./potential/electrostatics/files_not_used/electrostatic_tensors.h:                     double aDD,                    // Thole damping aDD (dipole - dipole)
./add.dat:./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:                     double aDD,                    // Thole damping aDD (dipole - dipole)
./bblock/sys_tools.cpp:void SetPolfac(std::vector<double> &polfac, std::string mon_id, size_t n_mon, size_t nsites, size_t fst_ind,
./bblock/sys_tools.cpp:        std::vector<double> pf = mon_j[mon_id]["polfac"];
./bblock/sys_tools.cpp:                polfac[fst_ind + nv * nsites + j] = pf[j];
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 0.8079;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 5.3602;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 3.7819;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 5.9563;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 0.0285;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 0.1476;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 0.8184;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 1.3614;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) polfac[fst_ind + nv] = 2.3660;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 1.3932677;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.38978363;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.38978363;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 3] = 0.38978363;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 4] = 0.38978363;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites] = 0.0;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 0.0;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.0;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites] = 0.0;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 1.471677;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.769790;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.769790;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 1.2046;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.6722;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.6722;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 1.2046;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.6722;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.6722;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 0.9556;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.3624;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.3624;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 3] = 0.3624;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 0.00000;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.00000;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.00000;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 3] = 0.00000;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 0.7292804719246812;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.9556760793256731;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 2] = 0.9556760793256731;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 3] = 0.7251064765496543;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 4] = 0.7251064765496543;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 5] = 0.7251064765496543;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 6] = 0.7251064765496543;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv] = 0.0;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv] = 1.645;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv] = 0.20493754;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 0] = 0.3198;
./bblock/sys_tools.cpp:            polfac[fst_ind + nv * nsites + 1] = 0.3198;
./bblock/sys_tools.cpp:        std::vector<double> polfac2(n_mon * nsites, 0.0);
./bblock/sys_tools.cpp:            polfac2[nv] = 0.7705056046539932;
./bblock/sys_tools.cpp:                polfac2[nv + i * n_mon] = 0.4364107405988837;
./bblock/sys_tools.cpp:            polfac2[nv + n_mon * 3] = 0.7705056046539932;
./bblock/sys_tools.cpp:        // Return all polfacs to the original vector
./bblock/sys_tools.cpp:                polfac[nv * nsites + j + fst_ind] = polfac2[nv + n_mon * j];
./bblock/sys_tools.cpp:        std::vector<double> polfac2(n_mon * nsites, 0.0);
./bblock/sys_tools.cpp:            polfac2[nv] = 1.310;
./bblock/sys_tools.cpp:                polfac2[nv + i * n_mon] = 0.294;
./bblock/sys_tools.cpp:            polfac2[nv + n_mon * 3] = 1.310;
./bblock/sys_tools.cpp:        // Return all polfacs to the original vector
./bblock/sys_tools.cpp:                polfac[nv * nsites + j + fst_ind] = polfac2[nv + n_mon * j];
./bblock/sys_tools.cpp:void SetPol(std::vector<double> &pol, std::string mon_id, size_t n_mon, size_t nsites, size_t fst_ind,
./bblock/sys_tools.cpp:        std::vector<double> p = mon_j[mon_id]["pol"];
./bblock/sys_tools.cpp:                pol[fst_ind + nv * nsites + j] = p[j];
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 0.8079;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 5.3602;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 3.7819;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 5.9563;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 0.0285;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 0.1476;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 0.8184;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 1.3614;
./bblock/sys_tools.cpp:        for (size_t nv = 0; nv < n_mon; nv++) pol[fst_ind + nv] = 2.3660;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 1.3932677;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.38978363;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.38978363;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 3] = 0.38978363;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 4] = 0.38978363;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites] = 0.0;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 0.0;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.0;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites] = 0.0;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 0.9556;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.3624;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.3624;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 3] = 0.3624;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 1.471677;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.769790;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.769790;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 1.2046;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.6722;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.6722;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 1.2046;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.6722;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.6722;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 0.00000;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.00000;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.00000;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 3] = 0.00000;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 0.7292804719246812;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.9556760793256731;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 2] = 0.9556760793256731;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 3] = 0.7251064765496543;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 4] = 0.7251064765496543;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 5] = 0.7251064765496543;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 6] = 0.7251064765496543;
./bblock/sys_tools.cpp:            pol[fst_ind + nv] = 0.0;
./bblock/sys_tools.cpp:            pol[fst_ind + nv] = 1.645;
./bblock/sys_tools.cpp:            pol[fst_ind + nv] = 0.20493754;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 0] = 0.3198;
./bblock/sys_tools.cpp:            pol[fst_ind + nv * nsites + 1] = 0.3198;
./bblock/sys_tools.cpp:        std::vector<double> pol2(n_mon * nsites, 0.0);
./bblock/sys_tools.cpp:            pol2[nv] = 0.7705056046539932;
./bblock/sys_tools.cpp:                pol2[nv + i * n_mon] = 0.4364107405988837;
./bblock/sys_tools.cpp:        // Return all pols to the original vector
./bblock/sys_tools.cpp:                pol[nv * nsites + j + fst_ind] = pol2[nv + n_mon * j];
./bblock/sys_tools.cpp:        std::vector<double> pol2(n_mon * nsites, 0.0);
./bblock/sys_tools.cpp:            pol2[nv] = 1.310;
./bblock/sys_tools.cpp:                pol2[nv + i * n_mon] = 0.294;
./bblock/sys_tools.cpp:        // Return all pols to the original vector
./bblock/sys_tools.cpp:                pol[nv * nsites + j + fst_ind] = pol2[nv + n_mon * j];
./bblock/sys_tools.cpp:        // It comes from MB-pol (C6O = sqrt(C6OO))
./bblock/sys_tools.h: * @brief Gets the thole damping for dipole dipole
./bblock/sys_tools.h: * thole damping for dipole-dipole for a given monomer
./bblock/sys_tools.h: * This function is used to reorder coordinates, dipoles, or
./bblock/sys_tools.h: * This function is used to reorder coordinates, dipoles, or
./bblock/sys_tools.h: * This function is used to reorder atom names, charges, pols...
./bblock/sys_tools.h: * This function is used to reorder atom names, charges, pols...
./bblock/sys_tools.h: * @brief Sets the polarizability factors of a system.
./bblock/sys_tools.h: * filling in, it will set the polarizability factors
./bblock/sys_tools.h: * @param[out] polfac Vector with the polarizability factor of the monomer type filled.
./bblock/sys_tools.h: * Can contain polarizability factors for other monomer types. They won't be overwritten
./bblock/sys_tools.h:void SetPolfac(std::vector<double> &polfac, std::string mon_id, size_t n_mon, size_t nsites, size_t fst_ind,
./bblock/sys_tools.h: * @brief Sets the polarizabilities of a system.
./bblock/sys_tools.h: * filling in, it will set the polarizabilities
./bblock/sys_tools.h: * @param[out] pol Vector with the polarizabilities of the monomer type filled.
./bblock/sys_tools.h: * Can contain polarizabilities for other monomer types. They won't be overwritten
./bblock/sys_tools.h:void SetPol(std::vector<double> &pol, std::string mon_id, size_t n_mon, size_t nsites, size_t fst_ind,
./bblock/.deps/libmbx_la-external_call.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./bblock/.deps/libmbx_la-external_call.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./bblock/.deps/libmbx_la-external_call.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/force_field/topology.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/force_field/topology.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly-2b-v6x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly-3b-v2x.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./bblock/.deps/libmbx_la-external_call.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./bblock/.deps/libmbx_la-sys_tools.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./bblock/.deps/libmbx_la-sys_tools.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./bblock/.deps/libmbx_la-system.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./bblock/.deps/libmbx_la-system.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./bblock/.deps/libmbx_la-system.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./bblock/.deps/libmbx_la-system.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./bblock/.deps/libmbx_la-system.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./bblock/.deps/libmbx_la-system.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./bblock/.deps/libmbx_la-system.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./bblock/.deps/libmbx_la-system.Plo:potential/force_field/topology.h:
./bblock/.deps/libmbx_la-system.Plo:potential/force_field/topology.h:
./bblock/.deps/libmbx_la-system.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly-2b-v6x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly-3b-v2x.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./bblock/.deps/libmbx_la-system.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./bblock/.deps/libmbx_la-system.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
Binary file ./bblock/libmbx_la-sys_tools.o matches
Binary file ./bblock/libmbx_la-external_call.o matches
Binary file ./bblock/libmbx_la-system.o matches
./bblock/system.cpp:    // Affects the 2B dispersion and 2B polynomials
./bblock/system.cpp:    // Affects the 3B polynomials
./bblock/system.cpp:    // Affects the 4B polynomials
./bblock/system.cpp:    // Setting dipole tolerance to a consrvative value
./bblock/system.cpp:    // TODO make it be error/dipole, not total error as it is now
./bblock/system.cpp:    // Sets the maximum number of iteartions in the induced dipole
./bblock/system.cpp:    // Sets the default method to calculate induced dipoles to ASPC
./bblock/system.cpp:    dipole_method_ = "cg";
./bblock/system.cpp:    return systools::ResetOrderN(pol_, initial_order_, first_index_, sites_);
./bblock/system.cpp:    return systools::ResetOrderRealN(pol_, initial_order_realSites_, numat_, first_index_, nat_);
./bblock/system.cpp:    return systools::ResetOrderN(polfac_, initial_order_, first_index_, sites_);
./bblock/system.cpp:    return systools::ResetOrderRealN(pol_, initial_order_realSites_, numat_, first_index_, nat_);
./bblock/system.cpp:double System::GetDipoleTolerance() { return diptol_; }
./bblock/system.cpp:std::string System::GetDipoleMethod() { return dipole_method_; }
./bblock/system.cpp:size_t System::GetMaxIterationsDipoles() { return maxItDip_; }
./bblock/system.cpp:void System::GetMolecularDipoles(std::vector<double> &mu_perm, std::vector<double> &mu_ind) {
./bblock/system.cpp:    std::vector<double> tmp_perm = electrostaticE_.GetMolecularPermanentDipoles();
./bblock/system.cpp:    std::vector<double> tmp_ind = electrostaticE_.GetMolecularInducedDipoles();
./bblock/system.cpp:void System::GetDipoles(std::vector<double> &mu_perm, std::vector<double> &mu_ind) {
./bblock/system.cpp:    std::vector<double> mu_perm2 = electrostaticE_.GetPermanentDipoles();
./bblock/system.cpp:    std::vector<double> mu_ind2 = electrostaticE_.GetInducedDipoles();
./bblock/system.cpp:void System::GetTotalDipole(std::vector<double> &mu_perm, std::vector<double> &mu_ind, std::vector<double> &mu_tot) {
./bblock/system.cpp:    std::vector<double> all_mu_perm = electrostaticE_.GetPermanentDipoles();
./bblock/system.cpp:    std::vector<double> all_mu_ind = electrostaticE_.GetInducedDipoles();
./bblock/system.cpp:void System::SetDipoleTol(double tol) { diptol_ = tol; }
./bblock/system.cpp:void System::SetDipoleMaxIt(size_t maxit) { maxItDip_ = maxit; }
./bblock/system.cpp:void System::SetDipoleMethod(std::string method) { dipole_method_ = method; }
./bblock/system.cpp:    // Reset the virtual site positions, charges, pols and polfacs
./bblock/system.cpp:    // Reset the virtual site positions, charges, pols and polfacs
./bblock/system.cpp:void System::SetPolaris(std::vector<double> polaris) {
./bblock/system.cpp:    if (polaris.size() != numat_) {
./bblock/system.cpp:            "Sizes " + std::to_string(polaris.size()) + " and " + std::to_string(numat_ ) + " don't match.";
./bblock/system.cpp:        std::copy(polaris.begin() + ini, polaris.begin() + fin, polaris_.begin() + ini_new);
./bblock/system.cpp:void System::AddMonomer(std::vector<double> xyz, std::vector<std::string> atoms, std::vector<double> polaris, std::string id, size_t islocal,
./bblock/system.cpp:    // Adding polarizability values 
./bblock/system.cpp:    for (auto i = polaris.begin(); i != polaris.end(); i++) polaris_.push_back(*i);
./bblock/system.cpp:std::vector<std::string> System::Get1bIgnorePoly() { return ignore_1b_poly_; }
./bblock/system.cpp:std::vector<std::vector<std::string>> System::Get2bIgnorePoly() { return ignore_2b_poly_; }
./bblock/system.cpp:std::vector<std::vector<std::string>> System::Get3bIgnorePoly() { return ignore_3b_poly_; }
./bblock/system.cpp:std::vector<std::vector<std::string>> System::Get4bIgnorePoly() { return ignore_4b_poly_; }
./bblock/system.cpp:    if (std::find(ignore_1b_poly_.begin(), ignore_1b_poly_.end(), mon) == ignore_1b_poly_.end()) {
./bblock/system.cpp:        ignore_1b_poly_.push_back(mon);
./bblock/system.cpp:void System::Set1bIgnorePoly(std::vector<std::string> ignore_1b) { ignore_1b_poly_ = ignore_1b; }
./bblock/system.cpp:    if (std::find(ignore_2b_poly_.begin(), ignore_2b_poly_.end(), p) == ignore_2b_poly_.end()) {
./bblock/system.cpp:        ignore_2b_poly_.push_back(p);
./bblock/system.cpp:    ignore_2b_poly_.clear();
./bblock/system.cpp:        ignore_2b_poly_.push_back(p);
./bblock/system.cpp:    if (std::find(ignore_3b_poly_.begin(), ignore_3b_poly_.end(), p) == ignore_3b_poly_.end()) {
./bblock/system.cpp:        ignore_3b_poly_.push_back(p);
./bblock/system.cpp:    ignore_3b_poly_.clear();
./bblock/system.cpp:        ignore_3b_poly_.push_back(p);
./bblock/system.cpp:    if (std::find(ignore_4b_poly_.begin(), ignore_4b_poly_.end(), p) == ignore_4b_poly_.end()) {
./bblock/system.cpp:        ignore_4b_poly_.push_back(p);
./bblock/system.cpp:    ignore_4b_poly_.clear();
./bblock/system.cpp:        ignore_4b_poly_.push_back(p);
./bblock/system.cpp:    electrostaticE_.Initialize(chg_, chggrad_, polfac_, pol_, xyz_, monomers_, sites_, first_index_, mon_type_count_,
./bblock/system.cpp:                               islocal_, atom_tag_, true, diptol_, maxItDip_, dipole_method_);
./bblock/system.cpp://    electrostaticE_.Initialize(chg_, chggrad_, polfac_, pol_, xyz_, monomers_, sites_, first_index_, mon_type_count_,
./bblock/system.cpp://                               islocal_, atom_tag_, true, diptol_, maxItDip_, dipole_method_);
./bblock/system.cpp:    // Try to get dipole convergence criteria
./bblock/system.cpp:        diptol_ = j["MBX"]["dipole_tolerance"];
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"dipole_tolerance\" is not defined in json file. Using " << diptol_
./bblock/system.cpp:    mbx_j_["MBX"]["dipole_tolerance"] = diptol_;
./bblock/system.cpp:    // Try to get dipole convergence criteria
./bblock/system.cpp:        dipole_method_ = j["MBX"]["dipole_method"];
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"dipole_method\" is not defined in json file. Using " << dipole_method_ <<
./bblock/system.cpp:    mbx_j_["MBX"]["dipole_method"] = dipole_method_;
./bblock/system.cpp:    // Try to get dipole max number of iterations
./bblock/system.cpp:        maxItDip_ = j["MBX"]["dipole_max_it"];
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"dipole_max_it\" is not defined in json file. Using " << maxItDip_ << "\n";
./bblock/system.cpp:    mbx_j_["MBX"]["dipole_max_it"] = maxItDip_;
./bblock/system.cpp:        std::vector<std::string> ignore_1b_poly = j["MBX"]["ignore_1b_poly"];
./bblock/system.cpp:        ignore_1b_poly_ = ignore_1b_poly;
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"ignore_1b_poly\" is not defined in json file. Using empty list.\n";
./bblock/system.cpp:    Set1bIgnorePoly(ignore_1b_poly_);
./bblock/system.cpp:    mbx_j_["MBX"]["ignore_1b_poly"] = ignore_1b_poly_;
./bblock/system.cpp:        std::vector<std::vector<std::string>> ignore_2b_poly = j["MBX"]["ignore_2b_poly"];
./bblock/system.cpp:        ignore_2b_poly_ = ignore_2b_poly;
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"ignore_2b_poly\" is not defined in json file. Using empty list.\n";
./bblock/system.cpp:    Set2bIgnorePoly(ignore_2b_poly_);
./bblock/system.cpp:    mbx_j_["MBX"]["ignore_2b_poly"] = ignore_2b_poly_;
./bblock/system.cpp:        std::vector<std::vector<std::string>> ignore_3b_poly = j["MBX"]["ignore_3b_poly"];
./bblock/system.cpp:        ignore_3b_poly_ = ignore_3b_poly;
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"ignore_3b_poly\" is not defined in json file. Using empty list.\n";
./bblock/system.cpp:    Set3bIgnorePoly(ignore_3b_poly_);
./bblock/system.cpp:    mbx_j_["MBX"]["ignore_3b_poly"] = ignore_3b_poly_;
./bblock/system.cpp:        std::vector<std::vector<std::string>> ignore_4b_poly = j["MBX"]["ignore_4b_poly"];
./bblock/system.cpp:        ignore_4b_poly_ = ignore_4b_poly;
./bblock/system.cpp:        //     std::cerr << "**WARNING** \"ignore_4b_poly\" is not defined in json file. Using empty list.\n";
./bblock/system.cpp:    Set4bIgnorePoly(ignore_4b_poly_);
./bblock/system.cpp:    mbx_j_["MBX"]["ignore_4b_poly"] = ignore_4b_poly_;
./bblock/system.cpp:       "dipole_tolerance" : 1E-016,
./bblock/system.cpp:       "dipole_max_it"    : 100,
./bblock/system.cpp:       "dipole_method"     : "cg",
./bblock/system.cpp:       "ignore_1b_poly" : [],
./bblock/system.cpp:       "ignore_2b_poly" : [],
./bblock/system.cpp:       "ignore_3b_poly" : [],
./bblock/system.cpp:    //                              {"dipole_tolerance", 1E-16},
./bblock/system.cpp:    //                              {"dipole_max_it", 100},
./bblock/system.cpp:    //                              {"dipole_method", "cg"},
./bblock/system.cpp:    //                              {"ignore_1b_poly", nlohmann::json::array()},
./bblock/system.cpp:    //                              {"ignore_2b_poly", nlohmann::json::array()},
./bblock/system.cpp:    //                              {"ignore_3b_poly", nlohmann::json::array()}}},
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Dipole Tol:" << diptol_ << std::endl;
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Dipole Max Iter:" << maxItDip_ << std::endl;
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Dipole Method:" << dipole_method_ << std::endl;
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Ignore 1B poly:";
./bblock/system.cpp:    for (size_t i = 0; i < ignore_1b_poly_.size(); i++) {
./bblock/system.cpp:        ss << ignore_1b_poly_[i] << " ";
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Ignore 2B poly:";
./bblock/system.cpp:    for (size_t i = 0; i < ignore_2b_poly_.size(); i++) {
./bblock/system.cpp:        for (size_t j = 0; j < ignore_2b_poly_[i].size(); j++) {
./bblock/system.cpp:            ss << ignore_2b_poly_[i][j] << " ";
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Ignore 3B poly:";
./bblock/system.cpp:    for (size_t i = 0; i < ignore_3b_poly_.size(); i++) {
./bblock/system.cpp:        for (size_t j = 0; j < ignore_3b_poly_[i].size(); j++) {
./bblock/system.cpp:            ss << ignore_3b_poly_[i][j] << " ";
./bblock/system.cpp:    ss << std::left << std::setw(25) << "Ignore 4B poly:";
./bblock/system.cpp:    for (size_t i = 0; i < ignore_4b_poly_.size(); i++) {
./bblock/system.cpp:        for (size_t j = 0; j < ignore_4b_poly_[i].size(); j++) {
./bblock/system.cpp:            ss << ignore_4b_poly_[i][j] << " ";
./bblock/system.cpp:    polaris_ = std::vector<double>(numsites_, 0.0);         //SY// check numat_ or numsites_
./bblock/system.cpp:        std::copy(polaris.begin() + fi_at[k], polaris.begin() + fi_at[k] + nat_[k], polaris_.begin() + count);
./bblock/system.cpp:    // Initialize gradients, charges, pols and polfacs to the right size
./bblock/system.cpp:    pol_ = std::vector<double>(numsites_, 0.0);
./bblock/system.cpp:    polfac_ = std::vector<double>(numsites_, 0.0);
./bblock/system.cpp:    // Reset the charges, pols, polfacs and new Vsite
./bblock/system.cpp:        if (std::find(ignore_1b_poly_.begin(), ignore_1b_poly_.end(), mon_type_count_[k].first) !=
./bblock/system.cpp:            ignore_1b_poly_.end()) {
./bblock/system.cpp:        // polynomials. Thus, we need to create a pair of vectors with the right
./bblock/system.cpp:        // coordinates to pass to polynomials and dispersion
./bblock/system.cpp:                bool use_poly = true;
./bblock/system.cpp:                for (size_t i2b = 0; i2b < ignore_2b_poly_.size(); i2b++) {
./bblock/system.cpp:                    std::vector<std::string> v1 = ignore_2b_poly_[i2b];
./bblock/system.cpp:                        use_poly = false;
./bblock/system.cpp:                if (use_poly) {
./bblock/system.cpp:        // polynomials. Thus, we need to create a pair of vectors with the right
./bblock/system.cpp:        // coordinates to pass to polynomials and dispersion
./bblock/system.cpp:                bool use_poly = true;
./bblock/system.cpp:                for (size_t i3b = 0; i3b < ignore_3b_poly_.size(); i3b++) {
./bblock/system.cpp:                    std::vector<std::string> v1 = ignore_3b_poly_[i3b];
./bblock/system.cpp:                        use_poly = false;
./bblock/system.cpp:                if (use_poly) {
./bblock/system.cpp:            // polynomials. Thus, we need to create a pair of vectors with the right
./bblock/system.cpp:            // coordinates to pass to polynomials and dispersion
./bblock/system.cpp:            bool use_poly = true;
./bblock/system.cpp:            for (size_t i4b = 0; i4b < ignore_4b_poly_.size(); i4b++) {
./bblock/system.cpp:                std::vector<std::string> v1 = ignore_4b_poly_[i4b];
./bblock/system.cpp:                    use_poly = false;
./bblock/system.cpp:            if (use_poly) {
./bblock/system.cpp:    // Set polarizabilities for each monomer type
./bblock/system.cpp:        systools::SetPol(pol_, mon, nmon, nsites, first_index_[fi_mon], monomers_j_);
./bblock/system.cpp:    std::vector<double> real_pol =
./bblock/system.cpp:        systools::ResetOrderRealN(pol_, initial_order_realSites_, numat_, first_index_, nat_);
./bblock/system.cpp:    std::vector<double> all_pol = systools::ResetOrderN(pol_, initial_order_, first_index_, sites_);
./bblock/system.cpp:    std::cerr << "Real sites polarizabilities\n";
./bblock/system.cpp:    std::cerr << real_pol[0];
./bblock/system.cpp:    for (size_t i = 1; i < real_pol.size(); i++) std::cerr << ", " << real_pol[i];
./bblock/system.cpp:    std::cerr << "\nAll polarizabilities\n";
./bblock/system.cpp:    std::cerr << all_pol[0];
./bblock/system.cpp:    for (size_t i = 1; i < all_pol.size(); i++) std::cerr << ", " << all_pol[i];
./bblock/system.cpp:    // Set polarizability factors for each monomer type
./bblock/system.cpp:        systools::SetPolfac(polfac_, mon, nmon, nsites, first_index_[fi_mon], monomers_j_);
./bblock/system.cpp:    std::vector<double> real_polfac =
./bblock/system.cpp:        systools::ResetOrderRealN(polfac_, initial_order_realSites_, numat_, first_index_, nat_);
./bblock/system.cpp:    std::vector<double> all_polfac = systools::ResetOrderN(polfac_, initial_order_, first_index_, sites_);
./bblock/system.cpp:    std::cerr << "Real sites polarizability factors\n";
./bblock/system.cpp:    std::cerr << real_polfac[0];
./bblock/system.cpp:    for (size_t i = 1; i < real_polfac.size(); i++) std::cerr << ", " << real_polfac[i];
./bblock/system.cpp:    std::cerr << "\nAll polarizability factors\n";
./bblock/system.cpp:    std::cerr << all_polfac[0];
./bblock/system.cpp:    for (size_t i = 1; i < all_polfac.size(); i++) std::cerr << ", " << all_polfac[i];
./bblock/system.cpp:    electrostaticE_.SetNewParameters(xyz_, chg_, chggrad_, pol_, polfac_, dipole_method_, do_grads, box_, cutoff2b_);
./bblock/system.cpp:    electrostaticE_.SetDipoleTolerance(diptol_);
./bblock/system.cpp:    electrostaticE_.SetDipoleMaxIt(maxItDip_);
./bblock/system.cpp:    electrostaticE_.SetNewParameters(xyz_, chg_, chggrad_, pol_, polfac_, dipole_method_, do_grads, box_, cutoff2b_);
./bblock/system.cpp:    electrostaticE_.SetDipoleTolerance(diptol_);
./bblock/system.cpp:    electrostaticE_.SetDipoleMaxIt(maxItDip_);
./bblock/system.cpp:void System::ResetDipoleHistory() { electrostaticE_.ResetAspcHistory(); }
./bblock/system.cpp:double System::GetNumDipoleHistory() { return electrostaticE_.GetNumDipoleHistory(); }
./bblock/system.cpp:void System::SetNumDipoleHistory(size_t num_hist) { electrostaticE_.SetNumDipoleHistory(num_hist); }
./bblock/system.cpp:std::vector<double> System::GetDipoleHistory(size_t indx) {
./bblock/system.cpp:    return systools::ResetOrderReal3N(electrostaticE_.GetDipoleHistory(indx), initial_order_realSites_, numat_,
./bblock/system.cpp:void System::SetDipoleHistory(size_t indx, std::vector<double> mu_hist) {
./bblock/system.cpp:    // need to reorder dipoles first; copied from SetRealXYZ()
./bblock/system.cpp:    electrostaticE_.SetDipoleHistory(indx, mu_hist_);
./bblock/system.h:     * Gets the molecular dipoles for the system.
./bblock/system.h:     * @param[out] mu_perm Permanent dipole moments
./bblock/system.h:     * @param[out] mu_ind Induced dipole moments
./bblock/system.h:    void GetMolecularDipoles(std::vector<double> &mu_perm, std::vector<double> &mu_ind);
./bblock/system.h:     * Gets the point dipole moments in each atom.
./bblock/system.h:     * @param[out] mu_perm Permanent dipole moments
./bblock/system.h:     * @param[out] mu_ind Induced dipole moments
./bblock/system.h:    void GetDipoles(std::vector<double> &mu_perm, std::vector<double> &mu_ind);
./bblock/system.h:     * Gets the total dipole moment for the system.
./bblock/system.h:     * @param[out] mu_perm Permanent dipole moments
./bblock/system.h:     * @param[out] mu_ind Induced dipole moments
./bblock/system.h:     * @param[out] mu_tot Total dipole moment
./bblock/system.h:    void GetTotalDipole(std::vector<double> &mu_perm, std::vector<double> &mu_ind, std::vector<double> &mu_tot);
./bblock/system.h:     * Gets the polarizabilities of the system.
./bblock/system.h:     * @return A vector of doubles with the polarizabilities of all sites
./bblock/system.h:     * Gets the polarizabilities of the system.
./bblock/system.h:     * @return A vector of doubles with the polarizabilities of all real sites
./bblock/system.h:     * Gets the polarizability factors of the system.
./bblock/system.h:     * @return A vector of doubles with the polarizability factors of all sites
./bblock/system.h:     * Gets the polarizability factors of the system.
./bblock/system.h:     * @return A vector of doubles with the polarizability factors of all real sites
./bblock/system.h:     * Gets the two-body cutoff for dispersion and polynomials.
./bblock/system.h:     * Gets the three-body cutoff for polynomials.
./bblock/system.h:     * Gets the four-body cutoff for polynomials.
./bblock/system.h:     * Gets the whole vector for which the 1b polynomials won't be calculated
./bblock/system.h:     * Gets the whole vector for which the 2b polynomials won't be calculated
./bblock/system.h:     * Gets the whole vector for which the 3b polynomials won't be calculated
./bblock/system.h:     * Gets the whole vector for which the 4b polynomials won't be calculated
./bblock/system.h:     * Gets the maximum number of monomers per chunk in polynomial evaluation
./bblock/system.h:     * Gets the maximum number of dimers per chunk in polynomial evaluation
./bblock/system.h:     * Gets the maximum number of trimers per chunk in polynomial evaluation
./bblock/system.h:     * Gets the current dipole tolerance in the system
./bblock/system.h:     * @return Current dipole tolerance
./bblock/system.h:    double GetDipoleTolerance();
./bblock/system.h:     * Gets the maximum number of iteration in induced dipoles set in system
./bblock/system.h:    size_t GetMaxIterationsDipoles();
./bblock/system.h:     * Gets the dipole method
./bblock/system.h:    std::string GetDipoleMethod();
./bblock/system.h:     * @param[out] spline_order Electrostatics Ewald spline order for interpolation
./bblock/system.h:     * @param[out] spline_order Dispersion Ewald spline order for interpolation
./bblock/system.h:     * @param[out] spline_order Lennard-Jones Ewald spline order for interpolation
./bblock/system.h:    void AddMonomer(std::vector<double> xyz, std::vector<std::string> atoms, std::vector<double> polaris, std::string id, size_t islocal = 1,
./bblock/system.h:     * Adds a pair that will be ignored in the 1b polynomials
./bblock/system.h:     * Sets the whole vector for which the 1b polynomials won't be calculated
./bblock/system.h:     * Adds a pair that will be ignored in the 2b polynomials
./bblock/system.h:     * Sets the whole vector for which the 2b polynomials won't be calculated
./bblock/system.h:     * Adds a pair that will be ignored in the 3b polynomials
./bblock/system.h:     * Sets the whole vector for which the 3b polynomials won't be calculated
./bblock/system.h:     * Adds a pair that will be ignored in the 4b polynomials
./bblock/system.h:     * Sets the whole vector for which the 4b polynomials won't be calculated
./bblock/system.h:     * Sets the two-body cutoff for dispersion and polynomials.
./bblock/system.h:     * Sets the three-body cutoff for polynomials.
./bblock/system.h:     * Sets the four-body cutoff for polynomials.
./bblock/system.h:     * Sets the maximum error per dipole in the iterative methods to
./bblock/system.h:     * compute the induced dipoles
./bblock/system.h:     * @param[in] tol Double value that sets the maximum error per dipole
./bblock/system.h:     * in the iterative methods to compute the induced dipoles
./bblock/system.h:    void SetDipoleTol(double tol);
./bblock/system.h:     * to converge the induced dipoles
./bblock/system.h:     * to converge the induced dipoles
./bblock/system.h:    void SetDipoleMaxIt(size_t maxit);
./bblock/system.h:     * Sets the iterative dipole method. See documentation for available methods
./bblock/system.h:    void SetDipoleMethod(std::string method);
./bblock/system.h:     * Resets the dipole history when using ASPC. If other method is used,
./bblock/system.h:    void ResetDipoleHistory();
./bblock/system.h:     * Return number of dipole histories
./bblock/system.h:    double GetNumDipoleHistory();
./bblock/system.h:     * Return history of dipols
./bblock/system.h:    std::vector<double> GetDipoleHistory(size_t indx);
./bblock/system.h:     * Set current number of dipole histories
./bblock/system.h:    void SetNumDipoleHistory(size_t num_hist);
./bblock/system.h:     * Set history of dipoles
./bblock/system.h:     * @param[in] mu_hist dipoles to initialize history
./bblock/system.h:    void SetDipoleHistory(size_t indx, std::vector<double> mu_hist);
./bblock/system.h:     * @param[in] spline_order Order of the splines used for interpolation
./bblock/system.h:     * @param[in] spline_order Order of the splines used for interpolation
./bblock/system.h:     * @param[in] spline_order Order of the splines used for interpolation
./bblock/system.h:     * @param[in] spline_order Order of the splines used for interpolation
./bblock/system.h:     * polynomials and the two-body dispersion.
./bblock/system.h:     * polynomials.
./bblock/system.h:     * polynomials.
./bblock/system.h:     * Sets the polarizabilities of the system
./bblock/system.h:     * Sets the polarizability factors of the system
./bblock/system.h:     * Maximum number of iterations allowed in the induced dipole calculation
./bblock/system.h:     * Maximum error squared per dipole to assume convergence in the
./bblock/system.h:     * induced dipole calculation
./bblock/system.h:     * Spline order for interpolation for electrostatics
./bblock/system.h:     * Spline order for interpolation for dispersion
./bblock/system.h:     * Spline order for interpolation for dispersion
./bblock/system.h:     * than 60 kcal/mol. Due to their construction, the polynomials do not
./bblock/system.h:     * Method used in order to calculate the induced dipoles
./bblock/system.h:    std::string dipole_method_;
./bblock/system.h:     * Vector that stores the polarizabilites of all sites in the internal
./bblock/system.h:    std::vector<double> pol_;
./bblock/system.h:     * Vector that stores the polarizability factor of all sites in the internal
./bblock/system.h:    std::vector<double> polaris_;               //SY//
./bblock/system.h:    std::vector<double> polfac_;
./bblock/system.h:     * when calculating the 1b polynomials.
./bblock/system.h:    std::vector<std::string> ignore_1b_poly_;
./bblock/system.h:     * when calculating the 2b polynomials.
./bblock/system.h:    std::vector<std::vector<std::string> > ignore_2b_poly_;
./bblock/system.h:     * This vector will have the indexes of monomers for which the polynomials wont be calculated due to a hig
./bblock/system.h:     * when calculating the 3b polynomials.
./bblock/system.h:    std::vector<std::vector<std::string> > ignore_3b_poly_;
./bblock/system.h:     * when calculating the 4b polynomials.
./bblock/system.h:    std::vector<std::vector<std::string> > ignore_4b_poly_;
./bblock/external_call.cpp:        std::vector<double> polaris(nat_monomers[i]);           //SY//
./bblock/external_call.cpp:        my_s->AddMonomer(xyz, vAtNames, polaris, id);           //SY//
./bblock/external_call.cpp:            std::vector<std::double> polaris(nat_monomers[i]);          //SY//
./bblock/external_call.cpp:            my_sf[k]->AddMonomer(xyz, vAtNames, polaris, id);           //SY//
./bblock/external_call.cpp:        std::vector<double> polaris(nat_monomers[i]);           //SY//
./bblock/external_call.cpp:        my_s->AddMonomer(xyz, vAtNames, polaris,  id);          //SY//
./bblock/external_call.cpp:void get_total_dipole_(double* dip) {
./bblock/external_call.cpp:    my_s->GetTotalDipole(dperm, dind, dtot);
./bblock/external_call.cpp:void get_induced_dipoles_(double* mu_i_out) {
./bblock/external_call.cpp:    my_s->GetDipoles(mu_p, mu_i);
./bblock/external_call.cpp:void get_polarizabilities_(double* polarizability) {
./bblock/external_call.cpp:    std::vector<double> pol = my_s->GetPolarizabilities();
./bblock/external_call.cpp:    std::copy(pol.begin(), pol.end(), polarizability);
./Catch2/single_include/catch.hpp:// start catch_polyfills.hpp
./Catch2/single_include/catch.hpp:// end catch_polyfills.hpp
./Catch2/single_include/catch.hpp:// start catch_polyfills.cpp
./Catch2/single_include/catch.hpp:// end catch_polyfills.cpp
./io_tools/read_connectivity.cpp:            std::string topology;
./io_tools/read_connectivity.cpp:            topology = str_holder;
./io_tools/read_connectivity.cpp:            if (topology == "bond") {
./io_tools/read_connectivity.cpp:                eff::Bond bond_obj(topology, indexes, functional_form);
./io_tools/read_connectivity.cpp:                // clear vectors for next topology
./io_tools/read_connectivity.cpp:            // check if the topology is an angle
./io_tools/read_connectivity.cpp:            else if (topology == "angle") {
./io_tools/read_connectivity.cpp:                eff::Angles angle_obj(topology, indexes, functional_form);
./io_tools/read_connectivity.cpp:                // Clear vectors for next topology
./io_tools/read_connectivity.cpp:            // check if the topology is a dihedral
./io_tools/read_connectivity.cpp:            else if (topology == "dihedral") {
./io_tools/read_connectivity.cpp:                eff::Dihedral dihedral_obj(topology, indexes, functional_form);
./io_tools/read_connectivity.cpp:                // Clear vectors for next topology
./io_tools/read_connectivity.cpp:            else if (topology == "inversion") {
./io_tools/read_connectivity.cpp:                eff::Inversion inversion_obj(topology, indexes, functional_form);
./io_tools/read_connectivity.cpp:                // Clear vectors for next topology
./io_tools/read_connectivity.cpp:                std::string text = std::string("Unknown topology detected. " + topology +
./io_tools/read_connectivity.h:#include "potential/force_field/topology.h"
./io_tools/read_connectivity.h: * be read correctly. Below we will give an example using bond as the topology type, but this
./io_tools/read_connectivity.h: * follows for all other topology types.
./io_tools/read_connectivity.h: * topology    1st idx  2nd idx     func form     k      r0
./io_tools/write_connectivity.cpp:            os << bond->GetTopology() << " ";
./io_tools/write_connectivity.cpp:            os << angle->GetTopology() << " ";
./io_tools/write_connectivity.cpp:            os << dihedral->GetTopology() << " ";
./io_tools/write_connectivity.cpp:            os << inversion->GetTopology() << " ";
./io_tools/write_connectivity.h:#include "potential/force_field/topology.h"
./io_tools/write_connectivity.h: * the other topology follow
./io_tools/write_connectivity.h: * topology    1st idx  2nd index   functional form     k      r0
./io_tools/.deps/libmbx_la-read_connectivity.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./io_tools/.deps/libmbx_la-read_connectivity.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-read_connectivity.Plo: potential/force_field/inversion.h potential/force_field/topology.h
./io_tools/.deps/libmbx_la-read_connectivity.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./io_tools/.deps/libmbx_la-read_connectivity.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-read_connectivity.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_nrg.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly-2b-v6x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly-3b-v2x.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-read_nrg.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-read_xyz.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly-2b-v6x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly-3b-v2x.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-read_xyz.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_connectivity.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly-2b-v6x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly-3b-v2x.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_connectivity.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_nrg.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly-2b-v6x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly-3b-v2x.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_nrg.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/force_field/angles.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h potential/2b/energy2b.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/x2b-v9x.h potential/2b/poly-2b-v6x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/x2b-A1B2Z2_C-v1x.h potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h potential/3b/energy3b.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/x3b-v2x.h potential/3b/poly-3b-v2x.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h \
./io_tools/.deps/libmbx_la-write_xyz.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/force_field/topology.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly-2b-v6x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly-3b-v2x.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./io_tools/.deps/libmbx_la-write_xyz.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
Binary file ./io_tools/libmbx_la-read_connectivity.o matches
Binary file ./io_tools/libmbx_la-write_connectivity.o matches
Binary file ./io_tools/libmbx_la-write_nrg.o matches
Binary file ./io_tools/libmbx_la-read_nrg.o matches
./io_tools/read_nrg.cpp:        std::vector<double> polaris;                    //SY//
./io_tools/read_nrg.cpp:            std::string name, polari1, x1, y1, z1;      //YH//
./io_tools/read_nrg.cpp:            double polari, x, y, z;                     //YH//
./io_tools/read_nrg.cpp:                iss >> polari1 >> x1 >> y1 >> z1;       //YH//
./io_tools/read_nrg.cpp:                polari = std:;stod(polari1);            //YH//
./io_tools/read_nrg.cpp:            polaris.push_back(polari1);                 //YH//
./io_tools/read_nrg.cpp:        sys.AddMonomer(xyz, names, polaris, mon_name);  //SY//
./main/single_point.cpp:        // Report polarizabilities and xyz coordinates
./main/single_point.cpp:        std::vector<double> polarisabilities = sys[2].AddMonomer(xyz, names, polaris, mon_name);
./main/single_point.cpp:            std::cout << atoms[i] << polarisabilities [i] << xyz_nrg[i] << std::endl;
./Makefile:	potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo \
./Makefile:	potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo \
./Makefile:	potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo \
./Makefile:	potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo \
./Makefile:	potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo \
./Makefile:	potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly-2b-v6x.lo \
./Makefile:	potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo \
./Makefile:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo
./Makefile:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo \
./Makefile:	potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo \
./Makefile:	potential/3b/libmbx_la-poly-3b-v2x.lo \
./Makefile:	potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo \
./Makefile:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo
./Makefile:	potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo \
./Makefile:	potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo
./Makefile:	potential/force_field/libmbx_la-topology.lo
./Makefile:liba1b2c4_la_SOURCES = potential/1b/poly_1b_A1B2C4_deg5_v1.cpp potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp potential/1b/x1b_A1B2C4_deg5_v1x.cpp potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp 
./Makefile:# 1B poly sources
./Makefile:oneb_sources = potential/1b/energy1b.cpp potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp potential/1b/mbnrg_1b_A2_deg8_v1.cpp potential/1b/poly_1b_A1B2_deg4_v1x.cpp potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp potential/1b/poly_1b_A2_deg8_grad_v1.cpp potential/1b/poly_1b_A2_deg8_nograd_v1.cpp potential/1b/ps.cpp potential/1b/x1b_A1B2_deg4_v1x.cpp potential/1b/x1b_A1B4_deg5_exp0_v1x.cpp potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp  potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp
./Makefile:# 2B poly sources
./Makefile:	potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2_A1B2_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2_A1B2_v1x.cpp \
./Makefile:	potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp \
./Makefile:	potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp \
./Makefile:	potential/2b/poly-2b-A1B2Z2_C-v1.cpp \
./Makefile:	potential/2b/poly-2b-A1B2Z2_C-v1x.cpp \
./Makefile:	potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp \
./Makefile:	potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp \
./Makefile:	potential/2b/poly-2b-v6x.cpp \
./Makefile:	potential/2b/poly-2b-v6x-nogrd.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp \
./Makefile:	potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_A1_deg23_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1_A1_deg23_v1x.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp \
./Makefile:	potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile:# 3B poly sources
./Makefile:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp \
./Makefile:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp \
./Makefile:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp \
./Makefile:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp \
./Makefile:	potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp \
./Makefile:	potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp \
./Makefile:	potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp \
./Makefile:	potential/3b/poly-3b-v2x.cpp \
./Makefile:	potential/3b/poly-3b-v2x-nogrd.cpp \
./Makefile:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp \
./Makefile:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp \
./Makefile:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp \
./Makefile:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile:# 4B poly sources
./Makefile:fourb_sources = potential/4b/energy4b.cpp  potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp  potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp  potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:ff_sources = potential/force_field/angles.cpp potential/force_field/bond.cpp potential/force_field/calculators.cpp potential/force_field/connectivity.cpp potential/force_field/dihedral.cpp potential/force_field/energyff.cpp potential/force_field/inversion.cpp potential/force_field/topology.cpp
./Makefile:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo:  \
./Makefile:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo:  \
./Makefile:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo:  \
./Makefile:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo:  \
./Makefile:potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly-2b-v6x.lo: potential/2b/$(am__dirstamp) \
./Makefile:potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo:  \
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo:  \
./Makefile:potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo:  \
./Makefile:potential/3b/libmbx_la-poly-3b-v2x.lo: potential/3b/$(am__dirstamp) \
./Makefile:potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo:  \
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo:  \
./Makefile:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo:  \
./Makefile:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:  \
./Makefile:potential/force_field/libmbx_la-topology.lo:  \
./Makefile:include potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo
./Makefile:include potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo
./Makefile:include potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo
./Makefile:include potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo
./Makefile:include potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo
./Makefile:include potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo
./Makefile:include potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo
./Makefile:include potential/force_field/$(DEPDIR)/libmbx_la-topology.Plo
./Makefile:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo: potential/1b/poly_1b_A1B2C4_deg5_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Tpo -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Tpo potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2C4_deg5_v1.cpp' object='potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1.cpp
./Makefile:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo: potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo -MD -MP -MF potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Tpo -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Tpo potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp' object='potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp
./Makefile:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Tpo -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Tpo potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp' object='potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp
./Makefile:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Tpo -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Tpo potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp' object='potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo: potential/1b/poly_1b_A1B2_deg4_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo `test -f 'potential/1b/poly_1b_A1B2_deg4_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg4_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2_deg4_v1x.cpp' object='potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo `test -f 'potential/1b/poly_1b_A1B2_deg4_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg4_v1x.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo: potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo: potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo: potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp' object='potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo: potential/1b/poly_1b_A2_deg8_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A2_deg8_grad_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_grad_v1.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo: potential/1b/poly_1b_A2_deg8_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A2_deg8_nograd_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_nograd_v1.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo: potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp' object='potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp
./Makefile:potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo: potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo
./Makefile:#	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp' object='potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo: potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo: potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo: potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo: potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo: potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo: potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo: potential/2b/poly_2b_A1B2_A1B2_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2_A1B2_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo: potential/2b/poly_2b_A1B2_A1B2_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2_A1B2_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo: potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo: potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo: potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo: potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo: potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo: potential/2b/poly-2b-A1B2Z2_C-v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Tpo -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly-2b-A1B2Z2_C-v1.cpp' object='potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1.cpp
./Makefile:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo: potential/2b/poly-2b-A1B2Z2_C-v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Tpo -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly-2b-A1B2Z2_C-v1x.cpp' object='potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo: potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo: potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo: potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo: potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly-2b-v6x.lo: potential/2b/poly-2b-v6x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-v6x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Tpo -c -o potential/2b/libmbx_la-poly-2b-v6x.lo `test -f 'potential/2b/poly-2b-v6x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly-2b-v6x.cpp' object='potential/2b/libmbx_la-poly-2b-v6x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-v6x.lo `test -f 'potential/2b/poly-2b-v6x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x.cpp
./Makefile:potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo: potential/2b/poly-2b-v6x-nogrd.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Tpo -c -o potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo `test -f 'potential/2b/poly-2b-v6x-nogrd.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x-nogrd.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly-2b-v6x-nogrd.cpp' object='potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo `test -f 'potential/2b/poly-2b-v6x-nogrd.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x-nogrd.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo: potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo: potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo: potential/2b/poly_2b_A1_A1_deg23_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg23_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo: potential/2b/poly_2b_A1_A1_deg23_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg23_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1x.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp
./Makefile:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp
./Makefile:potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Tpo -c -o potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo `test -f 'potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp' object='potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo `test -f 'potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp
./Makefile:potential/3b/libmbx_la-poly-3b-v2x.lo: potential/3b/poly-3b-v2x.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly-3b-v2x.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Tpo -c -o potential/3b/libmbx_la-poly-3b-v2x.lo `test -f 'potential/3b/poly-3b-v2x.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly-3b-v2x.cpp' object='potential/3b/libmbx_la-poly-3b-v2x.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly-3b-v2x.lo `test -f 'potential/3b/poly-3b-v2x.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x.cpp
./Makefile:potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo: potential/3b/poly-3b-v2x-nogrd.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Tpo -c -o potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo `test -f 'potential/3b/poly-3b-v2x-nogrd.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x-nogrd.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly-3b-v2x-nogrd.cpp' object='potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo `test -f 'potential/3b/poly-3b-v2x-nogrd.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x-nogrd.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp
./Makefile:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo
./Makefile:#	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo -MD -MP -MF potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' object='potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo -MD -MP -MF potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo
./Makefile:#	$(AM_V_CXX)source='potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' object='potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile:potential/force_field/libmbx_la-topology.lo: potential/force_field/topology.cpp
./Makefile:	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/force_field/libmbx_la-topology.lo -MD -MP -MF potential/force_field/$(DEPDIR)/libmbx_la-topology.Tpo -c -o potential/force_field/libmbx_la-topology.lo `test -f 'potential/force_field/topology.cpp' || echo '$(srcdir)/'`potential/force_field/topology.cpp
./Makefile:	$(AM_V_at)$(am__mv) potential/force_field/$(DEPDIR)/libmbx_la-topology.Tpo potential/force_field/$(DEPDIR)/libmbx_la-topology.Plo
./Makefile:#	$(AM_V_CXX)source='potential/force_field/topology.cpp' object='potential/force_field/libmbx_la-topology.lo' libtool=yes \
./Makefile:#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/force_field/libmbx_la-topology.lo `test -f 'potential/force_field/topology.cpp' || echo '$(srcdir)/'`potential/force_field/topology.cpp
./Makefile.am:liba1b2c4_la_SOURCES = potential/1b/poly_1b_A1B2C4_deg5_v1.cpp potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp potential/1b/x1b_A1B2C4_deg5_v1x.cpp potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp 
./Makefile.am:# 1B poly sources
./Makefile.am:oneb_sources = potential/1b/energy1b.cpp potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp potential/1b/mbnrg_1b_A2_deg8_v1.cpp potential/1b/poly_1b_A1B2_deg4_v1x.cpp potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp potential/1b/poly_1b_A2_deg8_grad_v1.cpp potential/1b/poly_1b_A2_deg8_nograd_v1.cpp potential/1b/ps.cpp potential/1b/x1b_A1B2_deg4_v1x.cpp potential/1b/x1b_A1B4_deg5_exp0_v1x.cpp potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp  potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp
./Makefile.am:# 2B poly sources
./Makefile.am:twob_sources = potential/2b/energy2b.cpp potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp potential/2b/poly_2b_A1B2_A1B2_v1.cpp potential/2b/poly_2b_A1B2_A1B2_v1x.cpp potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp potential/2b/poly-2b-A1B2Z2_C-v1.cpp potential/2b/poly-2b-A1B2Z2_C-v1x.cpp potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp potential/2b/poly-2b-v6x.cpp potential/2b/poly-2b-v6x-nogrd.cpp potential/2b/x2b_A1B2_A1B2_v1x.cpp potential/2b/x2b_A1B2C4_D1E2_deg3_v1x.cpp potential/2b/x2b_A1B2Z2_C1D2_v1x.cpp potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp potential/2b/x2b-A1B2Z2_C-v1x.cpp potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.cpp potential/2b/x2b-v9x.cpp potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp potential/2b/x2b_A1_A1_deg23_v1x.cpp potential/2b/poly_2b_A1_A1_deg23_v1.cpp potential/2b/poly_2b_A1_A1_deg23_v1x.cpp potential/2b/x2b_A1B2Z2_C1_deg5_v1x.cpp potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile.am:# 3B poly sources
./Makefile.am:threeb_sources = potential/3b/energy3b.cpp potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp potential/3b/poly-3b-v2x.cpp potential/3b/poly-3b-v2x-nogrd.cpp potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp potential/3b/x3b-v2x.cpp potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile.am:# 4B poly sources
./Makefile.am:fourb_sources = potential/4b/energy4b.cpp  potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp  potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp  potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.am:ff_sources = potential/force_field/angles.cpp potential/force_field/bond.cpp potential/force_field/calculators.cpp potential/force_field/connectivity.cpp potential/force_field/dihedral.cpp potential/force_field/energyff.cpp potential/force_field/inversion.cpp potential/force_field/topology.cpp
./Makefile.in:	potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo \
./Makefile.in:	potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo \
./Makefile.in:	potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo \
./Makefile.in:	potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo \
./Makefile.in:	potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly-2b-v6x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo \
./Makefile.in:	potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo \
./Makefile.in:	potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo \
./Makefile.in:	potential/3b/libmbx_la-poly-3b-v2x.lo \
./Makefile.in:	potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo \
./Makefile.in:	potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo
./Makefile.in:	potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo \
./Makefile.in:	potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo
./Makefile.in:	potential/force_field/libmbx_la-topology.lo
./Makefile.in:liba1b2c4_la_SOURCES = potential/1b/poly_1b_A1B2C4_deg5_v1.cpp potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp potential/1b/x1b_A1B2C4_deg5_v1x.cpp potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp 
./Makefile.in:# 1B poly sources
./Makefile.in:oneb_sources = potential/1b/energy1b.cpp potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp potential/1b/mbnrg_1b_A2_deg8_v1.cpp potential/1b/poly_1b_A1B2_deg4_v1x.cpp potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp potential/1b/poly_1b_A2_deg8_grad_v1.cpp potential/1b/poly_1b_A2_deg8_nograd_v1.cpp potential/1b/ps.cpp potential/1b/x1b_A1B2_deg4_v1x.cpp potential/1b/x1b_A1B4_deg5_exp0_v1x.cpp potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp  potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp
./Makefile.in:# 2B poly sources
./Makefile.in:	potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2_A1B2_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2_A1B2_v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly-2b-A1B2Z2_C-v1.cpp \
./Makefile.in:	potential/2b/poly-2b-A1B2Z2_C-v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly-2b-v6x.cpp \
./Makefile.in:	potential/2b/poly-2b-v6x-nogrd.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_A1_deg23_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1_A1_deg23_v1x.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp \
./Makefile.in:	potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile.in:# 3B poly sources
./Makefile.in:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp \
./Makefile.in:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp \
./Makefile.in:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp \
./Makefile.in:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp \
./Makefile.in:	potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp \
./Makefile.in:	potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp \
./Makefile.in:	potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp \
./Makefile.in:	potential/3b/poly-3b-v2x.cpp \
./Makefile.in:	potential/3b/poly-3b-v2x-nogrd.cpp \
./Makefile.in:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp \
./Makefile.in:	potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp \
./Makefile.in:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp \
./Makefile.in:	potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile.in:# 4B poly sources
./Makefile.in:fourb_sources = potential/4b/energy4b.cpp  potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp  potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp  potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:ff_sources = potential/force_field/angles.cpp potential/force_field/bond.cpp potential/force_field/calculators.cpp potential/force_field/connectivity.cpp potential/force_field/dihedral.cpp potential/force_field/energyff.cpp potential/force_field/inversion.cpp potential/force_field/topology.cpp
./Makefile.in:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo:  \
./Makefile.in:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo:  \
./Makefile.in:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo:  \
./Makefile.in:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo:  \
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly-2b-v6x.lo: potential/2b/$(am__dirstamp) \
./Makefile.in:potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo:  \
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly-3b-v2x.lo: potential/3b/$(am__dirstamp) \
./Makefile.in:potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo:  \
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo:  \
./Makefile.in:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo:  \
./Makefile.in:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:  \
./Makefile.in:potential/force_field/libmbx_la-topology.lo:  \
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo@am__quote@
./Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@potential/force_field/$(DEPDIR)/libmbx_la-topology.Plo@am__quote@
./Makefile.in:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo: potential/1b/poly_1b_A1B2C4_deg5_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Tpo -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Tpo potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2C4_deg5_v1.cpp' object='potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1.cpp
./Makefile.in:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo: potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo -MD -MP -MF potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Tpo -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Tpo potential/1b/$(DEPDIR)/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp' object='potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo `test -f 'potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp
./Makefile.in:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Tpo -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Tpo potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp' object='potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp
./Makefile.in:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Tpo -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Tpo potential/3b/$(DEPDIR)/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp' object='potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liba1b2c4_la_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo: potential/1b/poly_1b_A1B2_deg4_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo `test -f 'potential/1b/poly_1b_A1B2_deg4_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg4_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2_deg4_v1x.cpp' object='potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo `test -f 'potential/1b/poly_1b_A1B2_deg4_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg4_v1x.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo: potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo: potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo `test -f 'potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo: potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp' object='potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo `test -f 'potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo: potential/1b/poly_1b_A2_deg8_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A2_deg8_grad_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_grad_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_grad_v1.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo: potential/1b/poly_1b_A2_deg8_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Tpo -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A2_deg8_nograd_v1.cpp' object='potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo `test -f 'potential/1b/poly_1b_A2_deg8_nograd_v1.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A2_deg8_nograd_v1.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo: potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp' object='potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp
./Makefile.in:potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo: potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo -MD -MP -MF potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Tpo -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Tpo potential/1b/$(DEPDIR)/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp' object='potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo `test -f 'potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo: potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo: potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo: potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo: potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo: potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo: potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo: potential/2b/poly_2b_A1B2_A1B2_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2_A1B2_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo: potential/2b/poly_2b_A1B2_A1B2_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2_A1B2_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2_A1B2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2_A1B2_v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo `test -f 'potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo: potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo: potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo: potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo: potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo: potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo: potential/2b/poly-2b-A1B2Z2_C-v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Tpo -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly-2b-A1B2Z2_C-v1.cpp' object='potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo: potential/2b/poly-2b-A1B2Z2_C-v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Tpo -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly-2b-A1B2Z2_C-v1x.cpp' object='potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo `test -f 'potential/2b/poly-2b-A1B2Z2_C-v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-A1B2Z2_C-v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo: potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo: potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo `test -f 'potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo: potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo: potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo `test -f 'potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly-2b-v6x.lo: potential/2b/poly-2b-v6x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-v6x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Tpo -c -o potential/2b/libmbx_la-poly-2b-v6x.lo `test -f 'potential/2b/poly-2b-v6x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly-2b-v6x.cpp' object='potential/2b/libmbx_la-poly-2b-v6x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-v6x.lo `test -f 'potential/2b/poly-2b-v6x.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x.cpp
./Makefile.in:potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo: potential/2b/poly-2b-v6x-nogrd.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Tpo -c -o potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo `test -f 'potential/2b/poly-2b-v6x-nogrd.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x-nogrd.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly-2b-v6x-nogrd.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly-2b-v6x-nogrd.cpp' object='potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo `test -f 'potential/2b/poly-2b-v6x-nogrd.cpp' || echo '$(srcdir)/'`potential/2b/poly-2b-v6x-nogrd.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo `test -f 'potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo: potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo: potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo `test -f 'potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo: potential/2b/poly_2b_A1_A1_deg23_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg23_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo: potential/2b/poly_2b_A1_A1_deg23_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1_A1_deg23_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo `test -f 'potential/2b/poly_2b_A1_A1_deg23_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1_A1_deg23_v1x.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp
./Makefile.in:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo -MD -MP -MF potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Tpo -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Tpo potential/2b/$(DEPDIR)/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp' object='potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo `test -f 'potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp' || echo '$(srcdir)/'`potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp' object='potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo `test -f 'potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp
./Makefile.in:potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Tpo -c -o potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo `test -f 'potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp' object='potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo `test -f 'potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp
./Makefile.in:potential/3b/libmbx_la-poly-3b-v2x.lo: potential/3b/poly-3b-v2x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly-3b-v2x.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Tpo -c -o potential/3b/libmbx_la-poly-3b-v2x.lo `test -f 'potential/3b/poly-3b-v2x.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly-3b-v2x.cpp' object='potential/3b/libmbx_la-poly-3b-v2x.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly-3b-v2x.lo `test -f 'potential/3b/poly-3b-v2x.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x.cpp
./Makefile.in:potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo: potential/3b/poly-3b-v2x-nogrd.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Tpo -c -o potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo `test -f 'potential/3b/poly-3b-v2x-nogrd.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x-nogrd.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly-3b-v2x-nogrd.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly-3b-v2x-nogrd.cpp' object='potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo `test -f 'potential/3b/poly-3b-v2x-nogrd.cpp' || echo '$(srcdir)/'`potential/3b/poly-3b-v2x-nogrd.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp' object='potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo `test -f 'potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp
./Makefile.in:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo -MD -MP -MF potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Tpo -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Tpo potential/3b/$(DEPDIR)/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp' object='potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo `test -f 'potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp' || echo '$(srcdir)/'`potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp
./Makefile.in:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo -MD -MP -MF potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Tpo potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' object='potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./Makefile.in:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo -MD -MP -MF potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Tpo potential/4b/$(DEPDIR)/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' object='potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo `test -f 'potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp' || echo '$(srcdir)/'`potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./Makefile.in:potential/force_field/libmbx_la-topology.lo: potential/force_field/topology.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT potential/force_field/libmbx_la-topology.lo -MD -MP -MF potential/force_field/$(DEPDIR)/libmbx_la-topology.Tpo -c -o potential/force_field/libmbx_la-topology.lo `test -f 'potential/force_field/topology.cpp' || echo '$(srcdir)/'`potential/force_field/topology.cpp
./Makefile.in:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) potential/force_field/$(DEPDIR)/libmbx_la-topology.Tpo potential/force_field/$(DEPDIR)/libmbx_la-topology.Plo
./Makefile.in:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='potential/force_field/topology.cpp' object='potential/force_field/libmbx_la-topology.lo' libtool=yes @AMDEPBACKSLASH@
./Makefile.in:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbx_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o potential/force_field/libmbx_la-topology.lo `test -f 'potential/force_field/topology.cpp' || echo '$(srcdir)/'`potential/force_field/topology.cpp
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp:    polynomial my_poly;
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp:    polynomial my_poly;
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.h:#include "poly_1b_A1B2_deg6_vmbpbe.h"
./potential/1b/mbnrg_1b_A1B2_deg6_vmbpbe.h:    typedef poly_A1B2_deg6_vmbpbe polynomial;
./potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp:    polynomial my_poly;
./potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp:    polynomial my_poly;
./potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/1b/mbnrg_1b_A1B3_deg5_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/1b/mbnrg_1b_A1B3_deg5_v1.h:#include "poly_1b_A1B3_deg5_v1.h"
./potential/1b/mbnrg_1b_A1B3_deg5_v1.h:    typedef poly_A1B3_deg5_v1 polynomial;
./potential/1b/mbnrg_1b_A2_deg8_v1.cpp:    polynomial my_poly;
./potential/1b/mbnrg_1b_A2_deg8_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/1b/mbnrg_1b_A2_deg8_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/1b/mbnrg_1b_A2_deg8_v1.cpp:    polynomial my_poly;
./potential/1b/mbnrg_1b_A2_deg8_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/1b/mbnrg_1b_A2_deg8_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/1b/mbnrg_1b_A2_deg8_v1.h:#include "poly_1b_A2_deg8_v1.h"
./potential/1b/mbnrg_1b_A2_deg8_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A2
./potential/1b/mbnrg_1b_A2_deg8_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A2
./potential/1b/mbnrg_1b_A2_deg8_v1.h:    typedef poly_A2_deg8_v1 polynomial;
./potential/1b/mbnrg_1b_A2_deg8_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/1b/mbnrg_1b_A2_deg8_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/1b/mbnrg_1b_A2_deg8_v1.h:    // Vector with the coefficients of the polynomials
./potential/1b/poly_1b_A1B2C4_deg5_v1.cpp:#include "poly_1b_A1B2C4_deg5_v1x.h"
./potential/1b/poly_1b_A1B2C4_deg5_v1.cpp:double poly_1b_A1B2C4_deg5_v1x::eval(const double a[2624], const double x[21]) {
./potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp:#include "poly_1b_A1B2C4_deg5_v1x.h"
./potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp:double poly_1b_A1B2C4_deg5_v1x::eval(const double a[2624], const double x[21], double g[21]) {
./potential/1b/poly_1b_A1B2C4_deg5_v1x.h:struct poly_1b_A1B2C4_deg5_v1x {
./potential/1b/poly_1b_A1B2_deg4_v1x.cpp:#include "poly_1b_A1B2_deg4_v1x.h"
./potential/1b/poly_1b_A1B2_deg4_v1x.cpp:double poly_1b_A1B2_deg4_v1x::eval(const double a[21], const double x[3], double g[3]) {
./potential/1b/poly_1b_A1B2_deg4_v1x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/1b/poly_1b_A1B2_deg4_v1x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/1b/poly_1b_A1B2_deg4_v1x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/1b/poly_1b_A1B2_deg4_v1x.h: * @file poly_1b_A1B2_deg4_v1x.h
./potential/1b/poly_1b_A1B2_deg4_v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B2 symmetry.
./potential/1b/poly_1b_A1B2_deg4_v1x.h: * @brief Namespace that encloses the A1B2 polynomial structure
./potential/1b/poly_1b_A1B2_deg4_v1x.h:struct poly_1b_A1B2_deg4_v1x {
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @brief Evaluates the polynomial of degree 3 for A1B2 symmetry.
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B2
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @param[in] a Double array of 21 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @return Value of the polynomial
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @brief Returns the number of variables of the polynomial
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @return Number of variables of the polynomial
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @brief Returns the number of terms of the polynomial
./potential/1b/poly_1b_A1B2_deg4_v1x.h:     * @return Number of terms of the polynomial
./potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp:#include "poly_1b_A1B2_deg6_vmbpbe.h"
./potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp:double poly_A1B2_deg6_vmbpbe::eval(const double x[3], const double a[49], double g[3]) {
./potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp:#include "poly_1b_A1B2_deg6_vmbpbe.h"
./potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp:double poly_A1B2_deg6_vmbpbe::eval(const double x[3], const double a[49]) {
./potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:struct poly_A1B2_deg6_vmbpbe {
./potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp:#include "poly_1b_A1B3_deg5_v1.h"
./potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp:double poly_A1B3_deg5_v1::eval(const double x[6], const double a[102], double g[6]) {
./potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp:#include "poly_1b_A1B3_deg5_v1.h"
./potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp:double poly_A1B3_deg5_v1::eval(const double x[6], const double a[102]) {
./potential/1b/poly_1b_A1B3_deg5_v1.h:struct poly_A1B3_deg5_v1 {
./potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp:#include "poly_1b_A1B4_deg5_exp0_v1x.h"
./potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp:double poly_1b_A1B4_deg5_exp0_v1x::eval(const double a[207], const double x[10]) {
./potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp:#include "poly_1b_A1B4_deg5_exp0_v1x.h"
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp:double poly_1b_A1B4_deg5_exp0_v1x::eval(const double a[207], const double x[10], double g[10]) {
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h: * @file poly_1b_A1B4_deg5_exp0_v1x.h
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B4 symmetry.
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h: * @brief Namespace that encloses the A1B4 polynomial structure
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:struct poly_1b_A1B4_deg5_exp0_v1x {
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @brief Evaluates the polynomial of degree 5 for A1B4 symmetry.
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B4
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @param[in] a Double array of 207 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @return Value of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @brief Evaluates the polynomial of degree 5 for A1B4 symmetry.
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B4
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @param[in] a Double array of 207 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @return Value of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @brief Returns the number of variables of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @return Number of variables of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @brief Returns the number of terms of the polynomial
./potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:     * @return Number of terms of the polynomial
./potential/1b/poly_1b_A2_deg8_grad_v1.cpp:#include "poly_1b_A2_deg8_v1.h"
./potential/1b/poly_1b_A2_deg8_grad_v1.cpp: * @file poly_1b_A2_deg8_grad_v1.cpp
./potential/1b/poly_1b_A2_deg8_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A2
./potential/1b/poly_1b_A2_deg8_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A2
./potential/1b/poly_1b_A2_deg8_grad_v1.cpp:double poly_A2_deg8_v1::eval(const double x[1], const double a[8], double g[1]) {
./potential/1b/poly_1b_A2_deg8_nograd_v1.cpp:#include "poly_1b_A2_deg8_v1.h"
./potential/1b/poly_1b_A2_deg8_nograd_v1.cpp: * @file poly_1b_A2_deg8_nograd_v1.cpp
./potential/1b/poly_1b_A2_deg8_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A2
./potential/1b/poly_1b_A2_deg8_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A2
./potential/1b/poly_1b_A2_deg8_nograd_v1.cpp:double poly_A2_deg8_v1::eval(const double x[1], const double a[8]) {
./potential/1b/poly_1b_A2_deg8_v1.h: * @file poly_1b_A2_deg8_v1.h
./potential/1b/poly_1b_A2_deg8_v1.h: * @brief Contains the structure of the polynomial for symmetry A2
./potential/1b/poly_1b_A2_deg8_v1.h: * @brief Encloses the structure of the polynomial for symmetry A2
./potential/1b/poly_1b_A2_deg8_v1.h:struct poly_A2_deg8_v1 {
./potential/1b/poly_1b_A2_deg8_v1.h:    // Degree of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @brief Evaluates the polynomial of degree 8 for A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/1b/poly_1b_A2_deg8_v1.h:     * evaluates the polynomial for the A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * @param[in] a Double array of 8 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @return Value of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @brief Evaluates the polynomial of degree 8 for A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/1b/poly_1b_A2_deg8_v1.h:     * evaluates the polynomial for the A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * It uses the direct, non optimized polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @param[in] a Double array of 8 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @return Value of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @brief Evaluates the polynomial of degree 8 for A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/1b/poly_1b_A2_deg8_v1.h:     * evaluates the polynomial for the A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * @param[in] a Double array of 8 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @return Value of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @brief Evaluates the polynomial of degree 8 for A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/1b/poly_1b_A2_deg8_v1.h:     * evaluates the polynomial for the A2 symmetry.
./potential/1b/poly_1b_A2_deg8_v1.h:     * It uses the direct, non optimized polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @param[in] a Double array of 8 elements with the linear parameters of the polynomial
./potential/1b/poly_1b_A2_deg8_v1.h:     * @return Value of the polynomial
./potential/1b/ps.cpp:    // Calculate the dipole moment
./potential/1b/ps.h: * @brief Computes the dipole surface and the charges
./potential/1b/x1b_A1B2C4_deg5_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v);
./potential/1b/x1b_A1B2C4_deg5_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/1b/x1b_A1B2C4_deg5_v1x.h:#include "poly_1b_A1B2C4_deg5_v1x.h"
./potential/1b/x1b_A1B2C4_deg5_v1x.h:    typedef poly_1b_A1B2C4_deg5_v1x polynomial;
./potential/1b/x1b_A1B2_deg4_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), x, g);
./potential/1b/x1b_A1B2_deg4_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), x, g);
./potential/1b/x1b_A1B2_deg4_v1x.h:#include "potential/1b/poly_1b_A1B2_deg4_v1x.h"
./potential/1b/x1b_A1B2_deg4_v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2
./potential/1b/x1b_A1B2_deg4_v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2
./potential/1b/x1b_A1B2_deg4_v1x.h:    typedef poly_1b_A1B2_deg4_v1x polynomial;
./potential/1b/x1b_A1B2_deg4_v1x.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/1b/x1b_A1B2_deg4_v1x.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/1b/x1b_A1B2_deg4_v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/1b/x1b_A1B2_deg4_v1x.h:    // Values of the linear parameters of the polynomials
./potential/1b/x1b_A1B4_deg5_exp0_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v);
./potential/1b/x1b_A1B4_deg5_exp0_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h:#include "poly_1b_A1B4_deg5_exp0_v1x.h"
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B4
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B4
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h:    typedef poly_1b_A1B4_deg5_exp0_v1x polynomial;
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/1b/x1b_A1B4_deg5_exp0_v1x.h:    // Values of the linear parameters of the polynomials
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo: \
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo:potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo: \
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h
./potential/1b/.deps/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./potential/1b/.deps/liba1b2c4_la-x1b_A1B2C4_deg5_v1x.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./potential/1b/.deps/liba1b2c4_la-x1b_A1B2C4_deg5_v1x.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./potential/1b/.deps/libmbx_la-energy1b.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./potential/1b/.deps/libmbx_la-energy1b.Plo: potential/1b/poly_1b_A1B2_deg4_v1x.h potential/1b/mbnrg_1b_A2_deg8_v1.h \
./potential/1b/.deps/libmbx_la-energy1b.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h \
./potential/1b/.deps/libmbx_la-energy1b.Plo: potential/1b/poly_1b_A1B2C4_deg5_v1x.h \
./potential/1b/.deps/libmbx_la-energy1b.Plo: potential/1b/mbnrg_1b_A1B3_deg5_v1.h potential/1b/poly_1b_A1B3_deg5_v1.h \
./potential/1b/.deps/libmbx_la-energy1b.Plo: potential/1b/poly_1b_A1B2_deg6_vmbpbe.h tools/definitions.h \
./potential/1b/.deps/libmbx_la-energy1b.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./potential/1b/.deps/libmbx_la-energy1b.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./potential/1b/.deps/libmbx_la-energy1b.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./potential/1b/.deps/libmbx_la-energy1b.Plo:potential/1b/poly_1b_A1B2C4_deg5_v1x.h:
./potential/1b/.deps/libmbx_la-energy1b.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./potential/1b/.deps/libmbx_la-energy1b.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./potential/1b/.deps/libmbx_la-mbnrg_1b_A1B2_deg6_vmbpbe.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A1B2_deg6_vmbpbe.h
./potential/1b/.deps/libmbx_la-mbnrg_1b_A1B2_deg6_vmbpbe.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./potential/1b/.deps/libmbx_la-mbnrg_1b_A1B3_deg5_v1.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A1B3_deg5_v1.h
./potential/1b/.deps/libmbx_la-mbnrg_1b_A1B3_deg5_v1.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./potential/1b/.deps/libmbx_la-mbnrg_1b_A2_deg8_v1.Plo: tools/water_monomer_lp.h potential/1b/poly_1b_A2_deg8_v1.h
./potential/1b/.deps/libmbx_la-mbnrg_1b_A2_deg8_v1.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo:potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo: potential/1b/poly_1b_A1B2_deg4_v1x.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo: potential/1b/poly_1b_A1B2_deg4_v1x.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg4_v1x.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo:potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo: potential/1b/poly_1b_A1B2_deg6_grad_vmbpbe.cpp \
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo: /usr/include/stdc-predef.h potential/1b/poly_1b_A1B2_deg6_vmbpbe.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo:potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo: potential/1b/poly_1b_A1B2_deg6_nograd_vmbpbe.cpp \
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo: /usr/include/stdc-predef.h potential/1b/poly_1b_A1B2_deg6_vmbpbe.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.Plo:potential/1b/poly_1b_A1B2_deg6_vmbpbe.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo:potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo: potential/1b/poly_1b_A1B3_deg5_grad_v1.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo: potential/1b/poly_1b_A1B3_deg5_v1.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_grad_v1.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo:potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo: potential/1b/poly_1b_A1B3_deg5_nograd_v1.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo: potential/1b/poly_1b_A1B3_deg5_v1.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.Plo:potential/1b/poly_1b_A1B3_deg5_v1.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo:potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h
./potential/1b/.deps/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo:potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo: potential/1b/poly_1b_A2_deg8_grad_v1.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo: potential/1b/poly_1b_A2_deg8_v1.h
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_grad_v1.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo:potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo: \
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo: potential/1b/poly_1b_A2_deg8_nograd_v1.cpp /usr/include/stdc-predef.h \
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo: potential/1b/poly_1b_A2_deg8_v1.h
./potential/1b/.deps/libmbx_la-poly_1b_A2_deg8_nograd_v1.Plo:potential/1b/poly_1b_A2_deg8_v1.h:
./potential/1b/.deps/libmbx_la-x1b_A1B2_deg4_v1x.Plo: potential/1b/x1b_A1B2_deg4_v1x.h potential/1b/poly_1b_A1B2_deg4_v1x.h \
./potential/1b/.deps/libmbx_la-x1b_A1B2_deg4_v1x.Plo:potential/1b/poly_1b_A1B2_deg4_v1x.h:
./potential/1b/.deps/libmbx_la-x1b_A1B4_deg5_exp0_v1x.Plo: potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h \
./potential/1b/.deps/libmbx_la-x1b_A1B4_deg5_exp0_v1x.Plo:potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h:
Binary file ./potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.o matches
./potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo:# potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B3_deg5_nograd_v1.lo:non_pic_object='libmbx_la-poly_1b_A1B3_deg5_nograd_v1.o'
Binary file ./potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.o matches
./potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo:# potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B2_deg4_v1x.lo:non_pic_object='libmbx_la-poly_1b_A1B2_deg4_v1x.o'
Binary file ./potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.o matches
Binary file ./potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.o matches
Binary file ./potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.o matches
./potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo:# potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A2_deg8_nograd_v1.lo:non_pic_object='libmbx_la-poly_1b_A2_deg8_nograd_v1.o'
./potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo:# potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.lo:non_pic_object='libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.o'
./potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo:# potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.lo:non_pic_object='libmbx_la-poly_1b_A1B2_deg6_nograd_vmbpbe.o'
./potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo:# potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A2_deg8_grad_v1.lo:non_pic_object='libmbx_la-poly_1b_A2_deg8_grad_v1.o'
Binary file ./potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.o matches
Binary file ./potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.o matches
./potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo:# potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.lo:non_pic_object='libmbx_la-poly_1b_A1B2_deg6_grad_vmbpbe.o'
./potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo:# potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B3_deg5_grad_v1.lo:non_pic_object='libmbx_la-poly_1b_A1B3_deg5_grad_v1.o'
Binary file ./potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.o matches
Binary file ./potential/1b/libmbx_la-x1b_A1B4_deg5_exp0_v1x.o matches
./potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo:# potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo - a libtool object file
./potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1.lo:non_pic_object='libmbx_la-poly_1b_A1B4_deg5_exp0_v1.o'
Binary file ./potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.o matches
./potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo:# potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo - a libtool object file
./potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.lo:non_pic_object='liba1b2c4_la-poly_1b_A1B2C4_deg5_v1.o'
Binary file ./potential/1b/libmbx_la-mbnrg_1b_A1B2_deg6_vmbpbe.o matches
Binary file ./potential/1b/libmbx_la-mbnrg_1b_A2_deg8_v1.o matches
Binary file ./potential/1b/libmbx_la-mbnrg_1b_A1B3_deg5_v1.o matches
Binary file ./potential/1b/libmbx_la-poly_1b_A1B4_deg5_exp0_v1x.o matches
Binary file ./potential/1b/libmbx_la-x1b_A1B2_deg4_v1x.o matches
Binary file ./potential/1b/liba1b2c4_la-x1b_A1B2C4_deg5_v1x.o matches
Binary file ./potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.o matches
./potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo:# potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo - a libtool object file
./potential/1b/liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.lo:non_pic_object='liba1b2c4_la-poly_1b_A1B2C4_deg5_v1x.o'
./potential/2b/energy2b.cpp:        // The order is bc the poly were generated this way
./potential/2b/energy2b.cpp:        // The order is bc the poly were generated this way
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:#include "poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h"
./potential/2b/mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:    typedef poly_A1B2Z2_A1B2Z2_deg4_vmbpbe polynomial;
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h:#include "poly_2b_A1B2Z2_C2_deg5_v1.h"
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2Z2_C2
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2Z2_C2
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h:    typedef poly_A1B2Z2_C2_deg5_v1 polynomial;
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1B2Z2_C2_deg5_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.h:#include "poly_2b_A1B3_A1B3_deg4_v1.h"
./potential/2b/mbnrg_2b_A1B3_A1B3_deg4_v1.h:    typedef poly_A1B3_A1B3_deg4_v1 polynomial;
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h:#include "poly_2b_A1B4_C1D2_deg4_v1.h"
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1B4_C1D2
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B4_C1D2
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h:    typedef poly_A1B4_C1D2_deg4_v1 polynomial;
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1B4_C1D2_deg4_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h:#include "poly_2b_A1_A1_deg9_v1.h"
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1_A1
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1_A1
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h:    typedef poly_A1_A1_deg9_v1 polynomial;
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_A1_deg9_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:    // F no-TTM, effective pol, new switching
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:    // Br no-TTM, effective pol, new switching
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:    // I no-TTM, effective pol, new switching, PP scalar-relativistic
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h:#include "poly_2b_A1_B1C2X2_deg5_v1.h"
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1_B1C2X2
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1_B1C2X2
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h:    typedef poly_A1_B1C2X2_deg5_v1 polynomial;
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_B1C2X2_deg5_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h:#include "poly_2b_A1_B1_deg9_v1.h"
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1_B1
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1_B1
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h:    typedef poly_A1_B1_deg9_v1 polynomial;
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_B1_deg9_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h:#include "poly_2b_A1_B2_deg7_v1.h"
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1_B2
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1_B2
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h:    typedef poly_A1_B2_deg7_v1 polynomial;
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A1_B2_deg7_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp:    polynomial my_poly;
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h:#include "poly_2b_A2_A2_deg6_v1.h"
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A2_A2
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A2_A2
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h:    typedef poly_A2_A2_deg6_v1 polynomial;
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/2b/mbnrg_2b_A2_A2_deg6_v1.h:    // Vector with the coefficients of the polynomials
./potential/2b/poly-2b-A1B2Z2_C-v1.cpp:#include "poly-2b-A1B2Z2_C-v1x.h"
./potential/2b/poly-2b-A1B2Z2_C-v1.cpp:std::vector<double> poly_2b_h2o_ion_v1x::eval(const size_t nd, const double a[429], const double* x) {
./potential/2b/poly-2b-A1B2Z2_C-v1x.cpp:#include "poly-2b-A1B2Z2_C-v1x.h"
./potential/2b/poly-2b-A1B2Z2_C-v1x.cpp:std::vector<double> poly_2b_h2o_ion_v1x::eval(const size_t nd, const double a[429], const double* x, double* g) {
./potential/2b/poly-2b-A1B2Z2_C-v1x.cpp:    std::cerr << "Input polynomial variables (x) [vectorizable order!]:\n";
./potential/2b/poly-2b-A1B2Z2_C-v1x.cpp:    std::cerr << "Output polynomial gradients (g) [vectorizable order!]:\n";
./potential/2b/poly-2b-A1B2Z2_C-v1x.h: * @file poly-2b-A1B2Z2_C-v1x.h
./potential/2b/poly-2b-A1B2Z2_C-v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B2Z2_C1 symmetry.
./potential/2b/poly-2b-A1B2Z2_C-v1x.h: * @brief Namespace that encloses the A1B2Z2_C1 polynomial structure for monoatomic ions- water
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:struct poly_2b_h2o_ion_v1x {
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:    // Degree of the polynomial
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * @brief Evaluates the polynomial of degree 5 for A1B2Z2_C1 symmetry.
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B2Z2_C1
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * @param[in] a Double array of 429 elements with the linear parameters of the polynomial
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * @return Vector of nd elements with the polynomial evaluation of each system
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * @brief Evaluates the polynomial of degree 5 for A1B2Z2_C1 symmetry.
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B2Z2_C1
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * @param[in] a Double array of 429 elements with the linear parameters of the polynomial
./potential/2b/poly-2b-A1B2Z2_C-v1x.h:     * @return Vector of nd elements with the polynomial evaluation of each system
./potential/2b/poly-2b-v6x-nogrd.cpp:#include "potential/2b/poly-2b-v6x.h"
./potential/2b/poly-2b-v6x-nogrd.cpp:std::vector<double> poly_2b_v6x::eval(const size_t nd, const double* a, const double* x) {
./potential/2b/poly-2b-v6x.cpp:#include "potential/2b/poly-2b-v6x.h"
./potential/2b/poly-2b-v6x.cpp:std::vector<double> poly_2b_v6x::eval(const size_t nd, const double* a, const double* x, double* g) {
./potential/2b/poly-2b-v6x.cpp:    std::cerr << "Input polynomial variables (x) [vectorizable order!]:\n";
./potential/2b/poly-2b-v6x.cpp:    std::cerr << "Output polynomial gradients (g) [vectorizable order!]:\n";
./potential/2b/poly-2b-v6x.h: * @file poly-2b-v6x.h
./potential/2b/poly-2b-v6x.h: * @brief Contains the structure that allows the evaluation of the polynomial for water (MB-pol).
./potential/2b/poly-2b-v6x.h: * @brief Namespace that encloses the MB-pol 2b polynomial structure
./potential/2b/poly-2b-v6x.h:struct poly_2b_v6x {
./potential/2b/poly-2b-v6x.h:    // Degree of the polynomial
./potential/2b/poly-2b-v6x.h:     * @brief Evaluates the polynomial of degree 4 for MB-pol 2b
./potential/2b/poly-2b-v6x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the two-body
./potential/2b/poly-2b-v6x.h:     * interactions for water. This is the 2b correction for MB-pol water
./potential/2b/poly-2b-v6x.h:     * @param[in] a Double array of 1153 elements with the linear parameters of the polynomial
./potential/2b/poly-2b-v6x.h:     * @return Vector of nd elements with the polynomial evaluation of each system
./potential/2b/poly-2b-v6x.h:     * @brief Evaluates the polynomial of degree 4 for MB-pol 2b
./potential/2b/poly-2b-v6x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the two-body
./potential/2b/poly-2b-v6x.h:     * interactions for water. This is the 2b correction for MB-pol water. It also calculates the gradients dP/dxi.
./potential/2b/poly-2b-v6x.h:     * @param[in] a Double array of 1153 elements with the linear parameters of the polynomial
./potential/2b/poly-2b-v6x.h:     * @return Vector of nd elements with the polynomial evaluation of each system
./potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp:#include "poly_2b_A1B2C4_D1E2_deg3_v1x.h"
./potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp:double poly_2b_A1B2C4_D1E2_deg3_v1x::eval(const double a[983], const double x[45]) {
./potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp:#include "poly_2b_A1B2C4_D1E2_deg3_v1x.h"
./potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp:double poly_2b_A1B2C4_D1E2_deg3_v1x::eval(const double a[983], const double x[45], double g[45]) {
./potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:struct poly_2b_A1B2C4_D1E2_deg3_v1x {
./potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp:#include "poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h"
./potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp:double poly_A1B2Z2_A1B2Z2_deg4_vmbpbe::eval(const double x[31], const double a[1153], double g[31]) {
./potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp:#include "poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h"
./potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp:double poly_A1B2Z2_A1B2Z2_deg4_vmbpbe::eval(const double x[31], const double a[1153]) {
./potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:struct poly_A1B2Z2_A1B2Z2_deg4_vmbpbe {
./potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp:#include "poly_2b_A1B2Z2_C1D2_v1x.h"
./potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp:double poly_2b_A1B2Z2_C1D2_deg4_v1x::eval(const double a[1653], const double x[21]) {
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp:#include "poly_2b_A1B2Z2_C1D2_v1x.h"
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp:double poly_2b_A1B2Z2_C1D2_deg4_v1x::eval(const double a[1653], const double x[21], double g[21]) {
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h: * @file poly_2b_A1B2Z2_C1D2_v1x.h
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B2Z2_C1D2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h: * @brief Namespace that encloses the A1B2Z2_C1D2 polynomial structure
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:struct poly_2b_A1B2Z2_C1D2_deg4_v1x {
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @brief Evaluates the polynomial of degree 4 for A1B2Z2_C1D2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @param[in] a Double array of 1653 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @brief Evaluates the polynomial of degree 4 for A1B2Z2_C1D2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @param[in] a Double array of 1653 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @brief Returns the number of variables of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @return Number of variables of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @brief Returns the number of terms of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:     * @return Number of terms of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp:#include "poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h"
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp:double poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x::eval(const double a[603], const double x[38]) {
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:#include "poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h"
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:double poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x::eval(const double a[603], const double x[38], double g[38]) {
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h: * @file poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B2Z2_C1D4 symmetry.
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h: * @brief Namespace that encloses the A1B2Z2_C1D4 polynomial structure
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:struct poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x {
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @brief Evaluates the polynomial of degree 3 for A1B2Z2_C1D4 symmetry.
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @param[in] a Double array of 603 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @brief Evaluates the polynomial of degree 3 for A1B2Z2_C1D4 symmetry.
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @param[in] a Double array of 603 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @brief Returns the number of variables of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @return Number of variables of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @brief Returns the number of terms of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @return Number of terms of the polynomial
./potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp:#include "poly_2b_A1B2Z2_C1_deg5_v1x.h"
./potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp:double poly_2b_A1B2Z2_C1_deg5_v1x::eval(const double a[496], const double x[8])
./potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp:#include "poly_2b_A1B2Z2_C1_deg5_v1x.h"
./potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp:double poly_2b_A1B2Z2_C1_deg5_v1x::eval(const double a[496], const double x[8],
./potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:struct poly_2b_A1B2Z2_C1_deg5_v1x {
./potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp:#include "poly_2b_A1B2Z2_C2_deg5_v1.h"
./potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp: * @file poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp
./potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1B2Z2_C2
./potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1B2Z2_C2
./potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp:double poly_A1B2Z2_C2_deg5_v1::eval(const double x[14], const double a[933], double g[14]) {
./potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp:#include "poly_2b_A1B2Z2_C2_deg5_v1.h"
./potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp: * @file poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp
./potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1B2Z2_C2
./potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1B2Z2_C2
./potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp:double poly_A1B2Z2_C2_deg5_v1::eval(const double x[14], const double a[933]) {
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h: * @file poly_2b_A1B2Z2_C2_deg5_v1.h
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h: * @brief Contains the structure of the polynomial for symmetry A1B2Z2_C2
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1B2Z2_C2
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:struct poly_A1B2Z2_C2_deg5_v1 {
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * evaluates the polynomial for the A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @param[in] a Double array of 933 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * evaluates the polynomial for the A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @param[in] a Double array of 933 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * evaluates the polynomial for the A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @param[in] a Double array of 933 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * evaluates the polynomial for the A1B2Z2_C2 symmetry.
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @param[in] a Double array of 933 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1.cpp:#include "poly_2b_A1B2_A1B2_v1x.h"
./potential/2b/poly_2b_A1B2_A1B2_v1.cpp:double poly_2b_A1B2_A1B2_deg5_v1x::eval(const double a[2269], const double x[15]) {
./potential/2b/poly_2b_A1B2_A1B2_v1x.cpp:#include "poly_2b_A1B2_A1B2_v1x.h"
./potential/2b/poly_2b_A1B2_A1B2_v1x.cpp:double poly_2b_A1B2_A1B2_deg5_v1x::eval(const double a[2269], const double x[15], double g[15]) {
./potential/2b/poly_2b_A1B2_A1B2_v1x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/2b/poly_2b_A1B2_A1B2_v1x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/2b/poly_2b_A1B2_A1B2_v1x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/2b/poly_2b_A1B2_A1B2_v1x.h: * @file poly_2b_A1B2_A1B2_v1x.h
./potential/2b/poly_2b_A1B2_A1B2_v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B2_A1B2 symmetry.
./potential/2b/poly_2b_A1B2_A1B2_v1x.h: * @brief Namespace that encloses the A1B2_A1B2 polynomial structure
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:struct poly_2b_A1B2_A1B2_deg5_v1x {
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @brief Evaluates the polynomial of degree 5 for A1B2_A1B2 symmetry.
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B2_A1B2
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @param[in] a Double array of 2269 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @brief Evaluates the polynomial of degree 5 for A1B2_A1B2 symmetry.
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B2_A1B2
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @param[in] a Double array of 2269 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @brief Returns the number of variables of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @return Number of variables of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @brief Returns the number of terms of the polynomial
./potential/2b/poly_2b_A1B2_A1B2_v1x.h:     * @return Number of terms of the polynomial
./potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp:#include "poly_2b_A1B3_A1B3_deg4_v1.h"
./potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp:double poly_A1B3_A1B3_deg4_v1::eval(const double x[28], const double a[1115], double g[28]) {
./potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp:#include "poly_2b_A1B3_A1B3_deg4_v1.h"
./potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp:double poly_A1B3_A1B3_deg4_v1::eval(const double x[28], const double a[1115]) {
./potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:struct poly_A1B3_A1B3_deg4_v1 {
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp:#include "poly_2b_A1B4_A1B4_deg4_exp0_v1x.h"
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp:double poly_2b_A1B4_A1B4_deg4_exp0_v1x::eval(const double a[1345], const double x[45]) {
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp:#include "poly_2b_A1B4_A1B4_deg4_exp0_v1x.h"
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp:double poly_2b_A1B4_A1B4_deg4_exp0_v1x::eval(const double a[1345], const double x[45], double g[45]) {
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h: * @file poly_2b_A1B4_A1B4_deg4_exp0_v1x.h
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B4_A1B4 symmetry.
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h: * @brief Namespace that encloses the A1B4_A1B4 polynomial structure
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:struct poly_2b_A1B4_A1B4_deg4_exp0_v1x {
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @brief Evaluates the polynomial of degree 4 for A1B4_A1B4 symmetry.
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B4_A1B4
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @param[in] a Double array of 1345 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @brief Evaluates the polynomial of degree 4 for A1B4_A1B4 symmetry.
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the A1B4_A1B4
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @param[in] a Double array of 1345 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @brief Returns the number of variables of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @return Number of variables of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @brief Returns the number of terms of the polynomial
./potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @return Number of terms of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp:#include "poly_2b_A1B4_C1D2_deg4_v1.h"
./potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp: * @file poly_2b_A1B4_C1D2_deg4_grad_v1.cpp
./potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1B4_C1D2
./potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1B4_C1D2
./potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp:double poly_A1B4_C1D2_deg4_v1::eval(const double x[28], const double a[1828], double g[28]) {
./potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp:#include "poly_2b_A1B4_C1D2_deg4_v1.h"
./potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp: * @file poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp
./potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1B4_C1D2
./potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1B4_C1D2
./potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp:double poly_A1B4_C1D2_deg4_v1::eval(const double x[28], const double a[1828]) {
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h: * @file poly_2b_A1B4_C1D2_deg4_v1.h
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h: * @brief Contains the structure of the polynomial for symmetry A1B4_C1D2
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1B4_C1D2
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:struct poly_A1B4_C1D2_deg4_v1 {
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * evaluates the polynomial for the A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @param[in] a Double array of 1828 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * evaluates the polynomial for the A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @param[in] a Double array of 1828 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * evaluates the polynomial for the A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @param[in] a Double array of 1828 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * evaluates the polynomial for the A1B4_C1D2 symmetry.
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @param[in] a Double array of 1828 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_A1_deg23_v1.cpp:#include "poly_2b_A1_A1_deg23_v1x.h"
./potential/2b/poly_2b_A1_A1_deg23_v1.cpp:double poly_2b_A1_A1_deg23_v1x::eval(const double a[23], const double x[1])
./potential/2b/poly_2b_A1_A1_deg23_v1x.cpp:#include "poly_2b_A1_A1_deg23_v1x.h"
./potential/2b/poly_2b_A1_A1_deg23_v1x.cpp:double poly_2b_A1_A1_deg23_v1x::eval(const double a[23], const double x[1],
./potential/2b/poly_2b_A1_A1_deg23_v1x.h:struct poly_2b_A1_A1_deg23_v1x {
./potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp:#include "poly_2b_A1_A1_deg9_v1.h"
./potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp: * @file poly_2b_A1_A1_deg9_grad_v1.cpp
./potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1_A1
./potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1_A1
./potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp:double poly_A1_A1_deg9_v1::eval(const double x[1], const double a[9], double g[1]) {
./potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp:#include "poly_2b_A1_A1_deg9_v1.h"
./potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp: * @file poly_2b_A1_A1_deg9_nograd_v1.cpp
./potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1_A1
./potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1_A1
./potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp:double poly_A1_A1_deg9_v1::eval(const double x[1], const double a[9]) {
./potential/2b/poly_2b_A1_A1_deg9_v1.h: * @file poly_2b_A1_A1_deg9_v1.h
./potential/2b/poly_2b_A1_A1_deg9_v1.h: * @brief Contains the structure of the polynomial for symmetry A1_A1
./potential/2b/poly_2b_A1_A1_deg9_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1_A1
./potential/2b/poly_2b_A1_A1_deg9_v1.h:struct poly_A1_A1_deg9_v1 {
./potential/2b/poly_2b_A1_A1_deg9_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * evaluates the polynomial for the A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * evaluates the polynomial for the A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * evaluates the polynomial for the A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * evaluates the polynomial for the A1_A1 symmetry.
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_A1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp:#include "poly_2b_A1_B1C2X2_deg5_v1.h"
./potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp: * @file poly_2b_A1_B1C2X2_deg5_grad_v1.cpp
./potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1_B1C2X2
./potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1_B1C2X2
./potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp:double poly_A1_B1C2X2_deg5_v1::eval(const double x[8], const double a[496], double g[8]) {
./potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp:#include "poly_2b_A1_B1C2X2_deg5_v1.h"
./potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp: * @file poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp
./potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1_B1C2X2
./potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1_B1C2X2
./potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp:double poly_A1_B1C2X2_deg5_v1::eval(const double x[8], const double a[496]) {
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h: * @file poly_2b_A1_B1C2X2_deg5_v1.h
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h: * @brief Contains the structure of the polynomial for symmetry A1_B1C2X2
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1_B1C2X2
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:struct poly_A1_B1C2X2_deg5_v1 {
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * evaluates the polynomial for the A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @param[in] a Double array of 496 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * evaluates the polynomial for the A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @param[in] a Double array of 496 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * evaluates the polynomial for the A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @param[in] a Double array of 496 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @brief Evaluates the polynomial of degree 5 for A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * evaluates the polynomial for the A1_B1C2X2 symmetry.
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @param[in] a Double array of 496 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp:#include "poly_2b_A1_B1_deg9_v1.h"
./potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp: * @file poly_2b_A1_B1_deg9_grad_v1.cpp
./potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1_B1
./potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1_B1
./potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp:double poly_A1_B1_deg9_v1::eval(const double x[1], const double a[9], double g[1]) {
./potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp:#include "poly_2b_A1_B1_deg9_v1.h"
./potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp: * @file poly_2b_A1_B1_deg9_nograd_v1.cpp
./potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1_B1
./potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1_B1
./potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp:double poly_A1_B1_deg9_v1::eval(const double x[1], const double a[9]) {
./potential/2b/poly_2b_A1_B1_deg9_v1.h: * @file poly_2b_A1_B1_deg9_v1.h
./potential/2b/poly_2b_A1_B1_deg9_v1.h: * @brief Contains the structure of the polynomial for symmetry A1_B1
./potential/2b/poly_2b_A1_B1_deg9_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1_B1
./potential/2b/poly_2b_A1_B1_deg9_v1.h:struct poly_A1_B1_deg9_v1 {
./potential/2b/poly_2b_A1_B1_deg9_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * evaluates the polynomial for the A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * evaluates the polynomial for the A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * evaluates the polynomial for the A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @brief Evaluates the polynomial of degree 9 for A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * evaluates the polynomial for the A1_B1 symmetry.
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @param[in] a Double array of 9 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B1_deg9_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp:#include "poly_2b_A1_B2_deg7_v1.h"
./potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp: * @file poly_2b_A1_B2_deg7_grad_v1.cpp
./potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1_B2
./potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1_B2
./potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp:double poly_A1_B2_deg7_v1::eval(const double x[3], const double a[62], double g[3]) {
./potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp:#include "poly_2b_A1_B2_deg7_v1.h"
./potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp: * @file poly_2b_A1_B2_deg7_nograd_v1.cpp
./potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1_B2
./potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1_B2
./potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp:double poly_A1_B2_deg7_v1::eval(const double x[3], const double a[62]) {
./potential/2b/poly_2b_A1_B2_deg7_v1.h: * @file poly_2b_A1_B2_deg7_v1.h
./potential/2b/poly_2b_A1_B2_deg7_v1.h: * @brief Contains the structure of the polynomial for symmetry A1_B2
./potential/2b/poly_2b_A1_B2_deg7_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1_B2
./potential/2b/poly_2b_A1_B2_deg7_v1.h:struct poly_A1_B2_deg7_v1 {
./potential/2b/poly_2b_A1_B2_deg7_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @brief Evaluates the polynomial of degree 7 for A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * evaluates the polynomial for the A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @param[in] a Double array of 62 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @brief Evaluates the polynomial of degree 7 for A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * evaluates the polynomial for the A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @param[in] a Double array of 62 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @brief Evaluates the polynomial of degree 7 for A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * evaluates the polynomial for the A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @param[in] a Double array of 62 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @brief Evaluates the polynomial of degree 7 for A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * evaluates the polynomial for the A1_B2 symmetry.
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @param[in] a Double array of 62 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A1_B2_deg7_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp:#include "poly_2b_A2_A2_deg6_v1.h"
./potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp: * @file poly_2b_A2_A2_deg6_grad_v1.cpp
./potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A2_A2
./potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A2_A2
./potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp:double poly_A2_A2_deg6_v1::eval(const double x[6], const double a[151], double g[6]) {
./potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp:#include "poly_2b_A2_A2_deg6_v1.h"
./potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp: * @file poly_2b_A2_A2_deg6_nograd_v1.cpp
./potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A2_A2
./potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A2_A2
./potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp:double poly_A2_A2_deg6_v1::eval(const double x[6], const double a[151]) {
./potential/2b/poly_2b_A2_A2_deg6_v1.h: * @file poly_2b_A2_A2_deg6_v1.h
./potential/2b/poly_2b_A2_A2_deg6_v1.h: * @brief Contains the structure of the polynomial for symmetry A2_A2
./potential/2b/poly_2b_A2_A2_deg6_v1.h: * @brief Encloses the structure of the polynomial for symmetry A2_A2
./potential/2b/poly_2b_A2_A2_deg6_v1.h:struct poly_A2_A2_deg6_v1 {
./potential/2b/poly_2b_A2_A2_deg6_v1.h:    // Degree of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @brief Evaluates the polynomial of degree 6 for A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * evaluates the polynomial for the A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @param[in] a Double array of 151 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @brief Evaluates the polynomial of degree 6 for A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * evaluates the polynomial for the A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @param[in] a Double array of 151 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @brief Evaluates the polynomial of degree 6 for A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * evaluates the polynomial for the A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @param[in] a Double array of 151 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @return Value of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @brief Evaluates the polynomial of degree 6 for A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * evaluates the polynomial for the A2_A2 symmetry.
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * It uses the direct, non optimized polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @param[in] a Double array of 151 elements with the linear parameters of the polynomial
./potential/2b/poly_2b_A2_A2_deg6_v1.h:     * @return Value of the polynomial
./potential/2b/x2b-A1B2Z2_C-v1x.cpp:        // Get the polynomial monomials
./potential/2b/x2b-A1B2Z2_C-v1x.cpp:    std::vector<double> e2b = poly_2b_h2o_ion_v1x::eval(dimers_todo.size(), twobodyfit.data(), vv);
./potential/2b/x2b-A1B2Z2_C-v1x.cpp:        // Get the polynomial monomials
./potential/2b/x2b-A1B2Z2_C-v1x.cpp:    std::vector<double> e2b = poly_2b_h2o_ion_v1x::eval(ndtd, twobodyfit.data(), vv, gg);
./potential/2b/x2b-A1B2Z2_C-v1x.h:#include "poly-2b-A1B2Z2_C-v1x.h"
./potential/2b/x2b-A1B2Z2_C-v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2Z2_C
./potential/2b/x2b-A1B2Z2_C-v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2Z2_C
./potential/2b/x2b-A1B2Z2_C-v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b-A1B2Z2_C-v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b-A1B2Z2_C-v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b-A1B2Z2_C-v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b-A1B2Z2_C-v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/2b/x2b-A1B2Z2_C-v1x.h:    // Values of the linear parameters of the polynomials
./potential/2b/x2b-v9x.cpp:        double v[31];  // stored separately (gets passed to poly::eval)
./potential/2b/x2b-v9x.cpp:    std::vector<double> e2b = poly_2b_v6x::eval(dimers_todo.size(), thefit, vv);
./potential/2b/x2b-v9x.cpp:        double v[31];  // stored separately (gets passed to poly::eval)
./potential/2b/x2b-v9x.cpp:    std::vector<double> e2b = poly_2b_v6x::eval(ndtd, thefit, vv, gg);
./potential/2b/x2b-v9x.h:#include "potential/2b/poly-2b-v6x.h"
./potential/2b/x2b-v9x.h: * @brief Contains the structure of the polynomial holder for MB-pol 2b
./potential/2b/x2b-v9x.h: * @brief Encloses the structure of the polynomial holder for symmetry MB-pol 2b
./potential/2b/x2b-v9x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b-v9x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b-v9x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b-v9x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b-v9x.h:    // Values of the non-linear parameters of the polynomials
./potential/2b/x2b_A1B2C4_D1E2_deg3_v1x.cpp:        energies[j] = sw * polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1B2C4_D1E2_deg3_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1B2C4_D1E2_deg3_v1x.h:#include "poly_2b_A1B2C4_D1E2_deg3_v1x.h"
./potential/2b/x2b_A1B2C4_D1E2_deg3_v1x.h:    typedef poly_2b_A1B2C4_D1E2_deg3_v1x polynomial;
./potential/2b/x2b_A1B2Z2_C1D2_v1x.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/x2b_A1B2Z2_C1D2_v1x.cpp:        energies[j] = sw * polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1B2Z2_C1D2_v1x.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/x2b_A1B2Z2_C1D2_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:#include "poly_2b_A1B2Z2_C1D2_v1x.h"
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2Z2_C1D2
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2Z2_C1D2
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:    typedef poly_2b_A1B2Z2_C1D2_deg4_v1x polynomial;
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/2b/x2b_A1B2Z2_C1D2_v1x.h:    // Values of the linear parameters of the polynomials
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:        energies[j] = sw * polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:#include "poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h"
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2Z2_C1D4
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2Z2_C1D4
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:    typedef poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x polynomial;
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:    // Values of the linear parameters of the polynomials
./potential/2b/x2b_A1B2Z2_C1_deg5_v1x.cpp:        double w12 =     -9.721486914088159e-02;  //from MBpol
./potential/2b/x2b_A1B2Z2_C1_deg5_v1x.cpp:        energies[j] = sw*polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1B2Z2_C1_deg5_v1x.cpp:        double w12 =     -9.721486914088159e-02;  //from MBpol
./potential/2b/x2b_A1B2Z2_C1_deg5_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1B2Z2_C1_deg5_v1x.h:#include "poly_2b_A1B2Z2_C1_deg5_v1x.h" 
./potential/2b/x2b_A1B2Z2_C1_deg5_v1x.h:    typedef poly_2b_A1B2Z2_C1_deg5_v1x polynomial;
./potential/2b/x2b_A1B2_A1B2_v1x.cpp:        energies[j] = sw * polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1B2_A1B2_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1B2_A1B2_v1x.h:#include "poly_2b_A1B2_A1B2_v1x.h"
./potential/2b/x2b_A1B2_A1B2_v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2_A1B2
./potential/2b/x2b_A1B2_A1B2_v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2_A1B2
./potential/2b/x2b_A1B2_A1B2_v1x.h:    typedef poly_2b_A1B2_A1B2_deg5_v1x polynomial;
./potential/2b/x2b_A1B2_A1B2_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B2_A1B2_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B2_A1B2_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B2_A1B2_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B2_A1B2_v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/2b/x2b_A1B2_A1B2_v1x.h:    // Values of the linear parameters of the polynomials
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.cpp:        energies[j] = sw * polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:#include "poly_2b_A1B4_A1B4_deg4_exp0_v1x.h"
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h: * @brief Contains the structure of the polynomial holder for symmetry A1B4_A1B4
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B4_A1B4
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:    typedef poly_2b_A1B4_A1B4_deg4_exp0_v1x polynomial;
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:     * @brief Computes the two body polynomials for the dimers
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:     * Given the coordinates of a number of dimers (mon1 in xyz1 and mon2 in xyz2, it calculates the polynomial value
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:    // Values of the non-linear parameters of the polynomials
./potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h:    // Values of the linear parameters of the polynomials
./potential/2b/x2b_A1_A1_deg23_v1x.cpp:        energies[j] = sw*polynomial::eval(coefficients.data(), v);
./potential/2b/x2b_A1_A1_deg23_v1x.cpp:        energies[j] = polynomial::eval(coefficients.data(), v, g);
./potential/2b/x2b_A1_A1_deg23_v1x.h:#include "poly_2b_A1_A1_deg23_v1x.h" 
./potential/2b/x2b_A1_A1_deg23_v1x.h:    typedef poly_2b_A1_A1_deg23_v1x polynomial;
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly-2b-v6x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly-2b-A1B2Z2_C-v1x.h potential/2b/x2b_A1_A1_deg23_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h \
./potential/2b/.deps/libmbx_la-energy2b.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly-2b-v6x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./potential/2b/.deps/libmbx_la-energy2b.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B2Z2_C2_deg5_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B2Z2_C2_deg5_v1.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B3_A1B3_deg4_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B3_A1B3_deg4_v1.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B4_C1D2_deg4_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1B4_C1D2_deg4_v1.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_A1_deg9_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1_A1_deg9_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_A1_deg9_v1.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_B1C2X2_deg5_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_B1C2X2_deg5_v1.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_B1_deg9_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1_B1_deg9_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_B1_deg9_v1.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_B2_deg7_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A1_B2_deg7_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A1_B2_deg7_v1.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./potential/2b/.deps/libmbx_la-mbnrg_2b_A2_A2_deg6_v1.Plo: tools/water_monomer_lp.h potential/2b/poly_2b_A2_A2_deg6_v1.h
./potential/2b/.deps/libmbx_la-mbnrg_2b_A2_A2_deg6_v1.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo: \
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo: potential/2b/poly-2b-A1B2Z2_C-v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo: potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo:potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo: \
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo: potential/2b/poly-2b-A1B2Z2_C-v1x.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo: potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./potential/2b/.deps/libmbx_la-poly-2b-A1B2Z2_C-v1x.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./potential/2b/.deps/libmbx_la-poly-2b-v6x-nogrd.Plo:potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo: \
./potential/2b/.deps/libmbx_la-poly-2b-v6x-nogrd.Plo: potential/2b/poly-2b-v6x-nogrd.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly-2b-v6x-nogrd.Plo: potential/2b/poly-2b-v6x.h \
./potential/2b/.deps/libmbx_la-poly-2b-v6x-nogrd.Plo:potential/2b/poly-2b-v6x.h:
./potential/2b/.deps/libmbx_la-poly-2b-v6x.Plo:potential/2b/libmbx_la-poly-2b-v6x.lo: potential/2b/poly-2b-v6x.cpp \
./potential/2b/.deps/libmbx_la-poly-2b-v6x.Plo: /usr/include/stdc-predef.h potential/2b/poly-2b-v6x.h \
./potential/2b/.deps/libmbx_la-poly-2b-v6x.Plo:potential/2b/poly-2b-v6x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo: potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.Plo:potential/2b/poly_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_grad_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo: potential/2b/poly_2b_A1B2Z2_C2_deg5_nograd_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.Plo:potential/2b/poly_2b_A1B2Z2_C2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo: potential/2b/poly_2b_A1B2_A1B2_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo: potential/2b/poly_2b_A1B2_A1B2_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo: potential/2b/poly_2b_A1B2_A1B2_v1x.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo: potential/2b/poly_2b_A1B2_A1B2_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B2_A1B2_v1x.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_grad_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo: potential/2b/poly_2b_A1B3_A1B3_deg4_nograd_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.Plo:potential/2b/poly_2b_A1B3_A1B3_deg4_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_grad_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo: potential/2b/poly_2b_A1B4_C1D2_deg4_nograd_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.Plo:potential/2b/poly_2b_A1B4_C1D2_deg4_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo: potential/2b/poly_2b_A1_A1_deg23_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo:potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg23_v1x.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo: potential/2b/poly_2b_A1_A1_deg9_grad_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo: potential/2b/poly_2b_A1_A1_deg9_nograd_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo: potential/2b/poly_2b_A1_A1_deg9_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.Plo:potential/2b/poly_2b_A1_A1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_grad_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo: potential/2b/poly_2b_A1_B1C2X2_deg5_nograd_v1.cpp \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo: /usr/include/stdc-predef.h potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.Plo:potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo: potential/2b/poly_2b_A1_B1_deg9_grad_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo: potential/2b/poly_2b_A1_B1_deg9_nograd_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo: potential/2b/poly_2b_A1_B1_deg9_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.Plo:potential/2b/poly_2b_A1_B1_deg9_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo: potential/2b/poly_2b_A1_B2_deg7_grad_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo: potential/2b/poly_2b_A1_B2_deg7_nograd_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo: potential/2b/poly_2b_A1_B2_deg7_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.Plo:potential/2b/poly_2b_A1_B2_deg7_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo: potential/2b/poly_2b_A2_A2_deg6_grad_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo:potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo: \
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo: potential/2b/poly_2b_A2_A2_deg6_nograd_v1.cpp /usr/include/stdc-predef.h \
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo: potential/2b/poly_2b_A2_A2_deg6_v1.h
./potential/2b/.deps/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.Plo:potential/2b/poly_2b_A2_A2_deg6_v1.h:
./potential/2b/.deps/libmbx_la-x2b-A1B2Z2_C-v1x.Plo: potential/2b/poly-2b-A1B2Z2_C-v1x.h \
./potential/2b/.deps/libmbx_la-x2b-A1B2Z2_C-v1x.Plo:potential/2b/poly-2b-A1B2Z2_C-v1x.h:
./potential/2b/.deps/libmbx_la-x2b-v9x.Plo: potential/2b/poly-2b-v6x.h \
./potential/2b/.deps/libmbx_la-x2b-v9x.Plo:potential/2b/poly-2b-v6x.h:
./potential/2b/.deps/libmbx_la-x2b_A1B2C4_D1E2_deg3_v1x.Plo: potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1B2C4_D1E2_deg3_v1x.Plo:potential/2b/poly_2b_A1B2C4_D1E2_deg3_v1x.h:
./potential/2b/.deps/libmbx_la-x2b_A1B2Z2_C1D2_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1B2Z2_C1D2_v1x.Plo:potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h:
./potential/2b/.deps/libmbx_la-x2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1B2Z2_C1D4_deg3_exp0_v1x.Plo:potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-x2b_A1B2Z2_C1_deg5_v1x.Plo: potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1B2Z2_C1_deg5_v1x.Plo:potential/2b/poly_2b_A1B2Z2_C1_deg5_v1x.h:
./potential/2b/.deps/libmbx_la-x2b_A1B2_A1B2_v1x.Plo: potential/2b/x2b_A1B2_A1B2_v1x.h potential/2b/poly_2b_A1B2_A1B2_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1B2_A1B2_v1x.Plo:potential/2b/poly_2b_A1B2_A1B2_v1x.h:
./potential/2b/.deps/libmbx_la-x2b_A1B4_A1B4_deg4_exp0_v1x.Plo: potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1B4_A1B4_deg4_exp0_v1x.Plo:potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h:
./potential/2b/.deps/libmbx_la-x2b_A1_A1_deg23_v1x.Plo: potential/2b/poly_2b_A1_A1_deg23_v1x.h \
./potential/2b/.deps/libmbx_la-x2b_A1_A1_deg23_v1x.Plo:potential/2b/poly_2b_A1_A1_deg23_v1x.h:
Binary file ./potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_A1_deg9_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_A1_deg9_grad_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_A1_deg23_v1.o'
./potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_A1_deg9_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_B1_deg9_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_B1_deg9_grad_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_B1_deg9_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.o matches
Binary file ./potential/2b/libmbx_la-x2b_A1_A1_deg23_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_B1C2X2_deg5_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_B1C2X2_deg5_grad_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.o matches
./potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo:# potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.lo:non_pic_object='libmbx_la-poly-2b-A1B2Z2_C-v1x.o'
./potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_B2_deg7_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_B2_deg7_grad_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1_A1_deg9_v1.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1_B1_deg9_v1.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1B3_A1B3_deg4_v1.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1_B2_deg7_v1.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A2_A2_deg6_v1.o matches
Binary file ./potential/2b/libmbx_la-x2b_A1B2Z2_C1_deg5_v1x.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1_B1C2X2_deg5_v1.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1B2Z2_C2_deg5_v1.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1_B2_deg7_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-x2b_A1B4_A1B4_deg4_exp0_v1x.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1_A1_deg23_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1_A1_deg23_v1x.o'
./potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A2_A2_deg6_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C1D2_v1.o'
./potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo:# potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo - a libtool object file
./potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1.lo:non_pic_object='libmbx_la-poly-2b-A1B2Z2_C-v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.o matches
./potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A2_A2_deg6_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A2_A2_deg6_grad_v1.o'
Binary file ./potential/2b/libmbx_la-x2b_A1B2Z2_C1D2_v1x.o matches
Binary file ./potential/2b/libmbx_la-x2b_A1B2_A1B2_v1x.o matches
Binary file ./potential/2b/libmbx_la-x2b_A1B2C4_D1E2_deg3_v1x.o matches
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1B4_C1D2_deg4_v1.o matches
Binary file ./potential/2b/libmbx_la-poly-2b-v6x-nogrd.o matches
Binary file ./potential/2b/libmbx_la-x2b_A1B2Z2_C1D4_deg3_exp0_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1.o'
Binary file ./potential/2b/libmbx_la-mbnrg_2b_A1B2Z2_A1B2Z2_deg4_vmbpbe.o matches
Binary file ./potential/2b/libmbx_la-poly-2b-A1B2Z2_C-v1x.o matches
Binary file ./potential/2b/libmbx_la-x2b-A1B2Z2_C-v1x.o matches
./potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo:# potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo - a libtool object file
./potential/2b/libmbx_la-poly-2b-v6x-nogrd.lo:non_pic_object='libmbx_la-poly-2b-v6x-nogrd.o'
Binary file ./potential/2b/libmbx_la-x2b-v9x.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C2_deg5_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C1_deg5_v1x.o'
Binary file ./potential/2b/libmbx_la-poly-2b-v6x.o matches
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_nograd_vmbpbe.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C2_deg5_grad_v1.o'
./potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B2_A1B2_v1.o'
./potential/2b/libmbx_la-poly-2b-v6x.lo:# potential/2b/libmbx_la-poly-2b-v6x.lo - a libtool object file
./potential/2b/libmbx_la-poly-2b-v6x.lo:non_pic_object='libmbx_la-poly-2b-v6x.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_C1D2_v1x.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B3_A1B3_deg4_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B4_C1D2_deg4_nograd_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.o matches
./potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo:# potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.lo:non_pic_object='libmbx_la-poly_2b_A1B2Z2_A1B2Z2_deg4_grad_vmbpbe.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1B2C4_D1E2_deg3_v1x.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B2_A1B2_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1B2_A1B2_v1x.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.o matches
./potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo:# potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.lo:non_pic_object='libmbx_la-poly_2b_A1B4_A1B4_deg4_exp0_v1x.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B4_C1D2_deg4_grad_v1.o'
Binary file ./potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.o matches
./potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo:# potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo - a libtool object file
./potential/2b/libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.lo:non_pic_object='libmbx_la-poly_2b_A1B3_A1B3_deg4_grad_v1.o'
./potential/3b/energy3b.h:#include "potential/3b/poly-3b-v2x.h"
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:#include "poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h"
./potential/3b/mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:    typedef poly_A1B2C4_D1E2_D1E2_deg3_v1 polynomial;
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h:#include "poly_3b_A1B2_A1B2_A1B2_deg4_v1.h"
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2_A1B2_A1B2
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2_A1B2_A1B2
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h:    typedef poly_A1B2_A1B2_A1B2_deg4_v1 polynomial;
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.h:    // Vector with the coefficients of the polynomials
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:#include "poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h"
./potential/3b/mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:    typedef poly_A1B2_A1B2_A1B2_deg4_vmbpbe polynomial;
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:#include "poly_3b_A1B4_C1D2_C1D2_deg3_v1.h"
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1B4_C1D2_C1D2
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B4_C1D2_C1D2
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:    typedef poly_A1B4_C1D2_C1D2_deg3_v1 polynomial;
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @brief Computes the two body polynomials for the trimers
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * polynomial value for each one of them, and returns the sum of the contributions for the trimers.
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @brief Computes the two body polynomials for the trimers
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * polynomial value for each one of them, and returns the sum of the contributions for the trimers.
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:    // Values of the non-linear parameters of the polynomials
./potential/3b/mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.h:    // Values of the linear parameters of the polynomials
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:    // F- effective pol, second solvation shell, cutoff 2
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:    // Br- effective pol, second solvation shell, cutoff 2
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:    // I- effective pol, second solvation shell, cutoff 0.5
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:#include "poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h"
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:    typedef poly_A1_B1C2X2_B1C2X2_deg4_v1 polynomial;
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:    typedef poly_A1_B1C2X2_B1C2X2_deg4_v1 polynomial;
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp:        energies[j] = my_poly.eval(xs, coefficients.data());
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp:    polynomial my_poly;
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp:        double w12 = -9.721486914088159e-02;  // from MBpol
./potential/3b/mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.cpp:        energies[j] = my_poly.eval(xs, coefficients.data(), gxs);
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp:#include "poly-3b-h2o-ion-v1x_deg4_filtered.h"
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp:double poly_3b_h2o_ion_v1x_deg4_filtered::eval(const double a[1016], const double x[21], double g[21]) {
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h: * @file poly-3b-h2o-ion-v1x_deg4_filtered.h
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h: * @brief Contains the structure that allows the evaluation of the polynomial for monoatomic ion - water - water
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h: * @brief Namespace that encloses the monoatomic ion - water - water structure polynomial structure
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:class poly_3b_h2o_ion_v1x_deg4_filtered {
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:     * @brief Evaluates the polynomial of degree 4 for monoatomic ion - water - water structure symmetry.
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:     * @param[in] a Double array of 1016 elements with the linear parameters of the polynomial
./potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:     * @return Value of the polynomial
./potential/3b/poly-3b-v2x-nogrd.cpp:#include "potential/3b/poly-3b-v2x.h"
./potential/3b/poly-3b-v2x-nogrd.cpp:double poly_3b_v2x::eval(const double* a, const double* x)
./potential/3b/poly-3b-v2x.cpp:#include "potential/3b/poly-3b-v2x.h"
./potential/3b/poly-3b-v2x.cpp:double poly_3b_v2x::eval(const double *a, const double *x, double *t, double *g) {
./potential/3b/poly-3b-v2x.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/3b/poly-3b-v2x.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/3b/poly-3b-v2x.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/3b/poly-3b-v2x.h: * @file poly-3b-v2x.h
./potential/3b/poly-3b-v2x.h: * @brief Contains the structure that allows the evaluation of the polynomial for MB-pol.
./potential/3b/poly-3b-v2x.h: * @brief Namespace that encloses the MB-pol polynomial structure
./potential/3b/poly-3b-v2x.h:class poly_3b_v2x {
./potential/3b/poly-3b-v2x.h:     * @brief Evaluates the polynomial of degree 4 for MB-pol.
./potential/3b/poly-3b-v2x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for MB-pol
./potential/3b/poly-3b-v2x.h:     * @param[in] a Double array of 1163 elements with the linear parameters of the polynomial
./potential/3b/poly-3b-v2x.h:     * @return Value of the polynomial
./potential/3b/poly-3b-v2x.h:     * @brief Evaluates the polynomial of degree 4 for MB-pol.
./potential/3b/poly-3b-v2x.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for MB-pol
./potential/3b/poly-3b-v2x.h:     * @param[in] a Double array of 1163 elements with the linear parameters of the polynomial
./potential/3b/poly-3b-v2x.h:     * @param[in] t Double array of length 32609 used as intermediate values for the polynomial evaluation
./potential/3b/poly-3b-v2x.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp:#include "poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h"
./potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp:double poly_A1B2C4_D1E2_D1E2_deg3_v1::eval(const double x[78], const double a[2038], double g[78]) {
./potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp:#include "poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h"
./potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp:double poly_A1B2C4_D1E2_D1E2_deg3_v1::eval(const double x[78], const double a[2038]) {
./potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:struct poly_A1B2C4_D1E2_D1E2_deg3_v1 {
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp:#include "poly_3b_A1B2_A1B2_A1B2_deg4_v1.h"
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp: * @file poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1B2_A1B2_A1B2
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1B2_A1B2_A1B2
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp:double poly_A1B2_A1B2_A1B2_deg4_v1::eval(const double x[27], const double a[1067], double g[27]) {
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp:#include "poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h"
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp:double poly_A1B2_A1B2_A1B2_deg4_vmbpbe::eval(const double x[36], const double a[1163], double g[36]) {
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp:#include "poly_3b_A1B2_A1B2_A1B2_deg4_v1.h"
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp: * @file poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1B2_A1B2_A1B2
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1B2_A1B2_A1B2
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp:double poly_A1B2_A1B2_A1B2_deg4_v1::eval(const double x[27], const double a[1067]) {
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp:#include "poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h"
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp:double poly_A1B2_A1B2_A1B2_deg4_vmbpbe::eval(const double x[36], const double a[1163]) {
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h: * @file poly_3b_A1B2_A1B2_A1B2_deg4_v1.h
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Contains the structure of the polynomial for symmetry A1B2_A1B2_A1B2
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1B2_A1B2_A1B2
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:struct poly_A1B2_A1B2_A1B2_deg4_v1 {
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:    // Degree of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 1067 elements with the linear parameters of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * It uses the direct, non optimized polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 1067 elements with the linear parameters of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 1067 elements with the linear parameters of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables,
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2 symmetry.
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * It uses the direct, non optimized polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 1067 elements with the linear parameters of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:struct poly_A1B2_A1B2_A1B2_deg4_vmbpbe {
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp:#include "poly_3b_A1B4_C1D2_C1D2_deg3_v1.h"
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp:double poly_A1B4_C1D2_C1D2_deg3_v1::eval(const double x[55], const double a[1254], double g[55]) {
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp:    std::cerr << "Input polynomial variables (x):\n";
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp:    std::cerr << "Output polynomial gradients (g):\n";
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp:    std::cerr << "Output polynomial energy: " << e << std::endl;
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp:#include "poly_3b_A1B4_C1D2_C1D2_deg3_v1.h"
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp:double poly_A1B4_C1D2_C1D2_deg3_v1::eval(const double x[55], const double a[1254]) {
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h: * @file poly_3b_A1B4_C1D2_C1D2_deg3_v1.h
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h: * @brief Contains the structure that allows the evaluation of the polynomial for A1B4_C1D2_C1D2 symmetry.
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h: * @brief Namespace that encloses the A1B4_C1D2_C1D2 polynomial structure
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:class poly_A1B4_C1D2_C1D2_deg3_v1 {
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:    // Degree of the polynomial
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @brief Evaluates the polynomial of degree 3 for A1B4_C1D2_C1D2 symmetry.
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @param[in] a Double array of 1254 elements with the linear parameters of the polynomial
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @brief Evaluates the polynomial of degree 3 for A1B4_C1D2_C1D2 symmetry.
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * Given the linear parameters and the value of the polynomial variables, evaluates the polynomial for the
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @param[in] a Double array of 1254 elements with the linear parameters of the polynomial
./potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:     * @return Value of the polynomial
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp:#include "poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h"
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp:double poly_A1_B1C2X2_B1C2X2_deg4_v1::eval(const double x[41], const double a[1575], double g[41]) {
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp:#include "poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h"
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp:double poly_A1_B1C2X2_B1C2X2_deg4_v1::eval(const double x[41], const double a[1575], double g[41]) {
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp:#include "poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h"
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp:double poly_A1_B1C2X2_B1C2X2_deg4_v1::eval(const double x[41], const double a[1575]) {
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp:#include "poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h"
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp:double poly_A1_B1C2X2_B1C2X2_deg4_v1::eval(const double x[41], const double a[1575]) {
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:struct poly_A1_B1C2X2_B1C2X2_deg4_v1 {
./potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:struct poly_A1_B1C2X2_B1C2X2_deg4_v1 {
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        double retval = h2o_ion::poly_3b_h2o_ion_v1x_deg4_filtered::eval(m_coeffs, v, g);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        double retval = h2o_ion::poly_3b_h2o_ion_v1x_deg4_filtered::eval(m_coeffs, v, g);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        const double the_poly[] = {-1.160089594691294e+03,   // 0
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        std::copy(the_poly, the_poly + ncoeffs, m_coeffs);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        const double the_poly[] = {
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        std::copy(the_poly, the_poly + ncoeffs, m_coeffs);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        const double the_poly[] = {
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        std::copy(the_poly, the_poly + ncoeffs, m_coeffs);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        const double the_poly[] = {-6.714728321324774e+02,  // 0
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        std::copy(the_poly, the_poly + ncoeffs, m_coeffs);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        const double the_poly[] = {-1.907671721947504e+01,   // 0
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.cpp:        std::copy(the_poly, the_poly + ncoeffs, m_coeffs);
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:#include "poly-3b-h2o-ion-v1x_deg4_filtered.h"
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h: * @brief Contains the structure of the polynomial holder for ion-water-water
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:    static const unsigned ncoeffs = h2o_ion::poly_3b_h2o_ion_v1x_deg4_filtered::size;
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:     * @brief Computes the two body polynomials for the trimers
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:     * polynomial value for each one of them, and returns the sum of the contributions for the trimers.
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:     * @brief Computes the two body polynomials for the trimers
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:     * polynomial value for each one of them, and returns the sum of the contributions for the trimers.
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:    // Values of the non-linear parameters of the polynomials
./potential/3b/x3b-h2o-ion-v1x-deg4-filtered.h:    // Values of the linear parameters of the polynomials
./potential/3b/x3b-v2x.cpp:        double e3b = poly_3b_v2x::eval(thefit, x);
./potential/3b/x3b-v2x.cpp:        double e3b = poly_3b_v2x::eval(thefit, x, t, gg);
./potential/3b/x3b-v2x.h:#include "potential/3b/poly-3b-v2x.h"
./potential/3b/x3b-v2x.h: * @brief Contains the structure of the polynomial holder for water-water-water MB-pol
./potential/3b/x3b-v2x.h: * @brief Encloses the structure of the polynomial holder for water-water-water MB-pol
./potential/3b/x3b-v2x.h:     * @brief Computes the two body polynomials for the trimers
./potential/3b/x3b-v2x.h:     * polynomial value for each one of them, and returns the sum of the contributions for the trimers.
./potential/3b/x3b-v2x.h:     * @brief Computes the two body polynomials for the trimers
./potential/3b/x3b-v2x.h:     * polynomial value for each one of them, and returns the sum of the contributions for the trimers.
./potential/3b/x3b-v2x.h:    // Values of the non-linear parameters of the polynomials
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo: \
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.cpp \
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo:potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo: \
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.cpp \
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h
./potential/3b/.deps/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo: /usr/include/bits/mathinline.h potential/3b/poly-3b-v2x.h \
./potential/3b/.deps/libmbx_la-energy3b.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h \
./potential/3b/.deps/libmbx_la-energy3b.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h \
./potential/3b/.deps/libmbx_la-energy3b.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h \
./potential/3b/.deps/libmbx_la-energy3b.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h \
./potential/3b/.deps/libmbx_la-energy3b.Plo: potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h \
./potential/3b/.deps/libmbx_la-energy3b.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly-3b-v2x.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-energy3b.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.Plo: tools/water_monomer_lp.h potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.Plo:potential/3b/poly_3b_A1B2C4_D1E2_D1E2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.Plo: tools/water_monomer_lp.h potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.Plo: tools/water_monomer_lp.h potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.Plo: tools/water_monomer_lp.h potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.Plo: tools/water_monomer_lp.h potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h
./potential/3b/.deps/libmbx_la-mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo:potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo: \
./potential/3b/.deps/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.cpp \
./potential/3b/.deps/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h
./potential/3b/.deps/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./potential/3b/.deps/libmbx_la-poly-3b-v2x-nogrd.Plo:potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo: \
./potential/3b/.deps/libmbx_la-poly-3b-v2x-nogrd.Plo: potential/3b/poly-3b-v2x-nogrd.cpp /usr/include/stdc-predef.h \
./potential/3b/.deps/libmbx_la-poly-3b-v2x-nogrd.Plo: potential/3b/poly-3b-v2x.h \
./potential/3b/.deps/libmbx_la-poly-3b-v2x-nogrd.Plo:potential/3b/poly-3b-v2x.h:
./potential/3b/.deps/libmbx_la-poly-3b-v2x.Plo:potential/3b/libmbx_la-poly-3b-v2x.lo: potential/3b/poly-3b-v2x.cpp \
./potential/3b/.deps/libmbx_la-poly-3b-v2x.Plo: /usr/include/stdc-predef.h potential/3b/poly-3b-v2x.h \
./potential/3b/.deps/libmbx_la-poly-3b-v2x.Plo:potential/3b/poly-3b-v2x.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo: /usr/include/stdc-predef.h potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo: /usr/include/stdc-predef.h potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo:potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo: potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h
./potential/3b/.deps/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.Plo:potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo: /usr/include/stdc-predef.h potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo:potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo: potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo: /usr/include/stdc-predef.h potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.Plo:potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo:potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo: \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.cpp \
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo: potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h
./potential/3b/.deps/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.Plo:potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h:
./potential/3b/.deps/libmbx_la-x3b-h2o-ion-v1x-deg4-filtered.Plo: potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h
./potential/3b/.deps/libmbx_la-x3b-h2o-ion-v1x-deg4-filtered.Plo:potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h:
./potential/3b/.deps/libmbx_la-x3b-v2x.Plo: /usr/include/bits/mathinline.h potential/3b/poly-3b-v2x.h \
./potential/3b/.deps/libmbx_la-x3b-v2x.Plo:potential/3b/poly-3b-v2x.h:
Binary file ./potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.o matches
Binary file ./potential/3b/libmbx_la-poly-3b-v2x.o matches
./potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo:# potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo - a libtool object file
./potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.lo:non_pic_object='liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_nograd_v1.o'
Binary file ./potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.o matches
./potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo:# potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo - a libtool object file
./potential/3b/liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.lo:non_pic_object='liba1b2c4_la-poly_3b_A1B2C4_D1E2_D1E2_deg3_grad_v1.o'
Binary file ./potential/3b/libmbx_la-mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1.o matches
Binary file ./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.o matches
Binary file ./potential/3b/libmbx_la-mbnrg_3b_A1B4_C1D2_C1D2_deg3_v1.o matches
Binary file ./potential/3b/libmbx_la-mbnrg_3b_A1B2C4_D1E2_D1E2_deg3_v1.o matches
Binary file ./potential/3b/libmbx_la-mbnrg_3b_A1B2_A1B2_A1B2_deg4_v1.o matches
Binary file ./potential/3b/libmbx_la-mbnrg_3b_A1B2_A1B2_A1B2_deg4_vmbpbe.o matches
Binary file ./potential/3b/libmbx_la-mbnrg_3b_A1_B1C2X2_B1C2X2_deg4_v1_oldswitch.o matches
./potential/3b/libmbx_la-poly-3b-v2x.lo:# potential/3b/libmbx_la-poly-3b-v2x.lo - a libtool object file
./potential/3b/libmbx_la-poly-3b-v2x.lo:non_pic_object='libmbx_la-poly-3b-v2x.o'
Binary file ./potential/3b/libmbx_la-x3b-v2x.o matches
Binary file ./potential/3b/libmbx_la-x3b-h2o-ion-v1x-deg4-filtered.o matches
Binary file ./potential/3b/libmbx_la-poly-3b-v2x-nogrd.o matches
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo:# potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.lo:non_pic_object='libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.o matches
./potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo:# potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo - a libtool object file
./potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.lo:non_pic_object='libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.o'
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo:# potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.lo:non_pic_object='libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_nograd_v1_oldswitch.o'
Binary file ./potential/3b/libmbx_la-poly-3b-h2o-ion-v1x_deg4_filtered.o matches
Binary file ./potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.o matches
./potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo:# potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.lo:non_pic_object='libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_nograd_v1.o'
./potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo:# potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo - a libtool object file
./potential/3b/libmbx_la-poly-3b-v2x-nogrd.lo:non_pic_object='libmbx_la-poly-3b-v2x-nogrd.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.o matches
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:# potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:non_pic_object='libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_v1.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.o matches
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo:# potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.lo:non_pic_object='libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_nograd_vmbpbe.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.o matches
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo:# potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.lo:non_pic_object='libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1_oldswitch.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.o matches
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo:# potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.lo:non_pic_object='libmbx_la-poly_3b_A1_B1C2X2_B1C2X2_deg4_grad_v1.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.o matches
./potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo:# potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.lo:non_pic_object='libmbx_la-poly_3b_A1B4_C1D2_C1D2_deg3_grad_v1.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.o matches
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo:# potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.lo:non_pic_object='libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_v1.o'
Binary file ./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.o matches
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo:# potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo - a libtool object file
./potential/3b/libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.lo:non_pic_object='libmbx_la-poly_3b_A1B2_A1B2_A1B2_deg4_grad_vmbpbe.o'
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp:    polynomial my_poly;
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp:        double w12 =     -9.721486914088159e-02;  //from MBpol
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs,coefficients.data());
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp:    polynomial my_poly;
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp:        double w12 =     -9.721486914088159e-02;  //from MBpol
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.cpp:        energies[j] = my_poly.eval(xs,coefficients.data(),gxs);
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:#include "poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h" 
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Contains the structure of the polynomial holder for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Encloses the structure of the polynomial holder for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:    typedef poly_A1B2_A1B2_A1B2_A1B2_deg4_v1 polynomial;
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the coordinates of a number of monomers, it calculates the polynomial value for each one of them, and ret
./potential/4b/mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:    // Vector with the coefficients of the polynomials
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp:#include "poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h"
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp: * @file poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp: * @brief Contains the implementation of the polynomials with gradients for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp: * @brief Encloses the structure of the polynomial holder for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp:double poly_A1B2_A1B2_A1B2_A1B2_deg4_v1::eval(const double x[66],
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp:#include "poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h"
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp: * @file poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp: * @brief Contains the implementation of the polynomials without gradients for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp: * @brief Encloses the structure of the polynomial for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp:double poly_A1B2_A1B2_A1B2_A1B2_deg4_v1::eval(const double x[66],
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h: * @file poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Contains the structure of the polynomial for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h: * @brief Encloses the structure of the polynomial for symmetry A1B2_A1B2_A1B2_A1B2
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:struct poly_A1B2_A1B2_A1B2_A1B2_deg4_v1 {
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:    // Degree of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables, 
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 398 elements with the linear parameters of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables, 
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * It uses the direct, non optimized polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 398 elements with the linear parameters of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables, 
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 398 elements with the linear parameters of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @brief Evaluates the polynomial of degree 4 for A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * Given the linear parameters and the value of the polynomial variables, 
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * evaluates the polynomial for the A1B2_A1B2_A1B2_A1B2 symmetry.
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * It uses the direct, non optimized polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @param[in] a Double array of 398 elements with the linear parameters of the polynomial
./potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:     * @return Value of the polynomial
./potential/4b/.deps/libmbx_la-energy4b.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h
./potential/4b/.deps/libmbx_la-energy4b.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/4b/.deps/libmbx_la-mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h
./potential/4b/.deps/libmbx_la-mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo: \
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.cpp \
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo:potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo: \
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.cpp \
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo: potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h
./potential/4b/.deps/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.Plo:potential/4b/poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.h:
Binary file ./potential/4b/libmbx_la-mbnrg_4b_A1B2_A1B2_A1B2_A1B2_deg4_v1.o matches
Binary file ./potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.o matches
./potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:# potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo - a libtool object file
./potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.lo:non_pic_object='libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_nograd_v1.o'
Binary file ./potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.o matches
./potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo:# potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo - a libtool object file
./potential/4b/libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.lo:non_pic_object='libmbx_la-poly_4b_A1B2_A1B2_A1B2_A1B2_deg4_grad_v1.o'
./potential/buckingham/buckingham.cpp:                    virial_[k] += virial_pool[rank][k];  // -= bc the atomindeces are switched relative to dlpoly
./potential/buckingham/buckingham.cpp:                        virial_[k] += virial_pool[rank][k];  // -= bc the atomindeces are switched relative to dlpoly
./potential/buckingham/buckingham.cpp:                        virial_[k] += virial_pool[rank][k];  // -= bc the atomindeces are switched relative to dlpoly
./potential/buckingham/.deps/libmbx_la-buckingham.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/buckingham/.deps/libmbx_la-buckingham.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./potential/buckingham/.deps/libmbx_la-bucktools.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/buckingham/.deps/libmbx_la-bucktools.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./potential/dispersion/.deps/libmbx_la-dispersion.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/dispersion/.deps/libmbx_la-dispersion.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./potential/dispersion/.deps/libmbx_la-disptools.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/dispersion/.deps/libmbx_la-disptools.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
Binary file ./potential/dispersion/libmbx_la-dispersion.o matches
./potential/electrostatics/electrostatics.cpp:// When turning polarization off, don't set the 1/polarity value to max_dbl because it gets
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetSysPolfacs() { return polfac_; }
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetSysPols() { return pol_; }
./potential/electrostatics/electrostatics.cpp:double Electrostatics::GetDipoleTolerance() { return tolerance_; }
./potential/electrostatics/electrostatics.cpp:size_t Electrostatics::GetDipoleMaxIt() { return maxit_; }
./potential/electrostatics/electrostatics.cpp:std::string Electrostatics::GetDipoleConvergenceMethod() { return dip_method_; }
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetInternalPolSqrt() { return pol_sqrt_; }
./potential/electrostatics/electrostatics.cpp:void Electrostatics::SetDipoleTolerance(double tol) { tolerance_ = tol; }
./potential/electrostatics/electrostatics.cpp:void Electrostatics::SetDipoleMaxIt(size_t maxit) { maxit_ = maxit; }
./potential/electrostatics/electrostatics.cpp:                                const std::vector<double> &polfac, const std::vector<double> &pol,
./potential/electrostatics/electrostatics.cpp:    for (size_t i = 0; i < polfac.size(); i++) {
./potential/electrostatics/electrostatics.cpp:        std::cerr << polfac[i] << " , ";
./potential/electrostatics/electrostatics.cpp:    for (size_t i = 0; i < pol.size(); i++) {
./potential/electrostatics/electrostatics.cpp:        std::cerr << pol[i] << " , ";
./potential/electrostatics/electrostatics.cpp:    std::cerr << "dipole method: " << dip_method << std::endl;
./potential/electrostatics/electrostatics.cpp:    polfac_ = polfac;
./potential/electrostatics/electrostatics.cpp:    pol_ = pol;
./potential/electrostatics/electrostatics.cpp:    pol_sqrt_ = std::vector<double>(nsites3, 0.0);
./potential/electrostatics/electrostatics.cpp:        polfac_all_ = std::vector<double>(nExtChg + nsites_, 0.0);
./potential/electrostatics/electrostatics.cpp:            polfac_all_[i] = polfac_[i];
./potential/electrostatics/electrostatics.cpp:    std::cerr << "Internal pol_sqrt:\n";
./potential/electrostatics/electrostatics.cpp:    for (size_t i = 0; i < pol_sqrt_.size(); i++) {
./potential/electrostatics/electrostatics.cpp:        std::cerr << pol_sqrt_[i] << " , ";
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateOneCgDipoleIter() {
./potential/electrostatics/electrostatics.cpp:    // Now start computation of dipole through conjugate gradient
./potential/electrostatics/electrostatics.cpp:            // TODO assuming pol not site dependant
./potential/electrostatics/electrostatics.cpp:            double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:    DipolesCGIteration(mu_, ts2v);
./potential/electrostatics/electrostatics.cpp:        pv[i] = Efq_[i] * pol_sqrt_[i] - ts2v[i];
./potential/electrostatics/electrostatics.cpp:        DipolesCGIteration(pv, ts2v);
./potential/electrostatics/electrostatics.cpp:    // Dipoles are computed
./potential/electrostatics/electrostatics.cpp:    // Need to recalculate dipole and Efd due to the multiplication of polsqrt
./potential/electrostatics/electrostatics.cpp:        mu_[i] *= pol_sqrt_[i];
./potential/electrostatics/electrostatics.cpp:                    local_field->CalcDipoleElecField(xyz_.data() + fi_crd1, coordinates_vectorized.data(),
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_.data(), nsites_, 3);
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, points, -1, result);
./potential/electrostatics/electrostatics.cpp:        // The Ewald self field due to induced dipoles
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_all_.data(), nsites_all_, 3);
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, points, 2, result);
./potential/electrostatics/electrostatics.cpp:                    // dL/dmu dmu/dE dE/dr , where dmu/dE = alpha (pol)
./potential/electrostatics/electrostatics.cpp:                    grad[fi_crd + m * ns * 3 + 3 * i + j] -= constants::COULOMB * pol_[fi_crd / 3 + ns * m + i] *
./potential/electrostatics/electrostatics.cpp:                                      const std::vector<double> &chg_grad, const std::vector<double> &pol,
./potential/electrostatics/electrostatics.cpp:                                      const std::vector<double> &polfac, const std::string dip_method,
./potential/electrostatics/electrostatics.cpp:    for (size_t i = 0; i < polfac.size(); i++) {
./potential/electrostatics/electrostatics.cpp:        std::cerr << polfac[i] << " , ";
./potential/electrostatics/electrostatics.cpp:    for (size_t i = 0; i < pol.size(); i++) {
./potential/electrostatics/electrostatics.cpp:        std::cerr << pol[i] << " , ";
./potential/electrostatics/electrostatics.cpp:    std::cerr << "dipole method: " << dip_method << std::endl;
./potential/electrostatics/electrostatics.cpp:    polfac_ = polfac;
./potential/electrostatics/electrostatics.cpp:    pol_ = pol;
./potential/electrostatics/electrostatics.cpp:        polfac_all_ = std::vector<double>(nExtChg + nsites_, 0.0);
./potential/electrostatics/electrostatics.cpp:            polfac_all_[i] = polfac_[i];
./potential/electrostatics/electrostatics.cpp:    std::cerr << "Internal pol_sqrt:\n";
./potential/electrostatics/electrostatics.cpp:    for (size_t i = 0; i < pol_sqrt_.size(); i++) {
./potential/electrostatics/electrostatics.cpp:        std::cerr << pol_sqrt_[i] << " , ";
./potential/electrostatics/electrostatics.cpp:                pol_sqrt_[inmon3 + m + fi_crd] = sqrt(pol_[fi_sites + mns + i]);
./potential/electrostatics/electrostatics.cpp:                pol_sqrt_[inmon3 + m + fi_crd + nmon] = sqrt(pol_[fi_sites + mns + i]);
./potential/electrostatics/electrostatics.cpp:                pol_sqrt_[inmon3 + m + fi_crd + nmon2] = sqrt(pol_[fi_sites + mns + i]);
./potential/electrostatics/electrostatics.cpp:                double A = polfac_all_[fi_sites + i] * polfac_all_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_all_[fi_sites1 + i] * polfac_all_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:                double A = polfac_[fi_sites + i] * polfac_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_all_[fi_sites1 + i] * polfac_all_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipolesMPIlocal(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost) {
./potential/electrostatics/electrostatics.cpp:            double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:        // CalculateDipolesIterative();
./potential/electrostatics/electrostatics.cpp:        std::string text = std::string("CalculateDipolesIterativeMPIlocal missing. ");
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesConjugateGradientMPIlocal(precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesAspcMPIlocal(precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipoles(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_) {
./potential/electrostatics/electrostatics.cpp:            double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesIterative(precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesConjugateGradient(precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesAspc(precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:void Electrostatics::DipolesCGIterationMPIlocal(std::vector<double> &in_v, std::vector<double> &out_v, bool use_ghost) {
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the dipoles
./potential/electrostatics/electrostatics.cpp:            double A = -std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:    // Compute the field from the modified dipoles
./potential/electrostatics/electrostatics.cpp:    ComputeDipoleFieldMPIlocal(in_v, out_v, use_ghost);
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the field product, and revert the changes to mu
./potential/electrostatics/electrostatics.cpp:            double A = std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:void Electrostatics::DipolesCGIterationMPIlocalOptimized(std::vector<double> &in_v, std::vector<double> &out_v, 
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the dipoles
./potential/electrostatics/electrostatics.cpp:            double A = -std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:    // Compute the field from the modified dipoles
./potential/electrostatics/electrostatics.cpp:    ComputeDipoleFieldMPIlocalOptimized(in_v, out_v, precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the field product, and revert the changes to mu
./potential/electrostatics/electrostatics.cpp:            double A = std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:void Electrostatics::DipolesCGIteration(std::vector<double> &in_v, std::vector<double> &out_v){
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the dipoles
./potential/electrostatics/electrostatics.cpp:            double A = -std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:    // Compute the field from the modified dipoles
./potential/electrostatics/electrostatics.cpp:    ComputeDipoleField(in_v, out_v);
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the field product, and revert the changes to mu
./potential/electrostatics/electrostatics.cpp:            double A = std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:void Electrostatics::DipolesCGIterationOptimized(std::vector<double> &in_v, std::vector<double> &out_v, 
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the dipoles
./potential/electrostatics/electrostatics.cpp:            double A = -std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:    // Compute the field from the modified dipoles
./potential/electrostatics/electrostatics.cpp:    ComputeDipoleFieldOptimized(in_v, out_v, precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:    // Apply sqrt(pol) to the field product, and revert the changes to mu
./potential/electrostatics/electrostatics.cpp:            double A = std::sqrt(pol_[fi_sites + i]);
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipolesConjugateGradientMPIlocal(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost) {
./potential/electrostatics/electrostatics.cpp:    // Now start computation of dipole through conjugate gradient
./potential/electrostatics/electrostatics.cpp:            // TODO assuming pol not site dependant
./potential/electrostatics/electrostatics.cpp:            double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:    DipolesCGIterationMPIlocalOptimized(mu_, ts2v, precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:                                      << " pol_sqrt_= " << pol_sqrt_[fi_crd + inmon3 + m] << " "
./potential/electrostatics/electrostatics.cpp:                                      << pol_sqrt_[fi_crd + inmon3 + nmon + m] << " "
./potential/electrostatics/electrostatics.cpp:                                      << pol_sqrt_[fi_crd + inmon3 + nmon2 + m]
./potential/electrostatics/electrostatics.cpp:        pv[i] = Efq_[i] * pol_sqrt_[i] - ts2v[i];
./potential/electrostatics/electrostatics.cpp:        DipolesCGIterationMPIlocalOptimized(pv, ts2v, precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:    // Dipoles are computed
./potential/electrostatics/electrostatics.cpp:    // Need to recalculate dipole and Efd due to the multiplication of polsqrt
./potential/electrostatics/electrostatics.cpp:        mu_[i] *= pol_sqrt_[i];
./potential/electrostatics/electrostatics.cpp:    //    Efd = Efq - 1/pol
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipolesConjugateGradient(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_) {
./potential/electrostatics/electrostatics.cpp:    // Now start computation of dipole through conjugate gradient
./potential/electrostatics/electrostatics.cpp:            // TODO assuming pol not site dependant
./potential/electrostatics/electrostatics.cpp:            double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:    DipolesCGIterationOptimized(mu_, ts2v, precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:                                      << " pol_sqrt_= " << pol_sqrt_[fi_crd + inmon3 + m] << " "
./potential/electrostatics/electrostatics.cpp:                                      << pol_sqrt_[fi_crd + inmon3 + nmon + m] << " "
./potential/electrostatics/electrostatics.cpp:                                      << pol_sqrt_[fi_crd + inmon3 + nmon2 + m]
./potential/electrostatics/electrostatics.cpp:        pv[i] = Efq_[i] * pol_sqrt_[i] - ts2v[i];
./potential/electrostatics/electrostatics.cpp:        DipolesCGIterationOptimized(pv, ts2v, precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:    // Dipoles are computed
./potential/electrostatics/electrostatics.cpp:    // Need to recalculate dipole and Efd due to the multiplication of polsqrt
./potential/electrostatics/electrostatics.cpp:        mu_[i] *= pol_sqrt_[i];
./potential/electrostatics/electrostatics.cpp:    DipolesCGIterationOptimized(mu_, Efd_, precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:    //    Efd = Efq - 1/pol
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetDipoleHistory(size_t indx) {
./potential/electrostatics/electrostatics.cpp:    // Return selected history of dipoles
./potential/electrostatics/electrostatics.cpp:    // The internal dipole history needs to be reordered
./potential/electrostatics/electrostatics.cpp:    // external charges don't have dipoles
./potential/electrostatics/electrostatics.cpp:        std::cerr << "GetDipoleHistory requested indx too large" << std::endl;
./potential/electrostatics/electrostatics.cpp:void Electrostatics::SetDipoleHistory(size_t indx, std::vector<double> mu_hist) {
./potential/electrostatics/electrostatics.cpp:    // Reorder dipoles for internal use
./potential/electrostatics/electrostatics.cpp:    // external charges don't have dipoles
./potential/electrostatics/electrostatics.cpp:        std::cerr << "SetDipoleHistory requested indx too large" << std::endl;
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipolesAspc(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_) {
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesConjugateGradient(precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:        // If we have enough history of the dipoles,
./potential/electrostatics/electrostatics.cpp:        // First we set the dipoles to the predictor
./potential/electrostatics/electrostatics.cpp:        ComputeDipoleFieldOptimized(mu_, Efd_, precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:        // Now the Electric dipole field is computed, and we update
./potential/electrostatics/electrostatics.cpp:        // the dipoles to get the corrector
./potential/electrostatics/electrostatics.cpp:                // TODO assuming pol not site dependant
./potential/electrostatics/electrostatics.cpp:                double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:        // We get the final dipole
./potential/electrostatics/electrostatics.cpp:        // Add the new dipole at the end
./potential/electrostatics/electrostatics.cpp:        // Shift the dipoles one position in the history
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipolesAspcMPIlocal(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost) {
./potential/electrostatics/electrostatics.cpp:        CalculateDipolesConjugateGradientMPIlocal(precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:        // If we have enough history of the dipoles,
./potential/electrostatics/electrostatics.cpp:        // First we set the dipoles to the predictor
./potential/electrostatics/electrostatics.cpp:        ComputeDipoleFieldMPIlocalOptimized(mu_, Efd_, precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.cpp:        // Now the Electric dipole field is computed, and we update
./potential/electrostatics/electrostatics.cpp:        // the dipoles to get the corrector
./potential/electrostatics/electrostatics.cpp:                // TODO assuming pol not site dependant
./potential/electrostatics/electrostatics.cpp:                double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:        // We get the final dipole
./potential/electrostatics/electrostatics.cpp:        // Add the new dipole at the end
./potential/electrostatics/electrostatics.cpp:        // Shift the dipoles one position in the history
./potential/electrostatics/electrostatics.cpp:void Electrostatics::ComputeDipoleFieldMPIlocal(std::vector<double> &in_v, std::vector<double> &out_v, bool use_ghost) {
./potential/electrostatics/electrostatics.cpp:    // Recalculate Electric field due to dipoles
./potential/electrostatics/electrostatics.cpp:                double A = polfac_[fi_sites + i] * polfac_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                        elec_field.CalcDipoleElecField(xyz_.data() + fi_crd, xyz_.data() + fi_crd, in_ptr + fi_crd,
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_[fi_sites1 + i] * polfac_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:                        local_field->CalcDipoleElecField(
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_.data(), nsites_, 3);
./potential/electrostatics/electrostatics.cpp:                                  << coords(i, 1) << " " << coords(i, 2) << " dipoles= " << dipoles(i, 0) << " "
./potential/electrostatics/electrostatics.cpp:                                  << dipoles(i, 1) << " " << dipoles(i, 2) << std::endl;
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, coords, -1, result);
./potential/electrostatics/electrostatics.cpp:        // The Ewald self field due to induced dipoles
./potential/electrostatics/electrostatics.cpp:void Electrostatics::ComputeDipoleFieldMPIlocalOptimized(std::vector<double> &in_v, std::vector<double> &out_v, 
./potential/electrostatics/electrostatics.cpp:    // Recalculate Electric field due to dipoles
./potential/electrostatics/electrostatics.cpp:                double A = polfac_[fi_sites + i] * polfac_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                        elec_field.CalcDipoleElecField(xyz_.data() + fi_crd, xyz_.data() + fi_crd, in_ptr + fi_crd,
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_[fi_sites1 + i] * polfac_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:                        local_field->CalcDipoleElecField_Optimized(xyz_.data() + fi_crd1, reordered_xyz2.data(), in_ptr + fi_crd1,
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_.data(), nsites_, 3);
./potential/electrostatics/electrostatics.cpp:                                  << coords(i, 1) << " " << coords(i, 2) << " dipoles= " << dipoles(i, 0) << " "
./potential/electrostatics/electrostatics.cpp:                                  << dipoles(i, 1) << " " << dipoles(i, 2) << std::endl;
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, coords, -1, result);
./potential/electrostatics/electrostatics.cpp:        // The Ewald self field due to induced dipoles
./potential/electrostatics/electrostatics.cpp:void Electrostatics::PrecomputeDipoleIterationsInformation(std::vector<double> &out_v,
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_all_[fi_sites1 + i] * polfac_all_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:                        local_field->CalcPrecomputedDipoleElec(xyz_all_.data() + fi_crd1, reordered_xyz2.data(),
./potential/electrostatics/electrostatics.cpp:void Electrostatics::ComputeDipoleField(std::vector<double> &in_v, std::vector<double> &out_v, bool use_ghost) {
./potential/electrostatics/electrostatics.cpp:    // Recalculate Electric field due to dipoles
./potential/electrostatics/electrostatics.cpp:                double A = polfac_[fi_sites + i] * polfac_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                    elec_field.CalcDipoleElecField(xyz_.data() + fi_crd, xyz_.data() + fi_crd, in_ptr + fi_crd,
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_[fi_sites1 + i] * polfac_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:                        local_field->CalcDipoleElecField_WithinCutoff(xyz_.data() + fi_crd1, reordered_xyz2.data(), in_ptr + fi_crd1,
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_.data(), nsites_, 3);
./potential/electrostatics/electrostatics.cpp:                                  << coords(i, 1) << " " << coords(i, 2) << " dipoles= " << dipoles(i, 0) << " "
./potential/electrostatics/electrostatics.cpp:                                  << dipoles(i, 1) << " " << dipoles(i, 2) << std::endl;
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, coords, -1, result);
./potential/electrostatics/electrostatics.cpp:        // The Ewald self field due to induced dipoles
./potential/electrostatics/electrostatics.cpp:void Electrostatics::ComputeDipoleFieldOptimized(std::vector<double> &in_v, std::vector<double> &out_v, 
./potential/electrostatics/electrostatics.cpp:    // Recalculate Electric field due to dipoles
./potential/electrostatics/electrostatics.cpp:                double A = polfac_[fi_sites + i] * polfac_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                    elec_field.CalcDipoleElecField(xyz_.data() + fi_crd, xyz_.data() + fi_crd, in_ptr + fi_crd,
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_[fi_sites1 + i] * polfac_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:                        local_field->CalcDipoleElecField_Optimized(xyz_.data() + fi_crd1, reordered_xyz2.data(), in_ptr + fi_crd1,
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_.data(), nsites_, 3);
./potential/electrostatics/electrostatics.cpp:                                  << coords(i, 1) << " " << coords(i, 2) << " dipoles= " << dipoles(i, 0) << " "
./potential/electrostatics/electrostatics.cpp:                                  << dipoles(i, 1) << " " << dipoles(i, 2) << std::endl;
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, coords, -1, result);
./potential/electrostatics/electrostatics.cpp:        // The Ewald self field due to induced dipoles
./potential/electrostatics/electrostatics.cpp:void Electrostatics::CalculateDipolesIterative(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_) {
./potential/electrostatics/electrostatics.cpp:    // Now start computation of dipole through iteration
./potential/electrostatics/electrostatics.cpp:        //  Get new dipoles and check max difference
./potential/electrostatics/electrostatics.cpp:                // TODO assuming pol not site dependant
./potential/electrostatics/electrostatics.cpp:                double p = pol_[fi_sites + i];
./potential/electrostatics/electrostatics.cpp:            std::cerr << "Dipoles diverged" << std::endl;
./potential/electrostatics/electrostatics.cpp:        ComputeDipoleFieldOptimized(mu_, Efd_, precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:    // Induced Electrostatic energy (chg-dip, dip-dip, pol)
./potential/electrostatics/electrostatics.cpp:    // Induced Electrostatic energy (chg-dip, dip-dip, pol)
./potential/electrostatics/electrostatics.cpp:    // Intramonomer dipole-dipole
./potential/electrostatics/electrostatics.cpp:                // Don't do charge-dipole and modify phi if pair is excluded
./potential/electrostatics/electrostatics.cpp:                double A = polfac_all_[fi_sites + i] * polfac_all_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_all_[fi_sites1 + i] * polfac_all_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_all_.data(), nsites_all_, 3);
./potential/electrostatics/electrostatics.cpp:                                  << " dipoles= " << dipoles(i, 0) << " " << dipoles(i, 1) << " " << dipoles(i, 2)
./potential/electrostatics/electrostatics.cpp:            double fulldummy_rec_energy = pme_solver_.computeEFVRecIsotropicInducedDipoles(
./potential/electrostatics/electrostatics.cpp:                0, charges, dipoles, PMEInstanceD::PolarizationType::Mutual, coords, tmpforces2, drecvirial);
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, coords, 2, result);
./potential/electrostatics/electrostatics.cpp:    // Intramonomer dipole-dipole
./potential/electrostatics/electrostatics.cpp:                // Don't do charge-dipole and modify phi if pair is excluded
./potential/electrostatics/electrostatics.cpp:                double A = polfac_all_[fi_sites + i] * polfac_all_[fi_sites + j];
./potential/electrostatics/electrostatics.cpp:                        double A = polfac_all_[fi_sites1 + i] * polfac_all_[fi_sites2 + j];
./potential/electrostatics/electrostatics.cpp:        // Sort the dipoles to the order helPME expects (for now)
./potential/electrostatics/electrostatics.cpp:        auto dipoles = helpme::Matrix<double>(sys_mu_all_.data(), nsites_all_, 3);
./potential/electrostatics/electrostatics.cpp:                                  << " dipoles= " << dipoles(i, 0) << " " << dipoles(i, 1) << " " << dipoles(i, 2)
./potential/electrostatics/electrostatics.cpp:            double fulldummy_rec_energy = pme_solver_.computeEFVRecIsotropicInducedDipoles(
./potential/electrostatics/electrostatics.cpp:                0, charges, dipoles, PMEInstanceD::PolarizationType::Mutual, coords, tmpforces2, drecvirial);
./potential/electrostatics/electrostatics.cpp:        pme_solver_.computePRec(-1, dipoles, coords, coords, 2, result);
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetInducedDipoles() {
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetPermanentDipoles() {
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetMolecularInducedDipoles() {
./potential/electrostatics/electrostatics.cpp:    GetInducedDipoles();
./potential/electrostatics/electrostatics.cpp:std::vector<double> Electrostatics::GetMolecularPermanentDipoles() {
./potential/electrostatics/electrostatics.cpp:    GetPermanentDipoles();
./potential/electrostatics/electrostatics.cpp:    PrecomputeDipoleIterationsInformation(ts2v, precomputedInformation, use_ghost, 0);
./potential/electrostatics/electrostatics.cpp:    CalculateDipoles(precomputedInformation, pme_solver_);
./potential/electrostatics/electrostatics.cpp:    PrecomputeDipoleIterationsInformation(ts2v, precomputedInformation, use_ghost, 1);
./potential/electrostatics/electrostatics.cpp:    CalculateDipolesMPIlocal(precomputedInformation, pme_solver_, use_ghost);
./potential/electrostatics/electrostatics.h:     * polarizabilities, ... of the system, it initializes the class,
./potential/electrostatics/electrostatics.h:     * @param[in] polfac Vector of polarizability factors of all atoms the system
./potential/electrostatics/electrostatics.h:     * @param[in] pol Vector of polarizabilities of all atoms the system
./potential/electrostatics/electrostatics.h:     * @param[in] tolerance Maximum error per dipole to assume convergence in
./potential/electrostatics/electrostatics.h:     * @param[in] maxit Maximum number of iterations of the dipole calculation
./potential/electrostatics/electrostatics.h:     * @param[in] dip_method Method to use to compute the dipoles
./potential/electrostatics/electrostatics.h:                    const std::vector<double> &polfac, const std::vector<double> &pol,
./potential/electrostatics/electrostatics.h:     * If ASPC is not being used, will reset the dipole history anyways.
./potential/electrostatics/electrostatics.h:     * It basically clears out the dipole history vector. Then it is forced to
./potential/electrostatics/electrostatics.h:     * recalculate the dipoles iteratively to get a new history.
./potential/electrostatics/electrostatics.h:     * @brief Get the number of ASPC dipole histories
./potential/electrostatics/electrostatics.h:     * Return number of dipoles histories saved
./potential/electrostatics/electrostatics.h:    double GetNumDipoleHistory() { return hist_num_aspc_; };
./potential/electrostatics/electrostatics.h:     * @brief Get the number of ASPC dipole histories
./potential/electrostatics/electrostatics.h:     * Set number of dipoles histories to initially use
./potential/electrostatics/electrostatics.h:    void SetNumDipoleHistory(size_t num_hist) { hist_num_aspc_ = num_hist; };
./potential/electrostatics/electrostatics.h:     * @brief Get the ASPC dipole history
./potential/electrostatics/electrostatics.h:     * Return history of dipoles
./potential/electrostatics/electrostatics.h:    std::vector<double> GetDipoleHistory(size_t indx);
./potential/electrostatics/electrostatics.h:     * @brief Set the ASPC dipole history
./potential/electrostatics/electrostatics.h:     * Return history of dipoles
./potential/electrostatics/electrostatics.h:     * @param[in] mu_hist dipoles to initialize history
./potential/electrostatics/electrostatics.h:    void SetDipoleHistory(size_t indx, std::vector<double> mu_hist);
./potential/electrostatics/electrostatics.h:     * @param[in] pol Vector of polarizabilities of all atoms the system
./potential/electrostatics/electrostatics.h:     * @param[in] polfac Vector of polarizability factors of all atoms the system
./potential/electrostatics/electrostatics.h:     * @param[in] dip_method Method to use to compute the dipoles
./potential/electrostatics/electrostatics.h:                          const std::vector<double> &chg_grad, const std::vector<double> &pol,
./potential/electrostatics/electrostatics.h:                          const std::vector<double> &polfac, const std::string dip_method, const bool do_grads,
./potential/electrostatics/electrostatics.h:     * @brief Sets the dipole convergence criteria
./potential/electrostatics/electrostatics.h:     * @param[in] tol Dipole convergence criteria
./potential/electrostatics/electrostatics.h:    void SetDipoleTolerance(double tol);
./potential/electrostatics/electrostatics.h:     * @brief Sets the maximum number of iterations in the dipole loop
./potential/electrostatics/electrostatics.h:    void SetDipoleMaxIt(size_t maxit);
./potential/electrostatics/electrostatics.h:    std::vector<double> GetInducedDipoles();
./potential/electrostatics/electrostatics.h:    std::vector<double> GetPermanentDipoles();
./potential/electrostatics/electrostatics.h:    std::vector<double> GetMolecularInducedDipoles();
./potential/electrostatics/electrostatics.h:    std::vector<double> GetMolecularPermanentDipoles();
./potential/electrostatics/electrostatics.h:    void CalculateOneCgDipoleIter();
./potential/electrostatics/electrostatics.h:     * @brief Gets the polfacs in system order
./potential/electrostatics/electrostatics.h:     * @brief Gets the pols in system order
./potential/electrostatics/electrostatics.h:     * @brief Gets the dipole tolerance
./potential/electrostatics/electrostatics.h:    double GetDipoleTolerance();
./potential/electrostatics/electrostatics.h:     * @brief Gets the maximum number of iterations allowed in the dipole convergence
./potential/electrostatics/electrostatics.h:    size_t GetDipoleMaxIt();
./potential/electrostatics/electrostatics.h:     * @brief Gets the convergence method for the dipoles
./potential/electrostatics/electrostatics.h:    std::string GetDipoleConvergenceMethod();
./potential/electrostatics/electrostatics.h:     * @brief Gets the sqrt of the polarizability in internal order
./potential/electrostatics/electrostatics.h:     * Oversees each dipole iteration using the normal iterative method.
./potential/electrostatics/electrostatics.h:    void CalculateDipolesIterative(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_);
./potential/electrostatics/electrostatics.h:     * and mu2 (an array of dipoles of mon type 2) such that they only contain information from monomer 2s within the cutoff.
./potential/electrostatics/electrostatics.h:     * The purpose of this function is to calculate and store these values so they can be reused for all dipole iteration
./potential/electrostatics/electrostatics.h:     * between dipole iterations.
./potential/electrostatics/electrostatics.h:    void PrecomputeDipoleIterationsInformation(std::vector<double> &out_v, std::vector<PrecomputedInfo*>& precomputedInformation, bool use_ghost = 0, bool MPI = 0);
./potential/electrostatics/electrostatics.h:     * Computes the electric field from the modified dipoles. Instead of re-computing coordinate-dependant calculations,
./potential/electrostatics/electrostatics.h:     * PrecomputeDipoleIterationsInformation.
./potential/electrostatics/electrostatics.h:    void ComputeDipoleField(std::vector<double> &in_v, std::vector<double> &out_v, bool use_ghost = 0);
./potential/electrostatics/electrostatics.h:    void ComputeDipoleFieldOptimized(std::vector<double> &in_v, std::vector<double> &out_v,
./potential/electrostatics/electrostatics.h:    void ComputeDipoleFieldMPIlocal(std::vector<double> &in_v, std::vector<double> &out_v, bool use_ghost = 0);
./potential/electrostatics/electrostatics.h:    void ComputeDipoleFieldMPIlocalOptimized(std::vector<double> &in_v, std::vector<double> &out_v,
./potential/electrostatics/electrostatics.h:     * Oversees each dipole iteration using the conjugate gradient method.
./potential/electrostatics/electrostatics.h:    void CalculateDipolesConjugateGradient(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_);
./potential/electrostatics/electrostatics.h:    void CalculateDipolesConjugateGradientMPIlocal(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost);
./potential/electrostatics/electrostatics.h:     * These are a single dipole iteration for conjugate gradient method (called by CalculateDipolesConjugateGradient).
./potential/electrostatics/electrostatics.h:    void DipolesCGIteration(std::vector<double> &in_v, std::vector<double> &out_v);
./potential/electrostatics/electrostatics.h:    void DipolesCGIterationOptimized(std::vector<double> &in_v, std::vector<double> &out_v, std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_);
./potential/electrostatics/electrostatics.h:    void DipolesCGIterationMPIlocal(std::vector<double> &in_v, std::vector<double> &out_v, bool use_ghost = 0);
./potential/electrostatics/electrostatics.h:    void DipolesCGIterationMPIlocalOptimized(std::vector<double> &in_v, std::vector<double> &out_v, std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost = 0);
./potential/electrostatics/electrostatics.h:     * Oversees each dipole iteration using the always stable predictor-corrector method.
./potential/electrostatics/electrostatics.h:    void CalculateDipolesAspc(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_);
./potential/electrostatics/electrostatics.h:    void CalculateDipolesAspcMPIlocal(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost = 0);
./potential/electrostatics/electrostatics.h:     * Oversees all of the dipole iterations. 
./potential/electrostatics/electrostatics.h:    void CalculateDipoles(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_);
./potential/electrostatics/electrostatics.h:    void CalculateDipolesMPIlocal(std::vector<PrecomputedInfo*>& precomputedInformation, helpme::PMEInstance<double>& pme_solver_, bool use_ghost = 0);
./potential/electrostatics/electrostatics.h:    std::vector<double> polfac_;
./potential/electrostatics/electrostatics.h:    // Square root of pol of each site. Size 3N (3 per atom, are the same)
./potential/electrostatics/electrostatics.h:    std::vector<double> pol_sqrt_;
./potential/electrostatics/electrostatics.h:    std::vector<double> pol_;
./potential/electrostatics/electrostatics.h:    // Tolerance in the iterative calculation of the dipoles
./potential/electrostatics/electrostatics.h:    // Tolerance refers to the maximum squared difference overall the dipoles
./potential/electrostatics/electrostatics.h:    // Maximum number of iterations allowed in the iterative dipole calculation
./potential/electrostatics/electrostatics.h:    // Induced dipoles with sys order
./potential/electrostatics/electrostatics.h:    // Permanent dipoles with sys order
./potential/electrostatics/electrostatics.h:    // Molecular induced dipoles with sys order
./potential/electrostatics/electrostatics.h:    // Molecular permanent dipoles with sys order
./potential/electrostatics/electrostatics.h:    // Dipoles
./potential/electrostatics/electrostatics.h:    // Dipole history for ASPC
./potential/electrostatics/electrostatics.h:    // Dipole predictor
./potential/electrostatics/electrostatics.h:    // Method for dipoles (ITERative, Conjugate Gradient, ASPC, INVersion)
./potential/electrostatics/electrostatics.h:    std::vector<double> polfac_all_;
./potential/electrostatics/fields.cpp: *  Computes the dipole field for a pair of sites for a number of monomers
./potential/electrostatics/fields.cpp:void ElectricFieldHolder::CalcDipoleElecField(double *xyz1, double *xyz2, double *mu1, double *mu2, size_t mon1_index,
./potential/electrostatics/fields.cpp:                // Contributions to the dipole electric field to site i of mon1
./potential/electrostatics/fields.cpp:                // Contributions to the dipole electric field to site j of mon2
./potential/electrostatics/fields.cpp: * A version of CalcDipoleElecField which only performs calculations on monomers of type 2 which are 
./potential/electrostatics/fields.cpp: * within a a twobody_cutoff distance from monomer 1. This returns the exact same values of CalcDipoleElecField
./potential/electrostatics/fields.cpp: * (as calculations involving monomers not within the twobody_cutoff are discared by CalcDipoleElecField), but
./potential/electrostatics/fields.cpp:void ElectricFieldHolder::CalcDipoleElecField_WithinCutoff(double *xyz1, double *xyz2, double *mu1, double *mu2, size_t mon1_index,
./potential/electrostatics/fields.cpp:        // Contributions to the dipole electric field to site i of mon1
./potential/electrostatics/fields.cpp:        // Contributions to the dipole electric field to site j of mon2
./potential/electrostatics/fields.cpp: * This is an optimized version of CalcDipoleElecField which should return the same values as CalcDipoleElecField.
./potential/electrostatics/fields.cpp: * This is a further optimization on CalcDipoleElecField_WithinCutoff. It retrieves previously computed atom coordinate-dependant
./potential/electrostatics/fields.cpp:void ElectricFieldHolder::CalcDipoleElecField_Optimized(double *xyz1, double *xyz2, double *mu1, double *mu2, size_t mon1_index,
./potential/electrostatics/fields.cpp:        // Contributions to the dipole electric field to site i of mon1
./potential/electrostatics/fields.cpp:        // Contributions to the dipole electric field to site j of mon2
./potential/electrostatics/fields.cpp: * This function is a subroutine of PrecomputeDipoleIterationsInformation (in electrostatics.cpp).
./potential/electrostatics/fields.cpp:void ElectricFieldHolder::CalcPrecomputedDipoleElec(double *xyz1, double *xyz2, size_t mon1_index,
./potential/electrostatics/fields.cpp:        // Contributions to the dipole electric field to site i of mon1
./potential/electrostatics/fields.cpp:            // Charge times the dipole component
./potential/electrostatics/fields.cpp:            // Dipole times dipole
./potential/electrostatics/fields.cpp:            // Gradients Charge-Dipole
./potential/electrostatics/fields.cpp:            // Gradients Dipole-Dipole
./potential/electrostatics/fields.cpp:        // Charge times the dipole component
./potential/electrostatics/fields.cpp:        // Dipole times dipole
./potential/electrostatics/fields.cpp:        // Gradients Charge-Dipole
./potential/electrostatics/fields.cpp:        // Gradients Dipole-Dipole
./potential/electrostatics/fields.h:the dipole field, and the gradients for a given pair of sites over all the
./potential/electrostatics/fields.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/fields.h:                                double Ai,                     // (polfac[i] * polfac[j]) inverted
./potential/electrostatics/fields.h:                                double Asqsqi,                 // (polfac[i] * polfac[j])^4 inverted
./potential/electrostatics/fields.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/fields.h:                                double Ai,                     // (polfac[i] * polfac[j]) inverted
./potential/electrostatics/fields.h:                                double Asqsqi,                 // (polfac[i] * polfac[j])^4 inverted
./potential/electrostatics/fields.h:    // Computes the dipole field for a pair of sites for a number of monomers
./potential/electrostatics/fields.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/fields.h:    void CalcDipoleElecField(double *xyz1, double *xyz2,              // Coordinates of mon type 1 and 2
./potential/electrostatics/fields.h:                             double *mu1, double *mu2,                // Dipoles of mon type 1 and 2
./potential/electrostatics/fields.h:                             double Asqsqi,                           // (polfac[i] * polfac[j])^4 inverted
./potential/electrostatics/fields.h:                             double aDD,                              // Thole damping aDD (dipole - dipole)
./potential/electrostatics/fields.h:    // Optimized version of CalcDipoleElecField
./potential/electrostatics/fields.h:    void CalcDipoleElecField_WithinCutoff(double *xyz1, double *xyz2,              // Coordinates of mon type 1 and 2
./potential/electrostatics/fields.h:                                          double *mu1, double *mu2,                // Dipoles of mon type 1 and 2
./potential/electrostatics/fields.h:                                          double Asqsqi,                           // (polfac[i] * polfac[j])^4 inverted
./potential/electrostatics/fields.h:                                          double aDD,                              // Thole damping aDD (dipole - dipole)
./potential/electrostatics/fields.h:    // Optimized version of CalcDipoleElecField that builds off of CalcDipoleElecField_WithinCutoff
./potential/electrostatics/fields.h:    void CalcDipoleElecField_Optimized(double *xyz1, double *xyz2,              // Coordinates of mon type 1 and 2
./potential/electrostatics/fields.h:                                        double *mu1, double *mu2,                // Dipoles of mon type 1 and 2
./potential/electrostatics/fields.h:                                        double aDD,                              // Thole damping aDD (dipole - dipole)
./potential/electrostatics/fields.h:    * This function is a subroutine of PrecomputeDipoleIterationsInformation (in electrostatics.cpp).
./potential/electrostatics/fields.h:    void CalcPrecomputedDipoleElec(double *xyz1, double *xyz2,              // Coordinates of mon type 1 and 2
./potential/electrostatics/fields.h:                                    double Asqsqi,                           // (polfac[i] * polfac[j])^4 inverted
./potential/electrostatics/fields.h:                                    double aDD,                              // Thole damping aDD (dipole - dipole)
./potential/electrostatics/fields.h:    // account for the contribution of the dipoles to the potential phi
./potential/electrostatics/fields.h:    // A=polfac[i] * polfac[j] > 0
./potential/electrostatics/fields.h:                            double *mu1, double *mu2,        // Dipoles of mon type 1 and 2
./potential/electrostatics/fields.h:                            double Asqsqi,                   // (polfac[i] * polfac[j])^4
./potential/electrostatics/fields.h:                            double *mu1, double *mu2,        // Dipoles of mon type 1 and 2
./potential/electrostatics/fields.h:                            double Asqsqi,                   // (polfac[i] * polfac[j])^4
./potential/electrostatics/files_not_used/electrostatic_tensors.h:the dipole field, and the gradients for a given pair of sites over all the
./potential/electrostatics/files_not_used/electrostatic_tensors.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/files_not_used/electrostatic_tensors.h:                     double Ai,                     // (polfac[i] * polfac[j]) inverted
./potential/electrostatics/files_not_used/electrostatic_tensors.h:                     double Asqsqi,                 // (polfac[i] * polfac[j])^4
./potential/electrostatics/files_not_used/electrostatic_tensors.h:    // Computes the dipole field for a pair of sites for a number of monomers
./potential/electrostatics/files_not_used/electrostatic_tensors.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/files_not_used/electrostatic_tensors.h:                     double Asqsqi,                 // (polfac[i] * polfac[j])^4
./potential/electrostatics/files_not_used/electrostatic_tensors.h:                     double aDD,                    // Thole damping aDD (dipole - dipole)
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:the dipole field, and the gradients for a given pair of sites over all the
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:                     double Ai,                     // (polfac[i] * polfac[j]) inverted
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:                     double Asqsqi,                 // (polfac[i] * polfac[j])^4
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:    // Computes the dipole field for a pair of sites for a number of monomers
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:    // # = mon2_index_end - mon2_index_start when A=polfac[i] * polfac[j] > 0
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:                     double Asqsqi,                 // (polfac[i] * polfac[j])^4
./potential/electrostatics/files_not_used/electrostatic_tensors_short.h:                     double aDD,                    // Thole damping aDD (dipole - dipole)
./potential/electrostatics/helpme.h: * \param transformer the matrix R to do the transform defined for a dipole as µ_new = R . µ_old.
./potential/electrostatics/helpme.h: * \param transformer the matrix R to do the transform defined for a dipole as µ_new = R . µ_old.
./potential/electrostatics/helpme.h:    //     the exponential polynomial expj(y) = Sum y^k / k!,                     //
./potential/electrostatics/helpme.h:    /// The grid point at which to start interpolation.
./potential/electrostatics/helpme.h:     * \param start the grid point at which to start interpolation.
./potential/electrostatics/helpme.h:     * \brief Gets the grid point to start interpolating from.
./potential/electrostatics/helpme.h:     * \brief The method used to converge induced dipoles
./potential/electrostatics/helpme.h:    /// The order of the cardinal B-Spline used for interpolation.
./potential/electrostatics/helpme.h:    /// The size of a cache line, in units of the size of the Real type, to allow better memory allocation policies.
./potential/electrostatics/helpme.h:     * \param angMom the angular momentum required for the iterator over multipole components.
./potential/electrostatics/helpme.h:     * quadrupoles, etc.).  A negative value indicates that only the shell with |parameterAngMom| is to be considered,
./potential/electrostatics/helpme.h:     * e.g. a value of -2 specifies that only quadrupoles (and not dipoles or charges) will be provided; the input
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * \param parameters the list of parameters associated with each atom (charges, C6 coefficients, multipoles,
./potential/electrostatics/helpme.h:     * \param parameters the list of parameters associated with each atom (charges, C6 coefficients, multipoles,
./potential/electrostatics/helpme.h:     * quadrupoles, etc.).
./potential/electrostatics/helpme.h:     * \param parameterAngMom the angular momentum of the parameters (0 for charges, C6 coefficients, 2 for quadrupoles,
./potential/electrostatics/helpme.h:     * \param parameters the list of parameters associated with each atom (charges, C6 coefficients, multipoles,
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * the parameters (0 for charges, C6 coefficients, 2 for quadrupoles, etc.). \param parameters the list of
./potential/electrostatics/helpme.h:     * parameters associated with each atom (charges, C6 coefficients, multipoles, etc...). For a parameter with
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * the angular momentum of the parameters (0 for charges, C6 coefficients, 2 for quadrupoles, etc.). \param
./potential/electrostatics/helpme.h:     * parameters the list of parameters associated with each atom (charges, C6 coefficients, multipoles, etc...).
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * momentum of the parameters (0 for charges, C6 coefficients, 2 for quadrupoles, etc.). \param parameters the
./potential/electrostatics/helpme.h:     * list of parameters associated with each atom (charges, C6 coefficients, multipoles, etc...). For a parameter
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:        if (parameterAngMom) throw std::runtime_error("Multipole self terms have not been coded yet.");
./potential/electrostatics/helpme.h:     * quadrupoles, etc.).  A negative value indicates that only the shell with |parameterAngMom| is to be considered,
./potential/electrostatics/helpme.h:     * e.g. a value of -2 specifies that only quadrupoles (and not dipoles or charges) will be provided; the input
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.).  A negative value indicates that only the shell with |parameterAngMom| is to be considered,
./potential/electrostatics/helpme.h:     * e.g. a value of -2 specifies that only quadrupoles (and not dipoles or charges) will be provided; the input
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.).
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * \param inducedDipoles the induced dipoles in the order {x1,y1,z1,x2,y2,z2,....xN,yN,zN}.
./potential/electrostatics/helpme.h:     * \param polarizationType the method used to converged the induced dipoles.
./potential/electrostatics/helpme.h:    Real computeEFVRecIsotropicInducedDipoles(int parameterAngMom, const RealMat &parameters,
./potential/electrostatics/helpme.h:                                              const RealMat &inducedDipoles, PolarizationType polarizationType,
./potential/electrostatics/helpme.h:        if (polarizationType != PolarizationType::Mutual)
./potential/electrostatics/helpme.h:            throw std::runtime_error("Only mutual (variation) optimized dipoles are supported at the moment.");
./potential/electrostatics/helpme.h:        RealMat combinedMultipoles(numAtoms, 4);
./potential/electrostatics/helpme.h:            combinedMultipoles[atom][0] = parameters[atom][0];
./potential/electrostatics/helpme.h:            combinedMultipoles[atom][1] = inducedDipoles[atom][0];
./potential/electrostatics/helpme.h:            combinedMultipoles[atom][2] = inducedDipoles[atom][1];
./potential/electrostatics/helpme.h:            combinedMultipoles[atom][3] = inducedDipoles[atom][2];
./potential/electrostatics/helpme.h:        computePVRec(1, combinedMultipoles, coordinates, coordinates, 2, potential, virial);
./potential/electrostatics/helpme.h:            const Real *mu = inducedDipoles[atom];
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * quadrupoles, etc.). \param parameters the list of parameters associated with each atom (charges, C6
./potential/electrostatics/helpme.h:     * coefficients, multipoles, etc...). For a parameter with angular momentum L, a matrix of dimension nAtoms x nL
./potential/electrostatics/helpme.h:     * \param splineOrder the order of B-spline; must be at least (2 + max. multipole order + deriv. level needed).
./potential/electrostatics/helpme.h:     * \param splineOrder the order of B-spline; must be at least (2 + max. multipole order + deriv. level needed).
./potential/electrostatics/helpme.h:     * \param splineOrder the order of B-spline; must be at least (2 + max. multipole order + deriv. level needed).
./potential/electrostatics/helpme.h:     * \param splineOrder the order of B-spline; must be at least (2 + max. multipole order + deriv. level needed).
./potential/electrostatics/.deps/libmbx_la-electrostatics.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/electrostatics/.deps/libmbx_la-electrostatics.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./potential/electrostatics/.deps/libmbx_la-fields.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/electrostatics/.deps/libmbx_la-fields.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
Binary file ./potential/electrostatics/libmbx_la-fields.o matches
Binary file ./potential/electrostatics/libmbx_la-electrostatics.o matches
./potential/force_field/angles.cpp:Angles::Angles(std::string topology, std::vector<size_t> indexes, std::string functional_form) {
./potential/force_field/angles.cpp:    topology_ = topology;
./potential/force_field/angles.cpp:    std::transform(topology_.begin(), topology_.end(), topology_.begin(), ::tolower);
./potential/force_field/angles.cpp:double Angles::GetTopologyGradient(double x) {
./potential/force_field/angles.cpp:    if (angle.topology_ != topology_ || angle.functional_form_ != functional_form_ || angle.indexes_ != indexes_ ||
./potential/force_field/angles.h:#include "topology.h"
./potential/force_field/angles.h: * topology    1st idx  2nd idx   3rd idx    func form       k      theta0
./potential/force_field/angles.h:class Angles : public Topology {
./potential/force_field/angles.h:     * @brief Overloaded constructor, setting the respective topology, angle_type
./potential/force_field/angles.h:     * @param[in] topology This is the topology, which will be angle
./potential/force_field/angles.h:    Angles(std::string topology, std::vector<size_t> indexes, std::string functional_form);
./potential/force_field/angles.h:     * @brief gets the gradient for this particular topology for a given
./potential/force_field/angles.h:    double GetTopologyGradient(double x);
./potential/force_field/bond.cpp:Bond::Bond(std::string topology, std::vector<size_t> indexes, std::string functional_form) {
./potential/force_field/bond.cpp:    topology_ = topology;
./potential/force_field/bond.cpp:    std::transform(topology_.begin(), topology_.end(), topology_.begin(), ::tolower);
./potential/force_field/bond.cpp:double Bond::GetTopologyGradient(double x) {
./potential/force_field/bond.cpp:    if (bond.topology_ != topology_ || bond.functional_form_ != functional_form_ || bond.indexes_ != indexes_ ||
./potential/force_field/bond.h:#include "topology.h"
./potential/force_field/bond.h: * topology    1st idx  2nd idx      func form          k      r0
./potential/force_field/bond.h:class Bond : public Topology {
./potential/force_field/bond.h:     * @brief Overloaded constructor, setting the respective topology, bond_type
./potential/force_field/bond.h:     * @param[in] topology This is the topology, which will be bond
./potential/force_field/bond.h:    Bond(std::string topology, std::vector<size_t> indexes, std::string functional_form);
./potential/force_field/bond.h:     * @brief gets the gradient for this particular topology for a given
./potential/force_field/bond.h:    double GetTopologyGradient(double x);
./potential/force_field/calculators.cpp:    // match the dlpoly manual's definition.
./potential/force_field/calculators.cpp:    // From dlpoly manual, cross product of the two normal vectors will allow you
./potential/force_field/calculators.cpp:    // are assigned according to equation 2.66 in the dlpoly manual and from the
./potential/force_field/calculators.cpp:    // dlpoly code.
./potential/force_field/calculators.cpp:    // Note: in dlpoly, this step does not exist. They do not find the vector w.
./potential/force_field/calculators.cpp:    // Compute dot products (as stipulated in dlpoly)
./potential/force_field/calculators.h: * of the distances or angles is given in the dlpoly manual.
./potential/force_field/calculators.h: * in the dlpoly manual on the specific of the formula
./potential/force_field/calculators.h: * [(rij dot ukn)^2 + (rij dot vkn)^2]^1/2 / rij    See dlpoly 2.65 and 2.66 to
./potential/force_field/calculators.h: * In dlpoly these are the gamb, gamc, gamd
./potential/force_field/calculators.h: * exactly what dlpoly stipulates.
./potential/force_field/connectivity.h:#include "potential/force_field/topology.h"
./potential/force_field/dihedral.cpp:Dihedral::Dihedral(std::string topology, std::vector<size_t> indexes, std::string functional_form) {
./potential/force_field/dihedral.cpp:    topology_ = topology;
./potential/force_field/dihedral.cpp:    std::transform(topology_.begin(), topology_.end(), topology_.begin(), ::tolower);
./potential/force_field/dihedral.cpp:        // x needs to be rescaled as in dlpoly with the following two operations
./potential/force_field/dihedral.cpp:double Dihedral::GetTopologyGradient(double x) {
./potential/force_field/dihedral.cpp:    if (dihedral.topology_ != topology_ || dihedral.functional_form_ != functional_form_ ||
./potential/force_field/dihedral.h:#include "topology.h"
./potential/force_field/dihedral.h: * topology   1st idx  2nd idx   3rd idx  4th idx  func form   A      m     d
./potential/force_field/dihedral.h:class Dihedral : public Topology {
./potential/force_field/dihedral.h:     * @param[in] topology This is the topology, which will be dihedral
./potential/force_field/dihedral.h:    Dihedral(std::string topology, std::vector<size_t> indexes, std::string functional_form);
./potential/force_field/dihedral.h:     * @brief gets the gradient for this particular topology for a given
./potential/force_field/dihedral.h:    double GetTopologyGradient(double x);
./potential/force_field/energyff.cpp:            // energy match dlpoly. It is currently unknown why dlpoly chooses to
./potential/force_field/energyff.cpp:            // Get topology gradient. Each bond will contribute a gradient to
./potential/force_field/energyff.cpp:            double delta_grad = bond->GetTopologyGradient(distance);
./potential/force_field/energyff.cpp:            // dimension for each atom in the topology
./potential/force_field/energyff.cpp:            // Get topology gradient. Each angle will contribute a gradient to
./potential/force_field/energyff.cpp:            double delta_grad = angle->GetTopologyGradient(theta);
./potential/force_field/energyff.cpp:                // idx = 0 is atom on the end. Dlpoly defines this to be atom j. This is
./potential/force_field/energyff.cpp:                    // to dl_poly manual)
./potential/force_field/energyff.cpp:            // Get topology gradient. Each dihedral angle will contribute a gradient to
./potential/force_field/energyff.cpp:            double delta_grad = dihedral->GetTopologyGradient(phi);
./potential/force_field/energyff.cpp:            // Multiply by minus 1 because we want gradient not force. Check Dlpoly
./potential/force_field/energyff.cpp:            // energy match dlpoly. It is currently unknown why dlpoly chooses to
./potential/force_field/energyff.cpp:            // in the incorrect order from dlpoly
./potential/force_field/energyff.cpp:                double delta_grad = (1.0 / (3.0 * sin(phis[i]))) * inversion->GetTopologyGradient(phis[i]);
./potential/force_field/inversion.cpp:Inversion::Inversion(std::string topology, std::vector<size_t> indexes, std::string functional_form) {
./potential/force_field/inversion.cpp:    topology_ = topology;
./potential/force_field/inversion.cpp:    std::transform(topology_.begin(), topology_.end(), topology_.begin(), ::tolower);
./potential/force_field/inversion.cpp:double Inversion::GetTopologyGradient(double x) {
./potential/force_field/inversion.cpp:    if (inversion.topology_ != topology_ || inversion.functional_form_ != functional_form_ ||
./potential/force_field/inversion.h:#include "topology.h"
./potential/force_field/inversion.h: * topology   1st idx  2nd idx   3rd idx  4th idx  func form   k      phi0
./potential/force_field/inversion.h:class Inversion : public Topology {
./potential/force_field/inversion.h:     * @param[in] topology This is the topology, which will be inversion
./potential/force_field/inversion.h:    Inversion(std::string topology, std::vector<size_t> indexes, std::string functional_form);
./potential/force_field/inversion.h:     * @brief gets the gradient for this particular topology for a given
./potential/force_field/inversion.h:    double GetTopologyGradient(double x);
./potential/force_field/topology.cpp:#include "topology.h"
./potential/force_field/topology.cpp: * @file topology.cpp
./potential/force_field/topology.cpp: * @brief Implementing all of the methods in topology.h
./potential/force_field/topology.cpp:Topology::Topology() {}
./potential/force_field/topology.cpp:Topology::~Topology() {}
./potential/force_field/topology.cpp:void Topology::GetParameters(std::vector<double> &linear_parameters, std::vector<double> &nonlinear_parameters) {
./potential/force_field/topology.cpp:size_t Topology::GetNumNonLinear() { return num_nonlinear_params_; }
./potential/force_field/topology.cpp:size_t Topology::GetNumLinear() { return num_linear_params_; }
./potential/force_field/topology.cpp:void Topology::SetNumNonLinear(size_t num_nonlinear) { num_nonlinear_params_ = num_nonlinear; }
./potential/force_field/topology.cpp:void Topology::SetNumLinear(size_t num_linear) { num_linear_params_ = num_linear; }
./potential/force_field/topology.cpp:void Topology::SetIndexes(std::vector<size_t> indexes) { indexes_ = indexes; }
./potential/force_field/topology.cpp:std::vector<size_t> Topology::GetIndexes() { return indexes_; }
./potential/force_field/topology.cpp:void Topology::SetFunctionalForm(std::string functional_form) {
./potential/force_field/topology.cpp:std::string Topology::GetFunctionalForm() { return functional_form_; }
./potential/force_field/topology.cpp:void Topology::SetTopology(std::string topology) {
./potential/force_field/topology.cpp:    topology_ = topology;
./potential/force_field/topology.cpp:    std::transform(topology_.begin(), topology_.end(), topology_.begin(), ::tolower);
./potential/force_field/topology.cpp:std::string Topology::GetTopology() { return topology_; }
./potential/force_field/topology.h: * @file topology.h
./potential/force_field/topology.h: * @brief Contains all of the methods common to all of the topology types.
./potential/force_field/topology.h: * variables and functions for topology classes
./potential/force_field/topology.h:class Topology {
./potential/force_field/topology.h:    Topology();
./potential/force_field/topology.h:    ~Topology();
./potential/force_field/topology.h:     * @brief Sets the current indexes for the given topology type
./potential/force_field/topology.h:     * @brief Obtain the indicies for the given topology type
./potential/force_field/topology.h:     * @brief Sets the topology type
./potential/force_field/topology.h:     * @param topology The topology type (bond, angle dihedral, inversion) that
./potential/force_field/topology.h:    void SetTopology(std::string topology);
./potential/force_field/topology.h:     * @brief Gets the current topology
./potential/force_field/topology.h:     * @return The topology (bond, angle, dihedral, inversion)
./potential/force_field/topology.h:    std::string GetTopology();
./potential/force_field/topology.h:     * The variable to keep track of the connectivity or the topology. E.g. Bond
./potential/force_field/topology.h:    std::string topology_;
./potential/force_field/topology.h:     * The indicies of atoms in the given topology type
./potential/force_field/.deps/libmbx_la-angles.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-angles.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-bond.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-bond.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-connectivity.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-connectivity.Plo: potential/force_field/inversion.h potential/force_field/topology.h
./potential/force_field/.deps/libmbx_la-connectivity.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-connectivity.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-dihedral.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-dihedral.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-energyff.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-energyff.Plo: potential/force_field/inversion.h potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-energyff.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-energyff.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-inversion.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-inversion.Plo:potential/force_field/topology.h:
./potential/force_field/.deps/libmbx_la-topology.Plo:potential/force_field/libmbx_la-topology.lo: \
./potential/force_field/.deps/libmbx_la-topology.Plo: potential/force_field/topology.cpp /usr/include/stdc-predef.h \
./potential/force_field/.deps/libmbx_la-topology.Plo: potential/force_field/topology.h \
./potential/force_field/.deps/libmbx_la-topology.Plo:potential/force_field/topology.h:
Binary file ./potential/force_field/libmbx_la-angles.o matches
Binary file ./potential/force_field/libmbx_la-bond.o matches
Binary file ./potential/force_field/libmbx_la-connectivity.o matches
Binary file ./potential/force_field/libmbx_la-dihedral.o matches
Binary file ./potential/force_field/libmbx_la-topology.o matches
Binary file ./potential/force_field/libmbx_la-inversion.o matches
Binary file ./potential/force_field/libmbx_la-energyff.o matches
./potential/force_field/libmbx_la-topology.lo:# potential/force_field/libmbx_la-topology.lo - a libtool object file
./potential/force_field/libmbx_la-topology.lo:non_pic_object='libmbx_la-topology.o'
./potential/lj/.deps/libmbx_la-lj.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/lj/.deps/libmbx_la-lj.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
./potential/lj/.deps/libmbx_la-ljtools.Plo: /home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h \
./potential/lj/.deps/libmbx_la-ljtools.Plo:/home2/seungchang/software/gcc6.5.0/include/c++/6.5.0/bits/hashtable_policy.h:
Binary file ./potential/lj/libmbx_la-lj.o matches
./tests/getset-test.cpp:        systems[i].SetDipoleMethod("cg");
./tests/getset-test.cpp:    // Try a smaller dipole tolerance, increasing the number of iterations
./tests/getset-test.cpp:    testcase = "Gradients with smaller dipole tolerance";
./tests/getset-test.cpp:        systems[i].SetDipoleTol(1E-18);
./tests/getset-test.cpp:        systems[i].SetDipoleMaxIt(200);
./tests/getset-test.cpp:    testcase = "Energies (wgrad) with maller dipole tolerance";
./tests/getset-test.cpp:        systems[i].SetDipoleMethod("aspc");
./tests/system-test.cpp:    std::vector<double> pols_manual = system_ref.GetPolarizabilities();
./tests/system-test.cpp:    std::vector<double> pols_read = systems[0].GetPolarizabilities();
./tests/system-test.cpp:    CompareVector(pols_manual, pols_read, header_manual + "::" + test, exitcode);
./tests/system-test.cpp:    pols_manual = system_ref.GetRealPolarizabilities();
./tests/system-test.cpp:    pols_read = systems[0].GetRealPolarizabilities();
./tests/system-test.cpp:    CompareVector(pols_manual, pols_read, header_manual + "::" + test, exitcode);
./tests/system-test.cpp:    std::vector<double> polfacs_manual = system_ref.GetPolarizabilityFactors();
./tests/system-test.cpp:    std::vector<double> polfacs_read = systems[0].GetPolarizabilityFactors();
./tests/system-test.cpp:    CompareVector(polfacs_manual, polfacs_read, header_manual + "::" + test, exitcode);
./tests/system-test.cpp:    polfacs_manual = system_ref.GetRealPolarizabilityFactors();
./tests/system-test.cpp:    polfacs_read = systems[0].GetRealPolarizabilityFactors();
./tests/system-test.cpp:    CompareVector(polfacs_manual, polfacs_read, header_manual + "::" + test, exitcode);
./tests/unittests/setup_ch4_1.h:    std::vector<double> polfac{1.3932677000e+00, 3.8978363000e-01, 3.8978363000e-01, 3.8978363000e-01,                 \
./tests/unittests/setup_ch4_1.h:    std::vector<double> pol{1.3932677000e+00, 3.8978363000e-01, 3.8978363000e-01, 3.8978363000e-01, 3.8978363000e-01}; \
./tests/unittests/setup_ch4_1.h:    std::vector<double> real_polfac{1.3932677000e+00, 3.8978363000e-01, 3.8978363000e-01, 3.8978363000e-01,            \
./tests/unittests/setup_ch4_1.h:    std::vector<double> real_pol{1.3932677000e+00, 3.8978363000e-01, 3.8978363000e-01, 3.8978363000e-01,               \
./tests/unittests/setup_co2_1.h:    std::vector<double> polfac{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01};                         \
./tests/unittests/setup_co2_1.h:    std::vector<double> pol{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01};                            \
./tests/unittests/setup_co2_1.h:    std::vector<double> real_polfac{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01};                    \
./tests/unittests/setup_co2_1.h:    std::vector<double> real_pol{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01};                       \
./tests/unittests/setup_connectivity.h:#include "potential/force_field/topology.h"
./tests/unittests/setup_dummy_1.h:    std::vector<double> polfac{0.0};                                                   \
./tests/unittests/setup_dummy_1.h:    std::vector<double> pol{0.0};                                                      \
./tests/unittests/setup_dummy_1.h:    std::vector<double> real_polfac{0.0};                                              \
./tests/unittests/setup_dummy_1.h:    std::vector<double> real_pol{0.0};                                                 \
./tests/unittests/setup_h2o_1_br_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_br_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 7.1668000000e+00}; \
./tests/unittests/setup_h2o_1_br_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 7.1668000000e+00};           \
./tests/unittests/setup_h2o_1_br_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 7.1668000000e+00};              \
./tests/unittests/setup_h2o_1_cl_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_cl_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 5.3602000000e+00}; \
./tests/unittests/setup_h2o_1_cl_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 5.3602000000e+00};           \
./tests/unittests/setup_h2o_1_cl_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 5.3602000000e+00};              \
./tests/unittests/setup_h2o_1_cs_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_cs_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 2.3660000000e+00}; \
./tests/unittests/setup_h2o_1_cs_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 2.3660000000e+00};           \
./tests/unittests/setup_h2o_1_cs_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 2.3660000000e+00};              \
./tests/unittests/setup_h2o_1_f_1.h:std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00, 2.4669000000e+00};
./tests/unittests/setup_h2o_1_f_1.h:std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 2.4669000000e+00};
./tests/unittests/setup_h2o_1_f_1.h:std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 2.4669000000e+00};
./tests/unittests/setup_h2o_1_f_1.h:std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 2.4669000000e+00};
./tests/unittests/setup_h2o_1_i_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_i_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 1.0118400000e+01}; \
./tests/unittests/setup_h2o_1_i_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.0118400000e+01};           \
./tests/unittests/setup_h2o_1_i_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.0118400000e+01};              \
./tests/unittests/setup_h2o_1_k_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_k_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 8.1840000000e-01}; \
./tests/unittests/setup_h2o_1_k_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 8.1840000000e-01};           \
./tests/unittests/setup_h2o_1_k_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 8.1840000000e-01};              \
./tests/unittests/setup_h2o_1_li_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_li_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 2.8500000000e-02}; \
./tests/unittests/setup_h2o_1_li_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 2.8500000000e-02};           \
./tests/unittests/setup_h2o_1_li_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 2.8500000000e-02};              \
./tests/unittests/setup_h2o_1_mbpol.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00};    \
./tests/unittests/setup_h2o_1_mbpol.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00};       \
./tests/unittests/setup_h2o_1_mbpol.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01};                 \
./tests/unittests/setup_h2o_1_mbpol.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01};                    \
./tests/unittests/setup_h2o_1_na_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_na_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 1.4760000000e-01}; \
./tests/unittests/setup_h2o_1_na_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.4760000000e-01};           \
./tests/unittests/setup_h2o_1_na_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.4760000000e-01};              \
./tests/unittests/setup_h2o_1_rb_1.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,                 \
./tests/unittests/setup_h2o_1_rb_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 1.3614000000e+00}; \
./tests/unittests/setup_h2o_1_rb_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3614000000e+00};           \
./tests/unittests/setup_h2o_1_rb_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3614000000e+00};              \
./tests/unittests/setup_h2o_2.h:    std::vector<double> polfac(n_atoms, 1e-7);                                                      \
./tests/unittests/setup_h2o_2.h:    std::vector<double> pol(n_atoms, 1e-7);                                                         \
./tests/unittests/setup_h2o_2.h:        polfac[4 * n + 0] = pol[4 * n + 0] = polfacO;                                               \
./tests/unittests/setup_h2o_2.h:        polfac[4 * n + 1] = pol[4 * n + 1] = polfacH;                                               \
./tests/unittests/setup_h2o_2.h:        polfac[4 * n + 2] = pol[4 * n + 2] = polfacH;                                               \
./tests/unittests/setup_h2o_2.h:        polfac[4 * n + 3] = pol[4 * n + 3] = polfacM;                                               \
./tests/unittests/setup_h2o_216.h:    std::vector<double> polfac(n_atoms, 0);                                                                      \
./tests/unittests/setup_h2o_216.h:    std::vector<double> pol(n_atoms, 0);                                                                         \
./tests/unittests/setup_h2o_216.h:        polfac[4 * n + 0] = pol[4 * n + 0] = polfacO;                                                            \
./tests/unittests/setup_h2o_216.h:        polfac[4 * n + 1] = pol[4 * n + 1] = polfacH;                                                            \
./tests/unittests/setup_h2o_216.h:        polfac[4 * n + 2] = pol[4 * n + 2] = polfacH;                                                            \
./tests/unittests/setup_h2o_216.h:        polfac[4 * n + 3] = pol[4 * n + 3] = polfacM;                                                            \
./tests/unittests/setup_h2o_2_cs_1.h:    std::vector<double> polfac{                                                                                       \
./tests/unittests/setup_h2o_2_cs_1.h:    std::vector<double> pol{2.3660000000e+00, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, \
./tests/unittests/setup_h2o_2_cs_1.h:    std::vector<double> real_polfac{2.3660000000e+00, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,           \
./tests/unittests/setup_h2o_2_cs_1.h:    std::vector<double> real_pol{2.3660000000e+00, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,              \
./tests/unittests/setup_h2o_2_k_1.h:    std::vector<double> polfac{                                                                                       \
./tests/unittests/setup_h2o_2_k_1.h:    std::vector<double> pol{8.1840000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, \
./tests/unittests/setup_h2o_2_k_1.h:    std::vector<double> real_polfac{8.1840000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,           \
./tests/unittests/setup_h2o_2_k_1.h:    std::vector<double> real_pol{8.1840000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,              \
./tests/unittests/setup_h2o_2_li_1.h:    std::vector<double> polfac{                                                                                       \
./tests/unittests/setup_h2o_2_li_1.h:    std::vector<double> pol{2.8500000000e-02, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, \
./tests/unittests/setup_h2o_2_li_1.h:    std::vector<double> real_polfac{2.8500000000e-02, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,           \
./tests/unittests/setup_h2o_2_li_1.h:    std::vector<double> real_pol{2.8500000000e-02, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,              \
./tests/unittests/setup_h2o_2_mbpol.h:    std::vector<double> polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 1.3100000000e+00,      \
./tests/unittests/setup_h2o_2_mbpol.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00,         \
./tests/unittests/setup_h2o_2_mbpol.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,                   \
./tests/unittests/setup_h2o_2_mbpol.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,                      \
./tests/unittests/setup_h2o_2_na_1.h:    std::vector<double> polfac{                                                                                       \
./tests/unittests/setup_h2o_2_na_1.h:    std::vector<double> pol{1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, \
./tests/unittests/setup_h2o_2_na_1.h:    std::vector<double> real_polfac{1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,           \
./tests/unittests/setup_h2o_2_na_1.h:    std::vector<double> real_pol{1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,              \
./tests/unittests/setup_h2o_2_rb_1.h:    std::vector<double> polfac{                                                                                       \
./tests/unittests/setup_h2o_2_rb_1.h:    std::vector<double> pol{1.3614000000e+00, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, \
./tests/unittests/setup_h2o_2_rb_1.h:    std::vector<double> real_polfac{1.3614000000e+00, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,           \
./tests/unittests/setup_h2o_2_rb_1.h:    std::vector<double> real_pol{1.3614000000e+00, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,              \
./tests/unittests/setup_h2o_3.h:    std::vector<double> polfac(n_sites, 0.0);                                                              \
./tests/unittests/setup_h2o_3.h:    std::vector<double> pol(n_sites, 0.0);                                                                 \
./tests/unittests/setup_h2o_3.h:        polfac[4 * n + 0] = 1.31000e+00;                                                                   \
./tests/unittests/setup_h2o_3.h:        polfac[4 * n + 1] = 2.94000e-01;                                                                   \
./tests/unittests/setup_h2o_3.h:        polfac[4 * n + 2] = 2.94000e-01;                                                                   \
./tests/unittests/setup_h2o_3.h:        polfac[4 * n + 3] = 1.31000e+00;                                                                   \
./tests/unittests/setup_h2o_3.h:        pol[4 * n + 0] = 1.31000e+00;                                                                      \
./tests/unittests/setup_h2o_3.h:        pol[4 * n + 1] = 2.94000e-01;                                                                      \
./tests/unittests/setup_h2o_3.h:        pol[4 * n + 2] = 2.94000e-01;                                                                      \
./tests/unittests/setup_h2o_3.h:        pol[4 * n + 3] = 0.00000e+00;                                                                      \
./tests/unittests/setup_h2o_5_br_1.h:    std::vector<double> polfac{                                                                                       \
./tests/unittests/setup_h2o_5_br_1.h:    std::vector<double> pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 0.0000000000e+00, 7.1668000000e+00, \
./tests/unittests/setup_h2o_5_br_1.h:    std::vector<double> real_polfac{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 7.1668000000e+00,           \
./tests/unittests/setup_h2o_5_br_1.h:    std::vector<double> real_pol{1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01, 7.1668000000e+00,              \
./tests/unittests/setup_h4_dummy.h:#include "potential/force_field/topology.h"
./tests/unittests/setup_io_connectivity.h:#include "potential/force_field/topology.h"
./tests/unittests/setup_topology.h:#include "potential/force_field/topology.h"
./tests/unittests/setup_topology.h: * @file setup_topology.h
./tests/unittests/setup_topology.h: *        topology type and their functional form is used to check the
./tests/unittests/unittest-angle.cpp:#include "setup_topology.h"
./tests/unittests/unittest-angle.cpp:#include "potential/force_field/topology.h"
./tests/unittests/unittest-angle.cpp:            REQUIRE(angle.GetTopologyGradient(theta) == Approx(ff_angles_harm_grad).margin(TOL));
./tests/unittests/unittest-angle.cpp:            REQUIRE(angle.GetTopologyGradient(theta) == Approx(ff_angles_quartic_grad).margin(TOL));
./tests/unittests/unittest-angle.cpp:            REQUIRE(angle.GetTopologyGradient(theta) == Approx(ff_angles_none_grad).margin(TOL));
./tests/unittests/unittest-bond.cpp:#include "setup_topology.h"
./tests/unittests/unittest-bond.cpp:#include "potential/force_field/topology.h"
./tests/unittests/unittest-bond.cpp:            REQUIRE(bond.GetTopologyGradient(distance) == Approx(ff_bond_harm_grad).margin(TOL));
./tests/unittests/unittest-bond.cpp:            REQUIRE(bond.GetTopologyGradient(distance) == Approx(ff_bond_morse_grad).margin(TOL));
./tests/unittests/unittest-bond.cpp:            REQUIRE(bond.GetTopologyGradient(distance) == Approx(ff_bond_quartic_grad).margin(TOL));
./tests/unittests/unittest-bond.cpp:            REQUIRE(bond.GetTopologyGradient(distance) == Approx(ff_bond_none_grad).margin(TOL));
./tests/unittests/unittest-box-shapes.cpp:                          {"dipole_tolerance", 1E-016},
./tests/unittests/unittest-box-shapes.cpp:                          {"dipole_max_it", 100},
./tests/unittests/unittest-box-shapes.cpp:                          {"dipole_method", "cg"},
./tests/unittests/unittest-box-shapes.cpp:                          {"ignore_1b_poly", nlohmann::json::array()},
./tests/unittests/unittest-box-shapes.cpp:                          {"ignore_2b_poly", nlohmann::json::array()},
./tests/unittests/unittest-box-shapes.cpp:                          {"ignore_3b_poly", nlohmann::json::array()}}},
./tests/unittests/unittest-dihedral.cpp:#include "setup_topology.h"
./tests/unittests/unittest-dihedral.cpp:#include "potential/force_field/topology.h"
./tests/unittests/unittest-dihedral.cpp:            REQUIRE(dihedral.GetTopologyGradient(dihedral_phi) == Approx(ff_dihedral_cos_grad).margin(TOL));
./tests/unittests/unittest-dihedral.cpp:            REQUIRE(dihedral.GetTopologyGradient(dihedral_phi) == Approx(ff_dihedral_harm_grad).margin(TOL));
./tests/unittests/unittest-dihedral.cpp:            REQUIRE(dihedral.GetTopologyGradient(dihedral_phi) == Approx(ff_dihedral_hcos_grad).margin(TOL));
./tests/unittests/unittest-dihedral.cpp:            REQUIRE(dihedral.GetTopologyGradient(dihedral_phi) == Approx(ff_dihedral_cos3_grad).margin(TOL));
./tests/unittests/unittest-dihedral.cpp:            REQUIRE(dihedral.GetTopologyGradient(dihedral_phi) == Approx(ff_dihedral_none_grad).margin(TOL));
./tests/unittests/unittest-dispersion-gas-cutoff.cpp:#include "setup_h2o_2_mbpol.h"
./tests/unittests/unittest-dispersion-pme.cpp:#include "setup_h2o_2_mbpol.h"
./tests/unittests/unittest-gas-dispersion-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, false,
./tests/unittests/unittest-gas-dispersion-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, false,
./tests/unittests/unittest-gas-electrostatics-mbpol.cpp:TEST_CASE("Test the electrostatics class for mbpol (gas phase).") {
./tests/unittests/unittest-gas-electrostatics-mbpol.cpp:    // MBpol test
./tests/unittests/unittest-gas-electrostatics-mbpol.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-gas-nbodyterms-mbpol.cpp:TEST_CASE("Test the n-body terms for mbpol (gas phase).") {
./tests/unittests/unittest-gas-nbodyterms-mbpol.cpp:    // MB-pol test
./tests/unittests/unittest-gas-nbodyterms-mbpol.cpp:    SECTION("One body (polynomials)") {
./tests/unittests/unittest-gas-nbodyterms-mbpol.cpp:    SECTION("Two body (polynomials)") {
./tests/unittests/unittest-gas-nbodyterms-mbpol.cpp:    SECTION("Three body (polynomials)") {
./tests/unittests/unittest-gas-nopolarization-findif.cpp:    double polfacO = 0;
./tests/unittests/unittest-gas-nopolarization-findif.cpp:    double polfacH = 0;
./tests/unittests/unittest-gas-nopolarization-findif.cpp:    double polfacM = 0;
./tests/unittests/unittest-gas-nopolarization-findif.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-gas-nopolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-gas-nopolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-gas-withpolarization-findif.cpp:    double polfacO = 1.310;
./tests/unittests/unittest-gas-withpolarization-findif.cpp:    double polfacH = 0.294;
./tests/unittests/unittest-gas-withpolarization-findif.cpp:    double polfacM = 0;
./tests/unittests/unittest-gas-withpolarization-findif.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-gas-withpolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-gas-withpolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-gas-withpolarization-findif.cpp:TEST_CASE("test the electrostatics class for coulomb and polarization terms (GAS) - finite differences.") {
./tests/unittests/unittest-h2o-virial.cpp:#include "setup_h2o_1_mbpol.h"
./tests/unittests/unittest-h2o-virial.cpp:#include "setup_h2o_2_mbpol.h"
./tests/unittests/unittest-h2o-virial.cpp:#include "setup_h2o_3_mbpol.h"
./tests/unittests/unittest-h2o-virial.cpp:#include "setup_h2o_4_mbpol.h"
./tests/unittests/unittest-inversion.cpp:#include "setup_topology.h"
./tests/unittests/unittest-inversion.cpp:#include "potential/force_field/topology.h"
./tests/unittests/unittest-inversion.cpp:            REQUIRE(inversion.GetTopologyGradient(inversion_phi) == Approx(ff_inversion_harm_grad).margin(TOL));
./tests/unittests/unittest-inversion.cpp:            REQUIRE(inversion.GetTopologyGradient(inversion_phi) == Approx(ff_inversion_none_grad).margin(TOL));
./tests/unittests/unittest-pbc-1b-mbpol-findif.cpp:TEST_CASE("Test MB-pol One-body gradients finite differences") {
./tests/unittests/unittest-pbc-1b-mbpol-findif.cpp:    // MB-pol test
./tests/unittests/unittest-pbc-1b-mbpol-findif.cpp:    my_sys.SetDipoleMethod("cg");
./tests/unittests/unittest-pbc-1b-mbpol-findif.cpp:    SECTION("One body (polynomials)") {
./tests/unittests/unittest-pbc-2bpoly-mbpol-findif.cpp:TEST_CASE("Test MB-pol One-body gradients finite differences") {
./tests/unittests/unittest-pbc-2bpoly-mbpol-findif.cpp:    // MB-pol test
./tests/unittests/unittest-pbc-2bpoly-mbpol-findif.cpp:    my_sys.SetDipoleMethod("cg");
./tests/unittests/unittest-pbc-2bpoly-mbpol-findif.cpp:    SECTION("One body (polynomials)") {
./tests/unittests/unittest-pbc-3bpoly-mbpol-findif.cpp:TEST_CASE("Test MB-pol One-body gradients finite differences") {
./tests/unittests/unittest-pbc-3bpoly-mbpol-findif.cpp:    // MB-pol test
./tests/unittests/unittest-pbc-3bpoly-mbpol-findif.cpp:    my_sys.SetDipoleMethod("cg");
./tests/unittests/unittest-pbc-3bpoly-mbpol-findif.cpp:    SECTION("One body (polynomials)") {
./tests/unittests/unittest-pbc-dispersion-mbpol-findif.cpp:TEST_CASE("Test MB-pol One-body gradients finite differences") {
./tests/unittests/unittest-pbc-dispersion-mbpol-findif.cpp:    // MB-pol test
./tests/unittests/unittest-pbc-dispersion-mbpol-findif.cpp:    my_sys.SetDipoleMethod("cg");
./tests/unittests/unittest-pbc-dispersion-mbpol-findif.cpp:    SECTION("One body (polynomials)") {
./tests/unittests/unittest-pbc-electrostatics-mbpol-findif.cpp:TEST_CASE("Test MB-pol One-body gradients finite differences") {
./tests/unittests/unittest-pbc-electrostatics-mbpol-findif.cpp:    // MB-pol test
./tests/unittests/unittest-pbc-electrostatics-mbpol-findif.cpp:    my_sys.SetDipoleMethod("cg");
./tests/unittests/unittest-pbc-electrostatics-mbpol-findif.cpp:    SECTION("One body (polynomials)") {
./tests/unittests/unittest-pme-nopolarization-findif.cpp:TEST_CASE("test the electrostatics class for coulomb and polarization terms (PME) - finite differences.") {
./tests/unittests/unittest-pme-nopolarization-findif.cpp:    double polfacO = 0;
./tests/unittests/unittest-pme-nopolarization-findif.cpp:    double polfacH = 0;
./tests/unittests/unittest-pme-nopolarization-findif.cpp:    double polfacM = 0;
./tests/unittests/unittest-pme-nopolarization-findif.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-nopolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-pme-nopolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-pme-nopolarization.cpp:    double polfacO = 0;
./tests/unittests/unittest-pme-nopolarization.cpp:    double polfacH = 0;
./tests/unittests/unittest-pme-nopolarization.cpp:    double polfacM = 0;
./tests/unittests/unittest-pme-nopolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-nopolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-nopolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-withpolarization-findif.cpp:    double polfacO = 1.310;
./tests/unittests/unittest-pme-withpolarization-findif.cpp:    double polfacH = 0.294;
./tests/unittests/unittest-pme-withpolarization-findif.cpp:    double polfacM = 0;
./tests/unittests/unittest-pme-withpolarization-findif.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-withpolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-pme-withpolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./tests/unittests/unittest-pme-withpolarization-findif.cpp:TEST_CASE("test the electrostatics class for coulomb and polarization terms (PME) - finite differences.") {
./tests/unittests/unittest-pme-withpolarization.cpp:    double polfacO = 1.310;
./tests/unittests/unittest-pme-withpolarization.cpp:    double polfacH = 0.294;
./tests/unittests/unittest-pme-withpolarization.cpp:    double polfacM = 0;
./tests/unittests/unittest-pme-withpolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-withpolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-pme-withpolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./tests/unittests/unittest-system.cpp:        std::vector<double> polar = my_system.GetPolarizabilities();
./tests/unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(polar, pol, TOL));
./tests/unittests/unittest-system.cpp:        std::vector<double> polar = my_system.GetRealPolarizabilities();
./tests/unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(polar, real_pol, TOL));
./tests/unittests/unittest-system.cpp:        std::vector<double> polarfac = my_system.GetPolarizabilityFactors();
./tests/unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(polarfac, polfac, TOL));
./tests/unittests/unittest-system.cpp:        std::vector<double> polarfac = my_system.GetRealPolarizabilityFactors();
./tests/unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(polarfac, real_polfac, TOL));
./tests/unittests/unittest-system.cpp:    SECTION("Ignore 2b poly") {
./tests/unittests/unittest-system.cpp:    SECTION("Ignore 3b poly") {
./tests/unittests/unittest-system.cpp:                              {"dipole_tolerance", 1E-016},
./tests/unittests/unittest-system.cpp:                              {"dipole_max_it", 100},
./tests/unittests/unittest-system.cpp:                              {"dipole_method", "cg"},
./tests/unittests/unittest-system.cpp:                              {"ignore_1b_poly", nlohmann::json::array()},
./tests/unittests/unittest-system.cpp:                              {"ignore_2b_poly", nlohmann::json::array()},
./tests/unittests/unittest-system.cpp:                              {"ignore_3b_poly", nlohmann::json::array()}}},
./tests/unittests/unittest-system.cpp:        j["MBX"]["dipole_tolerance"] = 1E-14;
./tests/unittests/unittest-system.cpp:        j["MBX"]["dipole_max_it"] = 150;
./tests/unittests/unittest-system.cpp:        j["MBX"]["dipole_method"] = "iter";
./tests/unittests/unittest-system.cpp:        j["MBX"]["ignore_1b_poly"] = nlohmann::json::array({"co2"});
./tests/unittests/unittest-system.cpp:        j["MBX"]["ignore_2b_poly"] = nlohmann::json::array({{"h2o", "i-"}, {"cs+", "h2o"}});
./tests/unittests/unittest-system.cpp:        j["MBX"]["ignore_3b_poly"] = nlohmann::json::array({{"h2o", "i-"}, {"cs+", "h2o"}});
./tests/unittests/unittest-system.cpp:            double dipole_tolerance = my_system.GetDipoleTolerance();
./tests/unittests/unittest-system.cpp:            REQUIRE(dipole_tolerance == j["MBX"]["dipole_tolerance"]);
./tests/unittests/unittest-system.cpp:            double dipole_max_it = my_system.GetMaxIterationsDipoles();
./tests/unittests/unittest-system.cpp:            REQUIRE(dipole_max_it == j["MBX"]["dipole_max_it"]);
./tests/unittests/unittest-system.cpp:            std::string dipole_method = my_system.GetDipoleMethod();
./tests/unittests/unittest-system.cpp:            REQUIRE(dipole_method == j["MBX"]["dipole_method"]);
./tests/unittests/unittest-system.cpp:            REQUIRE(ignore1b == j["MBX"]["ignore_1b_poly"]);
./tests/unittests/unittest-system.cpp:            REQUIRE(ignore2b == j["MBX"]["ignore_2b_poly"]);
./tests/unittests/unittest-system.cpp:            REQUIRE(ignore3b == j["MBX"]["ignore_3b_poly"]);
./thole.dat:./bblock/sys_tools.h: * @brief Gets the thole damping for dipole dipole
./thole.dat:./bblock/sys_tools.h: * thole damping for dipole-dipole for a given monomer
./tools/definitions.h:// Ignore mutual terms in the dipoles, for debugging
./tools/random-rotation.cpp:    double theta = x[0] * PITIMES2; /* Rotation about the pole (Z).      */
./tools/random-rotation.cpp:    double phi = x[1] * PITIMES2;   /* For direction of pole deflection. */
./tools/random-rotation.cpp:    double z = x[2] * 2.0;          /* For magnitude of pole deflection. */
./tools/variable.h: * @brief Function definitions for different polynomial variable types
./unittests/Makefile.am:TESTS = unittest-angle unittest-bond unittest-buckingham unittest-bucktools unittest-connectivity unittest-dihedral unittest-dispersion unittest-disptools unittest-electrostatics unittest-energy1b unittest-energy2b unittest-energy3b unittest-energy4b unittest-energyff unittest-ffcalculators unittest-gamma unittest-inversion unittest-lj unittest-ljtools unittest-pme-nopolarization unittest-pme-nopolarization-findif unittest-pme-withpolarization unittest-pme-withpolarization-findif unittest-poly-1b unittest-poly-2b unittest-poly-3b unittest-poly-holder-1b unittest-poly-holder-2b unittest-poly-holder-3b unittest-ps unittest-system unittest-systools unittest-tools unittest-topology
./unittests/Makefile.am:check_PROGRAMS = unittest-angle unittest-bond unittest-buckingham unittest-bucktools unittest-connectivity unittest-dihedral unittest-dispersion unittest-disptools unittest-electrostatics unittest-energy1b unittest-energy2b unittest-energy3b unittest-energy4b unittest-energyff unittest-ffcalculators unittest-gamma unittest-inversion unittest-lj unittest-ljtools unittest-pme-nopolarization unittest-pme-nopolarization-findif unittest-pme-withpolarization unittest-pme-withpolarization-findif unittest-poly-1b unittest-poly-2b unittest-poly-3b unittest-poly-holder-1b unittest-poly-holder-2b unittest-poly-holder-3b unittest-ps unittest-system unittest-systools unittest-tools unittest-topology
./unittests/Makefile.am:unittest_pme_nopolarization_SOURCES = unittest-main.cpp unittest-pme-nopolarization.cpp
./unittests/Makefile.am:unittest_pme_nopolarization_findif_SOURCES = unittest-main.cpp unittest-pme-nopolarization-findif.cpp
./unittests/Makefile.am:unittest_pme_withpolarization_SOURCES = unittest-main.cpp unittest-pme-withpolarization.cpp
./unittests/Makefile.am:unittest_pme_withpolarization_findif_SOURCES = unittest-main.cpp unittest-pme-withpolarization-findif.cpp
./unittests/Makefile.am:unittest_poly_1b_SOURCES = unittest-main.cpp unittest-poly-1b.cpp
./unittests/Makefile.am:unittest_poly_2b_SOURCES = unittest-main.cpp unittest-poly-2b.cpp
./unittests/Makefile.am:unittest_poly_3b_SOURCES = unittest-main.cpp unittest-poly-3b.cpp
./unittests/Makefile.am:unittest_poly_holder_1b_SOURCES = unittest-main.cpp unittest-poly-holder-1b.cpp
./unittests/Makefile.am:unittest_poly_holder_2b_SOURCES = unittest-main.cpp unittest-poly-holder-2b.cpp
./unittests/Makefile.am:unittest_poly_holder_3b_SOURCES = unittest-main.cpp unittest-poly-holder-3b.cpp
./unittests/Makefile.am:unittest_topology_SOURCES = unittest-main.cpp unittest-topology.cpp
./unittests/setup_co2_2_h2o_2.h:    std::vector<double> polfac{                                                                                       \
./unittests/setup_co2_2_h2o_2.h:    std::vector<double> pol{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 1.4716770000e+00, 7.6979000000e-01, \
./unittests/setup_co2_2_h2o_2.h:    std::vector<double> real_polfac{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 1.4716770000e+00,           \
./unittests/setup_co2_2_h2o_2.h:    std::vector<double> real_pol{1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 1.4716770000e+00,              \
./unittests/setup_h2o_2.h:    std::vector<double> polfac(n_atoms, 1e-7);                                                      \
./unittests/setup_h2o_2.h:    std::vector<double> pol(n_atoms, 1e-7);                                                         \
./unittests/setup_h2o_2.h:        polfac[4 * n + 0] = pol[4 * n + 0] = polfacO;                                               \
./unittests/setup_h2o_2.h:        polfac[4 * n + 1] = pol[4 * n + 1] = polfacH;                                               \
./unittests/setup_h2o_2.h:        polfac[4 * n + 2] = pol[4 * n + 2] = polfacH;                                               \
./unittests/setup_h2o_2.h:        polfac[4 * n + 3] = pol[4 * n + 3] = polfacM;                                               \
./unittests/setup_h2o_216.h:    std::vector<double> polfac(n_atoms, 0);                                                                      \
./unittests/setup_h2o_216.h:    std::vector<double> pol(n_atoms, 0);                                                                         \
./unittests/setup_h2o_216.h:        polfac[4 * n + 0] = pol[4 * n + 0] = polfacO;                                                            \
./unittests/setup_h2o_216.h:        polfac[4 * n + 1] = pol[4 * n + 1] = polfacH;                                                            \
./unittests/setup_h2o_216.h:        polfac[4 * n + 2] = pol[4 * n + 2] = polfacH;                                                            \
./unittests/setup_h2o_216.h:        polfac[4 * n + 3] = pol[4 * n + 3] = polfacM;                                                            \
./unittests/setup_h2o_2_ch4_1.h:        R"({"MBX":{"alpha_ewald_disp":0.0,"alpha_ewald_elec":0.0,"alpha_ewald_lj":0.0,"box":[],"connectivity_file":"","dipole_max_it":100,"dipole_method":"cg","dipole_tolerance":1e-16,"ff_mons":[],"grid_density_disp":2.5,"grid_density_elec":2.5,"grid_density_lj":2.5,"grid_fftdim_disp":[],"grid_fftdim_elec":[],"grid_fftdim_lj":[],"ignore_1b_poly":[],"ignore_2b_poly":[],"ignore_3b_poly":[],"ignore_dispersion":[],"max_n_eval_1b":1024,"max_n_eval_2b":1024,"max_n_eval_3b":1024,"monomers_file":"","nonbonded_file":"","spline_order_disp":6,"spline_order_elec":6,"spline_order_lj":6,"threebody_cutoff":5.0,"ttm_pairs":[],"twobody_cutoff":100.0}})"; \
./unittests/setup_monomer_custom_json.h:                               {"pol", {-0.1, 0.2, -0.3, 0.4, -0.5}},                                           \
./unittests/setup_monomer_custom_json.h:                               {"polfac", {-0.11, 0.21, -0.31, 0.41, -0.51}},                                   \
./unittests/setup_monomer_custom_json.h:    std::vector<double> polfac{-0.11, 0.21, -0.31, 0.41, -0.51};                                                \
./unittests/setup_monomer_custom_json.h:    std::vector<double> pol{-0.1, 0.2, -0.3, 0.4, -0.5};                                                        \
./unittests/setup_monomer_custom_json.h:    std::vector<double> real_polfac{-0.11, 0.21, -0.31, 0.41, -0.51};                                           \
./unittests/setup_monomer_custom_json.h:    std::vector<double> real_pol{-0.1, 0.2, -0.3, 0.4, -0.5};                                                   \
./unittests/setup_monomer_mix.h:    std::vector<double> polfac{1.3932677000e+00,                                                                     \
./unittests/setup_monomer_mix.h:    std::vector<double> pol{1.3932677000e+00,                                                                        \
./unittests/setup_monomer_mix.h:    std::vector<double> real_polfac{1.3932677000e+00,                                                                \
./unittests/setup_monomer_mix.h:    std::vector<double> real_pol{1.3932677000e+00,                                                                   \
./unittests/unittest-angle.cpp:            std::string topology = angles.GetTopology();
./unittests/unittest-angle.cpp:            REQUIRE(topology == expected_topo);
./unittests/unittest-angle.cpp:            double gnum = angles.GetTopologyGradient(x);
./unittests/unittest-bond.cpp:            std::string topology = bond.GetTopology();
./unittests/unittest-bond.cpp:            REQUIRE(topology == expected_topo);
./unittests/unittest-bond.cpp:            double gnum = bond.GetTopologyGradient(x);
./unittests/unittest-buckingham.cpp:          {"pol", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-buckingham.cpp:          {"polfac", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-dihedral.cpp:            std::string topology = dihedral.GetTopology();
./unittests/unittest-dihedral.cpp:            REQUIRE(topology == expected_topo);
./unittests/unittest-dihedral.cpp:            double gnum = dihedral.GetTopologyGradient(x);
./unittests/unittest-dispersion.cpp:          {"pol", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-dispersion.cpp:          {"polfac", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-electrostatics.cpp:std::vector<double> polfac = {1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 2.4669000000e+00,
./unittests/unittest-electrostatics.cpp:std::vector<double> pol = {1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 2.4669000000e+00,
./unittests/unittest-electrostatics.cpp:    std::vector<double> internal_pol_sqrt_expected = {
./unittests/unittest-electrostatics.cpp:    d.Initialize(chg, chg_grad, polfac, pol, sys_xyz, mon_id, sites, first_ind, mon_type_count, islocal, sys_atom_tag,
./unittests/unittest-electrostatics.cpp:    std::vector<double> getpolfac = d.GetSysPolfacs();
./unittests/unittest-electrostatics.cpp:    std::vector<double> getpol = d.GetSysPols();
./unittests/unittest-electrostatics.cpp:    double gettol = d.GetDipoleTolerance();
./unittests/unittest-electrostatics.cpp:    size_t getmaxit = d.GetDipoleMaxIt();
./unittests/unittest-electrostatics.cpp:    std::string getdipmethod = d.GetDipoleConvergenceMethod();
./unittests/unittest-electrostatics.cpp:    std::vector<double> getinternalpolsqrt = d.GetInternalPolSqrt();
./unittests/unittest-electrostatics.cpp:    REQUIRE(VectorsAreEqual(getpolfac, polfac, TOL));
./unittests/unittest-electrostatics.cpp:    REQUIRE(VectorsAreEqual(getpol, pol, TOL));
./unittests/unittest-electrostatics.cpp:    REQUIRE(VectorsAreEqual(getinternalpolsqrt, internal_pol_sqrt_expected, TOL));
./unittests/unittest-electrostatics.cpp:    d.Initialize(chg, chg_grad, polfac, pol, sys_xyz, mon_id, sites, first_ind, mon_type_count, islocal, sys_atom_tag,
./unittests/unittest-electrostatics.cpp:    pol[0] = 2.0;
./unittests/unittest-electrostatics.cpp:    std::vector<double> internal_polsqrt_expected = {
./unittests/unittest-electrostatics.cpp:    d.SetNewParameters(sys_xyz, chg, chg_grad, pol, polfac, dip_method, do_grads, box, cutoff);
./unittests/unittest-electrostatics.cpp:    std::vector<double> getpolfac = d.GetSysPolfacs();
./unittests/unittest-electrostatics.cpp:    std::vector<double> getpol = d.GetSysPols();
./unittests/unittest-electrostatics.cpp:    double gettol = d.GetDipoleTolerance();
./unittests/unittest-electrostatics.cpp:    size_t getmaxit = d.GetDipoleMaxIt();
./unittests/unittest-electrostatics.cpp:    std::string getdipmethod = d.GetDipoleConvergenceMethod();
./unittests/unittest-electrostatics.cpp:    std::vector<double> getinternalpolsqrt = d.GetInternalPolSqrt();
./unittests/unittest-electrostatics.cpp:    REQUIRE(VectorsAreEqual(getpolfac, polfac, TOL));
./unittests/unittest-electrostatics.cpp:    REQUIRE(VectorsAreEqual(getpol, pol, TOL));
./unittests/unittest-electrostatics.cpp:    REQUIRE(VectorsAreEqual(getinternalpolsqrt, internal_polsqrt_expected, TOL));
./unittests/unittest-electrostatics.cpp:    d.Initialize(chg, chg_grad, polfac, pol, sys_xyz, mon_id, sites, first_ind, mon_type_count, islocal, sys_atom_tag,
./unittests/unittest-electrostatics.cpp:          {"pol", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-electrostatics.cpp:          {"polfac", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-electrostatics.cpp:        polfac = {1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 2.4669000000e+00,
./unittests/unittest-electrostatics.cpp:        pol = {1.4716770000e+00, 7.6979000000e-01, 7.6979000000e-01, 2.4669000000e+00,
./unittests/unittest-electrostatics.cpp:        d.Initialize(chg, chg_grad, polfac, pol, sys_xyz, mon_id, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-electrostatics.cpp:        d.SetNewParameters(sys_xyz, chg, chg_grad, pol, polfac, dip_method, do_grads, box, cutoff);
./unittests/unittest-electrostatics.cpp:                // The system is going to be 4 point charges, and 4 polarizable charges,
./unittests/unittest-electrostatics.cpp:                std::vector<double> xpol = {0.1, 0.1, 0.2, 0.4, 0.1, 0.1, 0.1, 0.4, 0.2, 0.4};
./unittests/unittest-electrostatics.cpp:                xd.Initialize(xchg, xchggrad, xpol, xpol, xxyz, xmonid, xsites, xfi, xmtc, xisl, xatg, xdogrd, xtol,
./unittests/unittest-electrostatics.cpp:                xd.SetNewParameters(xxyz, xchg, xchggrad, xpol, xpol, xdpmethod, xdogrd, boxes_vec[i], 9.0);
./unittests/unittest-electrostatics.cpp:                                xd.SetNewParameters(yxyz, xchg, xchggrad, xpol, xpol, xdpmethod, xdogrd, boxes_vec[i],
./unittests/unittest-electrostatics.cpp:    std::vector<double> polfac_all = {1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,
./unittests/unittest-electrostatics.cpp:    std::vector<double> pol_all = {1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,
./unittests/unittest-electrostatics.cpp:    d.Initialize(chg_all, chg_grad_all, polfac_all, pol_all, sys_xyz_all, mon_id_all, sites_all, first_index_all,
./unittests/unittest-electrostatics.cpp:    d.SetNewParameters(sys_xyz_all, chg_all, chg_grad_all, pol_all, polfac_all, dip_method, do_grads, box_all, cutoff);
./unittests/unittest-electrostatics.cpp:    std::vector<double> polfac_system = {1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,
./unittests/unittest-electrostatics.cpp:    std::vector<double> pol_system = {1.4760000000e-01, 1.3100000000e+00, 2.9400000000e-01, 2.9400000000e-01,
./unittests/unittest-electrostatics.cpp:    d2.Initialize(chg_system, chg_grad_all, polfac_system, pol_system, sys_xyz_system, mon_id_system, sites_system,
./unittests/unittest-electrostatics.cpp:    d2.SetNewParameters(sys_xyz_system, chg_system, chg_grad_all, pol_system, polfac_system, dip_method, do_grads,
./unittests/unittest-electrostatics.cpp:    d.Initialize(chg, chg_grad, polfac, pol, sys_xyz, mon_id, sites, first_ind, mon_type_count, islocal, sys_atom_tag,
./unittests/unittest-ffcalculators.cpp:                double cummu_grad = -1.0 / sin(phi) * dihedral.GetTopologyGradient(phi);
./unittests/unittest-ffcalculators.cpp:            // in the incorrect order from dlpoly
./unittests/unittest-ffcalculators.cpp:                std::vector<double> cummu_grad = {-1.0 / sin(phi[0]) / 3.0 * inv.GetTopologyGradient(phi[0]),
./unittests/unittest-ffcalculators.cpp:                                                  -1.0 / sin(phi[1]) / 3.0 * inv.GetTopologyGradient(phi[1]),
./unittests/unittest-ffcalculators.cpp:                                                  -1.0 / sin(phi[2]) / 3.0 * inv.GetTopologyGradient(phi[2])};
./unittests/unittest-inversion.cpp:            std::string topology = inversion.GetTopology();
./unittests/unittest-inversion.cpp:            REQUIRE(topology == expected_topo);
./unittests/unittest-inversion.cpp:            double gnum = inversion.GetTopologyGradient(x);
./unittests/unittest-lj.cpp:          {"pol", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"polfac", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"pol", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"polfac", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"pol", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"polfac", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"pol", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"polfac", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"pol", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"polfac", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"pol", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp:          {"polfac", nlohmann::json::array({0.0})},
./unittests/unittest-lj.cpp://          {"pol", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-lj.cpp://          {"polfac", nlohmann::json::array({1.471677, 0.769790, 0.769790})},
./unittests/unittest-pme-nopolarization-findif.cpp:TEST_CASE("test the electrostatics class for coulomb and polarization terms (PME) - finite differences.") {
./unittests/unittest-pme-nopolarization-findif.cpp:    double polfacO = 0;
./unittests/unittest-pme-nopolarization-findif.cpp:    double polfacH = 0;
./unittests/unittest-pme-nopolarization-findif.cpp:    double polfacM = 0;
./unittests/unittest-pme-nopolarization-findif.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-nopolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./unittests/unittest-pme-nopolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./unittests/unittest-pme-nopolarization.cpp:    double polfacO = 0;
./unittests/unittest-pme-nopolarization.cpp:    double polfacH = 0;
./unittests/unittest-pme-nopolarization.cpp:    double polfacM = 0;
./unittests/unittest-pme-nopolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-nopolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-nopolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-withpolarization-findif.cpp:    double polfacO = 1.310;
./unittests/unittest-pme-withpolarization-findif.cpp:    double polfacH = 0.294;
./unittests/unittest-pme-withpolarization-findif.cpp:    double polfacM = 0;
./unittests/unittest-pme-withpolarization-findif.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-withpolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./unittests/unittest-pme-withpolarization-findif.cpp:        elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count,
./unittests/unittest-pme-withpolarization-findif.cpp:TEST_CASE("test the electrostatics class for coulomb and polarization terms (PME) - finite differences.") {
./unittests/unittest-pme-withpolarization.cpp:    double polfacO = 1.310;
./unittests/unittest-pme-withpolarization.cpp:    double polfacH = 0.294;
./unittests/unittest-pme-withpolarization.cpp:    double polfacM = 0;
./unittests/unittest-pme-withpolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-withpolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-pme-withpolarization.cpp:    elec.Initialize(charges, chg_grad, polfac, pol, coords, monomer_names, sites, first_ind, mon_type_count, islocal,
./unittests/unittest-poly-1b.cpp:#include "potential/1b/poly_1b_A1B2_deg4_v1x.h"
./unittests/unittest-poly-1b.cpp:#include "potential/1b/poly_1b_A1B4_deg5_exp0_v1x.h"
./unittests/unittest-poly-1b.cpp:TEST_CASE("poly_1b_A1B2_deg4_v1x::struct") {
./unittests/unittest-poly-1b.cpp:    x1b_A1B2_deg4::poly_1b_A1B2_deg4_v1x p;
./unittests/unittest-poly-1b.cpp:TEST_CASE("poly_1b_A1B4_deg5_exp0_v1x::struct") {
./unittests/unittest-poly-1b.cpp:    x1b_A1B4_deg5_exp0::poly_1b_A1B4_deg5_exp0_v1x p;
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly_2b_A1B2Z2_C1D2_v1x.h"
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x.h"
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly_2b_A1B2_A1B2_v1x.h"
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly_2b_A1B4_A1B4_deg4_exp0_v1x.h"
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly-2b-A1B2Z2_C-v1x.h"
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly-2b-v6x.h"
./unittests/unittest-poly-2b.cpp:#include "potential/2b/poly_2b_A1_B1C2X2_deg5_v1.h"
./unittests/unittest-poly-2b.cpp:TEST_CASE(":poly_2b_A1_B1C2X2_deg5_v1:struct") {
./unittests/unittest-poly-2b.cpp:    mbnrg_A1_B1C2X2_deg5::poly_A1_B1C2X2_deg5_v1 p;
./unittests/unittest-poly-2b.cpp:TEST_CASE(":poly_2b_A1B2_A1B2_v1x:struct") {
./unittests/unittest-poly-2b.cpp:    x2b_A1B2_A1B2_deg5::poly_2b_A1B2_A1B2_deg5_v1x p;
./unittests/unittest-poly-2b.cpp:TEST_CASE(":poly_2b_A1B2Z2_C1D2_v1x:struct") {
./unittests/unittest-poly-2b.cpp:    x2b_A1B2Z2_C1D2_deg4::poly_2b_A1B2Z2_C1D2_deg4_v1x p;
./unittests/unittest-poly-2b.cpp:TEST_CASE(":poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x:struct") {
./unittests/unittest-poly-2b.cpp:    x2b_A1B2Z2_C1D4_deg3_exp0::poly_2b_A1B2Z2_C1D4_deg3_exp0_v1x p;
./unittests/unittest-poly-2b.cpp:TEST_CASE("poly_2b_A1B4_A1B4_deg4_exp0_v1x:struct") {
./unittests/unittest-poly-2b.cpp:    x2b_A1B4_A1B4_deg4_exp0::poly_2b_A1B4_A1B4_deg4_exp0_v1x p;
./unittests/unittest-poly-2b.cpp:TEST_CASE(":poly_2b_A1B2Z2_C_deg5_v1x:struct") {
./unittests/unittest-poly-2b.cpp:    h2o_ion::poly_2b_h2o_ion_v1x p;
./unittests/unittest-poly-2b.cpp:TEST_CASE(":poly_2b_v6x:struct") {
./unittests/unittest-poly-2b.cpp:    x2o::poly_2b_v6x p;
./unittests/unittest-poly-3b.cpp:#include "potential/3b/poly-3b-v2x.h"
./unittests/unittest-poly-3b.cpp:#include "potential/3b/poly-3b-h2o-ion-v1x_deg4_filtered.h"
./unittests/unittest-poly-3b.cpp:#include "potential/3b/poly_3b_A1B4_C1D2_C1D2_deg3_v1.h"
./unittests/unittest-poly-3b.cpp:#include "potential/3b/poly_3b_A1B2_A1B2_A1B2_deg4_v1.h"
./unittests/unittest-poly-3b.cpp:#include "potential/3b/poly_3b_A1_B1C2X2_B1C2X2_deg4_v1.h"
./unittests/unittest-poly-3b.cpp:TEST_CASE("poly_3b_A1_B1C2X2_B1C2X2_deg4_v1::class") {
./unittests/unittest-poly-3b.cpp:    mbnrg_A1_B1C2X2_B1C2X2_deg4::poly_A1_B1C2X2_B1C2X2_deg4_v1 p;
./unittests/unittest-poly-3b.cpp:// TEST_CASE("poly_3b_A1B2_A1B2_A1B2_deg4_v1::class") {
./unittests/unittest-poly-3b.cpp://    mbnrg_A1B2_A1B2_A1B2_deg4::poly_A1B2_A1B2_A1B2_deg4_v1 p;
./unittests/unittest-poly-3b.cpp:TEST_CASE("poly_3b_A1B4_C1D2_C1D2_deg3_v1.h") {
./unittests/unittest-poly-3b.cpp:    mbnrg_A1B4_C1D2_C1D2_deg3::poly_A1B4_C1D2_C1D2_deg3_v1 p;
./unittests/unittest-poly-3b.cpp:TEST_CASE("poly-3b-h2o-ion-v1x_deg4_filtered::class") {
./unittests/unittest-poly-3b.cpp:    h2o_ion::poly_3b_h2o_ion_v1x_deg4_filtered p;
./unittests/unittest-poly-3b.cpp:TEST_CASE("poly-3b-v2x::class") {
./unittests/unittest-poly-3b.cpp:    x2o::poly_3b_v2x p;
./unittests/unittest-system.cpp:        std::vector<double> s_pols = s.GetPolarizabilities();
./unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(s_pols, pol, TOL));
./unittests/unittest-system.cpp:        std::vector<double> s_realpols = s.GetRealPolarizabilities();
./unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(s_realpols, real_pol, TOL));
./unittests/unittest-system.cpp:        std::vector<double> s_polfac = s.GetPolarizabilityFactors();
./unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(s_polfac, polfac, TOL));
./unittests/unittest-system.cpp:        std::vector<double> s_realpolfac = s.GetRealPolarizabilityFactors();
./unittests/unittest-system.cpp:        REQUIRE(VectorsAreEqual(s_realpolfac, real_polfac, TOL));
./unittests/unittest-system.cpp:    double diptol = systems[0].GetDipoleTolerance();
./unittests/unittest-system.cpp:    std::string dipmethod = systems[0].GetDipoleMethod();
./unittests/unittest-system.cpp:    size_t maxiter = systems[0].GetMaxIterationsDipoles();
./unittests/unittest-system.cpp:TEST_CASE("Dipoles") {
./unittests/unittest-system.cpp:    // Calculate energy to fill dipole vectors
./unittests/unittest-system.cpp:    systems[1].GetDipoles(mu_p, mu_i);
./unittests/unittest-system.cpp:    SECTION("Atomic Dipoles") {
./unittests/unittest-system.cpp:    systems[1].GetMolecularDipoles(m_mu_p, m_mu_i);
./unittests/unittest-system.cpp:    SECTION("Molecular Dipoles") {
./unittests/unittest-system.cpp:    systems[1].GetTotalDipole(t_mu_p, t_mu_i, t_mu);
./unittests/unittest-system.cpp:    SECTION("Molecular Dipoles") {
./unittests/unittest-system.cpp:    SECTION("Max Batch of poly evaluation") {
./unittests/unittest-system.cpp:        systems[2].SetDipoleTol(expected_diptol);
./unittests/unittest-system.cpp:        systems[2].SetDipoleMaxIt(expected_maxiter);
./unittests/unittest-system.cpp:        systems[2].SetDipoleMethod(expected_dipmethod);
./unittests/unittest-system.cpp:        double diptol = systems[2].GetDipoleTolerance();
./unittests/unittest-system.cpp:        size_t maxiter = systems[2].GetMaxIterationsDipoles();
./unittests/unittest-system.cpp:        std::string dipmethod = systems[2].GetDipoleMethod();
./unittests/unittest-systools.cpp:                std::vector<double> pol_out(n_sites, 0.0);
./unittests/unittest-systools.cpp:                systools::SetPol(pol_out, monname, n_mon, nsites, fi, empty_j);
./unittests/unittest-systools.cpp:                    REQUIRE(pol_out[k + fi] == Approx(pol[k + fi]).margin(TOL));
./unittests/unittest-systools.cpp:                std::vector<double> pol_out(n_sites, 0.0);
./unittests/unittest-systools.cpp:                systools::SetPol(pol_out, monname, n_mon, nsites, fi, user_j);
./unittests/unittest-systools.cpp:                    REQUIRE(pol_out[k + fi] == Approx(pol[k + fi]).margin(TOL));
./unittests/unittest-systools.cpp:                std::vector<double> polfac_out(n_sites, 0.0);
./unittests/unittest-systools.cpp:                systools::SetPolfac(polfac_out, monname, n_mon, nsites, fi, empty_j);
./unittests/unittest-systools.cpp:                    REQUIRE(polfac_out[k + fi] == Approx(polfac[k + fi]).margin(TOL));
./unittests/unittest-systools.cpp:                std::vector<double> polfac_out(n_sites, 0.0);
./unittests/unittest-systools.cpp:                systools::SetPolfac(polfac_out, monname, n_mon, nsites, fi, user_j);
./unittests/unittest-systools.cpp:                    REQUIRE(polfac_out[k + fi] == Approx(polfac[k + fi]).margin(TOL));
./unittests/unittest-topology.cpp:#include "potential/force_field/topology.h"
./unittests/unittest-topology.cpp:TEST_CASE("topology::Getters") {
./unittests/unittest-topology.cpp:            std::string topology = bond.GetTopology();
./unittests/unittest-topology.cpp:            REQUIRE(topology == expected_topo);
./unittests/unittest-topology.cpp:TEST_CASE("topology::Setters") {
./unittests/unittest-topology.cpp:            bond.SetTopology("BoNd");
./unittests/unittests_inputs/crazy.json:       "dipole_tolerance" : 10.0,
./unittests/unittests_inputs/crazy.json:       "dipole_max_it"    : 102,
./unittests/unittests_inputs/crazy.json:       "dipole_method"     : "iter",
./unittests/unittests_inputs/crazy.json:       "ignore_1b_poly" : ["ch4"],
./unittests/unittests_inputs/crazy.json:       "ignore_2b_poly" : [["h2o","na+"]],
./unittests/unittests_inputs/crazy.json:       "ignore_3b_poly" : [["co2","h2o","ch4"]],
./unittests/unittests_inputs/mbx.json:       "dipole_tolerance" : 1E-16,
./unittests/unittests_inputs/mbx.json:       "dipole_method"     : "cg",
./unittests/unittests_inputs/mbx.json:       "ignore_1b_poly" : [],
./unittests/unittests_inputs/mbx.json:       "ignore_2b_poly" : [],
./unittests/unittests_inputs/mbx.json:       "ignore_3b_poly" : []
./unittests/unittests_inputs/mbx_pbc.json:       "dipole_tolerance" : 1E-16,
./unittests/unittests_inputs/mbx_pbc.json:       "dipole_method"     : "cg",
./unittests/unittests_inputs/mbx_pbc.json:       "ignore_1b_poly" : [],
./unittests/unittests_inputs/mbx_pbc.json:       "ignore_2b_poly" : [],
./unittests/unittests_inputs/mbx_pbc.json:       "ignore_3b_poly" : []
./unittests/unittests_inputs/mbx_wextrajson.json:       "dipole_tolerance" : 1E-16,
./unittests/unittests_inputs/mbx_wextrajson.json:       "dipole_method"     : "cg",
./unittests/unittests_inputs/mbx_wextrajson.json:       "ignore_1b_poly" : [],
./unittests/unittests_inputs/mbx_wextrajson.json:       "ignore_2b_poly" : [],
./unittests/unittests_inputs/mbx_wextrajson.json:       "ignore_3b_poly" : []
./unittests/unittests_inputs/monomers.json:        "pol" : [1.471677,0.769790,0.769790]  ,
./unittests/unittests_inputs/monomers.json:        "polfac" : [1.471677,0.769790,0.769790]  ,
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-nopolarization$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-nopolarization-findif$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-withpolarization$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-withpolarization-findif$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-1b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-2b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-3b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-1b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-2b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-3b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-topology$(EXEEXT)
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-nopolarization$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-nopolarization-findif$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-withpolarization$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-withpolarization-findif$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-1b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-2b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-3b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-1b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-2b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-3b$(EXEEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-topology$(EXEEXT)
./unittests/Makefile.in:am__unittest_pme_nopolarization_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-pme-nopolarization.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_pme_nopolarization_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-nopolarization.$(OBJEXT)
./unittests/Makefile.in:unittest_pme_nopolarization_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_pme_nopolarization_OBJECTS)
./unittests/Makefile.in:unittest_pme_nopolarization_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_nopolarization_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_pme_nopolarization_findif_SOURCES_DIST =  \
./unittests/Makefile.in:	unittest-main.cpp unittest-pme-nopolarization-findif.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_pme_nopolarization_findif_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-nopolarization-findif.$(OBJEXT)
./unittests/Makefile.in:unittest_pme_nopolarization_findif_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_pme_nopolarization_findif_OBJECTS)
./unittests/Makefile.in:unittest_pme_nopolarization_findif_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_nopolarization_findif_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_pme_withpolarization_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-pme-withpolarization.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_pme_withpolarization_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-withpolarization.$(OBJEXT)
./unittests/Makefile.in:unittest_pme_withpolarization_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_pme_withpolarization_OBJECTS)
./unittests/Makefile.in:unittest_pme_withpolarization_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_withpolarization_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_pme_withpolarization_findif_SOURCES_DIST =  \
./unittests/Makefile.in:	unittest-main.cpp unittest-pme-withpolarization-findif.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_pme_withpolarization_findif_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-pme-withpolarization-findif.$(OBJEXT)
./unittests/Makefile.in:unittest_pme_withpolarization_findif_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_pme_withpolarization_findif_OBJECTS)
./unittests/Makefile.in:unittest_pme_withpolarization_findif_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_withpolarization_findif_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_poly_1b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-poly-1b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_poly_1b_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-1b.$(OBJEXT)
./unittests/Makefile.in:unittest_poly_1b_OBJECTS = $(am_unittest_poly_1b_OBJECTS)
./unittests/Makefile.in:unittest_poly_1b_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_1b_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_poly_2b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-poly-2b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_poly_2b_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-2b.$(OBJEXT)
./unittests/Makefile.in:unittest_poly_2b_OBJECTS = $(am_unittest_poly_2b_OBJECTS)
./unittests/Makefile.in:unittest_poly_2b_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_2b_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_poly_3b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-poly-3b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_poly_3b_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-3b.$(OBJEXT)
./unittests/Makefile.in:unittest_poly_3b_OBJECTS = $(am_unittest_poly_3b_OBJECTS)
./unittests/Makefile.in:unittest_poly_3b_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_3b_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_poly_holder_1b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-poly-holder-1b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_poly_holder_1b_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-1b.$(OBJEXT)
./unittests/Makefile.in:unittest_poly_holder_1b_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_poly_holder_1b_OBJECTS)
./unittests/Makefile.in:unittest_poly_holder_1b_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_holder_1b_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_poly_holder_2b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-poly-holder-2b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_poly_holder_2b_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-2b.$(OBJEXT)
./unittests/Makefile.in:unittest_poly_holder_2b_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_poly_holder_2b_OBJECTS)
./unittests/Makefile.in:unittest_poly_holder_2b_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_holder_2b_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_poly_holder_3b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-poly-holder-3b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_poly_holder_3b_OBJECTS =  \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-poly-holder-3b.$(OBJEXT)
./unittests/Makefile.in:unittest_poly_holder_3b_OBJECTS =  \
./unittests/Makefile.in:	$(am_unittest_poly_holder_3b_OBJECTS)
./unittests/Makefile.in:unittest_poly_holder_3b_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_holder_3b_DEPENDENCIES =  \
./unittests/Makefile.in:am__unittest_topology_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile.in:	unittest-topology.cpp
./unittests/Makefile.in:@ISMPI_FALSE@am_unittest_topology_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile.in:@ISMPI_FALSE@	unittest-topology.$(OBJEXT)
./unittests/Makefile.in:unittest_topology_OBJECTS = $(am_unittest_topology_OBJECTS)
./unittests/Makefile.in:unittest_topology_LDADD = $(LDADD)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_topology_DEPENDENCIES =  \
./unittests/Makefile.in:	$(unittest_pme_nopolarization_SOURCES) \
./unittests/Makefile.in:	$(unittest_pme_nopolarization_findif_SOURCES) \
./unittests/Makefile.in:	$(unittest_pme_withpolarization_SOURCES) \
./unittests/Makefile.in:	$(unittest_pme_withpolarization_findif_SOURCES) \
./unittests/Makefile.in:	$(unittest_poly_1b_SOURCES) $(unittest_poly_2b_SOURCES) \
./unittests/Makefile.in:	$(unittest_poly_3b_SOURCES) $(unittest_poly_holder_1b_SOURCES) \
./unittests/Makefile.in:	$(unittest_poly_holder_2b_SOURCES) \
./unittests/Makefile.in:	$(unittest_poly_holder_3b_SOURCES) $(unittest_ps_SOURCES) \
./unittests/Makefile.in:	$(unittest_tools_SOURCES) $(unittest_topology_SOURCES)
./unittests/Makefile.in:	$(am__unittest_pme_nopolarization_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_pme_nopolarization_findif_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_pme_withpolarization_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_pme_withpolarization_findif_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_poly_1b_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_poly_2b_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_poly_3b_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_poly_holder_1b_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_poly_holder_2b_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_poly_holder_3b_SOURCES_DIST) \
./unittests/Makefile.in:	$(am__unittest_topology_SOURCES_DIST)
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_nopolarization_SOURCES = unittest-main.cpp unittest-pme-nopolarization.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_nopolarization_findif_SOURCES = unittest-main.cpp unittest-pme-nopolarization-findif.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_withpolarization_SOURCES = unittest-main.cpp unittest-pme-withpolarization.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_pme_withpolarization_findif_SOURCES = unittest-main.cpp unittest-pme-withpolarization-findif.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_1b_SOURCES = unittest-main.cpp unittest-poly-1b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_2b_SOURCES = unittest-main.cpp unittest-poly-2b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_3b_SOURCES = unittest-main.cpp unittest-poly-3b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_holder_1b_SOURCES = unittest-main.cpp unittest-poly-holder-1b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_holder_2b_SOURCES = unittest-main.cpp unittest-poly-holder-2b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_poly_holder_3b_SOURCES = unittest-main.cpp unittest-poly-holder-3b.cpp
./unittests/Makefile.in:@ISMPI_FALSE@unittest_topology_SOURCES = unittest-main.cpp unittest-topology.cpp
./unittests/Makefile.in:unittest-pme-nopolarization$(EXEEXT): $(unittest_pme_nopolarization_OBJECTS) $(unittest_pme_nopolarization_DEPENDENCIES) $(EXTRA_unittest_pme_nopolarization_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-pme-nopolarization$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_nopolarization_OBJECTS) $(unittest_pme_nopolarization_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-pme-nopolarization-findif$(EXEEXT): $(unittest_pme_nopolarization_findif_OBJECTS) $(unittest_pme_nopolarization_findif_DEPENDENCIES) $(EXTRA_unittest_pme_nopolarization_findif_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-pme-nopolarization-findif$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_nopolarization_findif_OBJECTS) $(unittest_pme_nopolarization_findif_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-pme-withpolarization$(EXEEXT): $(unittest_pme_withpolarization_OBJECTS) $(unittest_pme_withpolarization_DEPENDENCIES) $(EXTRA_unittest_pme_withpolarization_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-pme-withpolarization$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_withpolarization_OBJECTS) $(unittest_pme_withpolarization_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-pme-withpolarization-findif$(EXEEXT): $(unittest_pme_withpolarization_findif_OBJECTS) $(unittest_pme_withpolarization_findif_DEPENDENCIES) $(EXTRA_unittest_pme_withpolarization_findif_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-pme-withpolarization-findif$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_withpolarization_findif_OBJECTS) $(unittest_pme_withpolarization_findif_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-poly-1b$(EXEEXT): $(unittest_poly_1b_OBJECTS) $(unittest_poly_1b_DEPENDENCIES) $(EXTRA_unittest_poly_1b_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-poly-1b$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_1b_OBJECTS) $(unittest_poly_1b_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-poly-2b$(EXEEXT): $(unittest_poly_2b_OBJECTS) $(unittest_poly_2b_DEPENDENCIES) $(EXTRA_unittest_poly_2b_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-poly-2b$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_2b_OBJECTS) $(unittest_poly_2b_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-poly-3b$(EXEEXT): $(unittest_poly_3b_OBJECTS) $(unittest_poly_3b_DEPENDENCIES) $(EXTRA_unittest_poly_3b_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-poly-3b$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_3b_OBJECTS) $(unittest_poly_3b_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-poly-holder-1b$(EXEEXT): $(unittest_poly_holder_1b_OBJECTS) $(unittest_poly_holder_1b_DEPENDENCIES) $(EXTRA_unittest_poly_holder_1b_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-poly-holder-1b$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_holder_1b_OBJECTS) $(unittest_poly_holder_1b_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-poly-holder-2b$(EXEEXT): $(unittest_poly_holder_2b_OBJECTS) $(unittest_poly_holder_2b_DEPENDENCIES) $(EXTRA_unittest_poly_holder_2b_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-poly-holder-2b$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_holder_2b_OBJECTS) $(unittest_poly_holder_2b_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-poly-holder-3b$(EXEEXT): $(unittest_poly_holder_3b_OBJECTS) $(unittest_poly_holder_3b_DEPENDENCIES) $(EXTRA_unittest_poly_holder_3b_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-poly-holder-3b$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_holder_3b_OBJECTS) $(unittest_poly_holder_3b_LDADD) $(LIBS)
./unittests/Makefile.in:unittest-topology$(EXEEXT): $(unittest_topology_OBJECTS) $(unittest_topology_DEPENDENCIES) $(EXTRA_unittest_topology_DEPENDENCIES) 
./unittests/Makefile.in:	@rm -f unittest-topology$(EXEEXT)
./unittests/Makefile.in:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_topology_OBJECTS) $(unittest_topology_LDADD) $(LIBS)
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-pme-nopolarization-findif.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-pme-nopolarization.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-pme-withpolarization-findif.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-pme-withpolarization.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-poly-1b.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-poly-2b.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-poly-3b.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-poly-holder-1b.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-poly-holder-2b.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-poly-holder-3b.Po@am__quote@
./unittests/Makefile.in:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittest-topology.Po@am__quote@
./unittests/Makefile.in:unittest-pme-nopolarization.log: unittest-pme-nopolarization$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-pme-nopolarization$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-pme-nopolarization'; \
./unittests/Makefile.in:unittest-pme-nopolarization-findif.log: unittest-pme-nopolarization-findif$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-pme-nopolarization-findif$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-pme-nopolarization-findif'; \
./unittests/Makefile.in:unittest-pme-withpolarization.log: unittest-pme-withpolarization$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-pme-withpolarization$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-pme-withpolarization'; \
./unittests/Makefile.in:unittest-pme-withpolarization-findif.log: unittest-pme-withpolarization-findif$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-pme-withpolarization-findif$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-pme-withpolarization-findif'; \
./unittests/Makefile.in:unittest-poly-1b.log: unittest-poly-1b$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-poly-1b$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-poly-1b'; \
./unittests/Makefile.in:unittest-poly-2b.log: unittest-poly-2b$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-poly-2b$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-poly-2b'; \
./unittests/Makefile.in:unittest-poly-3b.log: unittest-poly-3b$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-poly-3b$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-poly-3b'; \
./unittests/Makefile.in:unittest-poly-holder-1b.log: unittest-poly-holder-1b$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-poly-holder-1b$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-poly-holder-1b'; \
./unittests/Makefile.in:unittest-poly-holder-2b.log: unittest-poly-holder-2b$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-poly-holder-2b$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-poly-holder-2b'; \
./unittests/Makefile.in:unittest-poly-holder-3b.log: unittest-poly-holder-3b$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-poly-holder-3b$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-poly-holder-3b'; \
./unittests/Makefile.in:unittest-topology.log: unittest-topology$(EXEEXT)
./unittests/Makefile.in:	@p='unittest-topology$(EXEEXT)'; \
./unittests/Makefile.in:	b='unittest-topology'; \
./unittests/Makefile:#	unittest-pme-nopolarization$(EXEEXT) \
./unittests/Makefile:#	unittest-pme-nopolarization-findif$(EXEEXT) \
./unittests/Makefile:#	unittest-pme-withpolarization$(EXEEXT) \
./unittests/Makefile:#	unittest-pme-withpolarization-findif$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-1b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-2b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-3b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-holder-1b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-holder-2b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-holder-3b$(EXEEXT) \
./unittests/Makefile:#	unittest-topology$(EXEEXT)
./unittests/Makefile:#	unittest-pme-nopolarization$(EXEEXT) \
./unittests/Makefile:#	unittest-pme-nopolarization-findif$(EXEEXT) \
./unittests/Makefile:#	unittest-pme-withpolarization$(EXEEXT) \
./unittests/Makefile:#	unittest-pme-withpolarization-findif$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-1b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-2b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-3b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-holder-1b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-holder-2b$(EXEEXT) \
./unittests/Makefile:#	unittest-poly-holder-3b$(EXEEXT) \
./unittests/Makefile:#	unittest-topology$(EXEEXT)
./unittests/Makefile:am__unittest_pme_nopolarization_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-pme-nopolarization.cpp
./unittests/Makefile:#am_unittest_pme_nopolarization_OBJECTS =  \
./unittests/Makefile:#	unittest-pme-nopolarization.$(OBJEXT)
./unittests/Makefile:unittest_pme_nopolarization_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_pme_nopolarization_OBJECTS)
./unittests/Makefile:unittest_pme_nopolarization_LDADD = $(LDADD)
./unittests/Makefile:#unittest_pme_nopolarization_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_pme_nopolarization_findif_SOURCES_DIST =  \
./unittests/Makefile:	unittest-main.cpp unittest-pme-nopolarization-findif.cpp
./unittests/Makefile:#am_unittest_pme_nopolarization_findif_OBJECTS =  \
./unittests/Makefile:#	unittest-pme-nopolarization-findif.$(OBJEXT)
./unittests/Makefile:unittest_pme_nopolarization_findif_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_pme_nopolarization_findif_OBJECTS)
./unittests/Makefile:unittest_pme_nopolarization_findif_LDADD = $(LDADD)
./unittests/Makefile:#unittest_pme_nopolarization_findif_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_pme_withpolarization_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-pme-withpolarization.cpp
./unittests/Makefile:#am_unittest_pme_withpolarization_OBJECTS =  \
./unittests/Makefile:#	unittest-pme-withpolarization.$(OBJEXT)
./unittests/Makefile:unittest_pme_withpolarization_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_pme_withpolarization_OBJECTS)
./unittests/Makefile:unittest_pme_withpolarization_LDADD = $(LDADD)
./unittests/Makefile:#unittest_pme_withpolarization_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_pme_withpolarization_findif_SOURCES_DIST =  \
./unittests/Makefile:	unittest-main.cpp unittest-pme-withpolarization-findif.cpp
./unittests/Makefile:#am_unittest_pme_withpolarization_findif_OBJECTS =  \
./unittests/Makefile:#	unittest-pme-withpolarization-findif.$(OBJEXT)
./unittests/Makefile:unittest_pme_withpolarization_findif_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_pme_withpolarization_findif_OBJECTS)
./unittests/Makefile:unittest_pme_withpolarization_findif_LDADD = $(LDADD)
./unittests/Makefile:#unittest_pme_withpolarization_findif_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_poly_1b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-poly-1b.cpp
./unittests/Makefile:#am_unittest_poly_1b_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile:#	unittest-poly-1b.$(OBJEXT)
./unittests/Makefile:unittest_poly_1b_OBJECTS = $(am_unittest_poly_1b_OBJECTS)
./unittests/Makefile:unittest_poly_1b_LDADD = $(LDADD)
./unittests/Makefile:#unittest_poly_1b_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_poly_2b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-poly-2b.cpp
./unittests/Makefile:#am_unittest_poly_2b_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile:#	unittest-poly-2b.$(OBJEXT)
./unittests/Makefile:unittest_poly_2b_OBJECTS = $(am_unittest_poly_2b_OBJECTS)
./unittests/Makefile:unittest_poly_2b_LDADD = $(LDADD)
./unittests/Makefile:#unittest_poly_2b_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_poly_3b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-poly-3b.cpp
./unittests/Makefile:#am_unittest_poly_3b_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile:#	unittest-poly-3b.$(OBJEXT)
./unittests/Makefile:unittest_poly_3b_OBJECTS = $(am_unittest_poly_3b_OBJECTS)
./unittests/Makefile:unittest_poly_3b_LDADD = $(LDADD)
./unittests/Makefile:#unittest_poly_3b_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_poly_holder_1b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-poly-holder-1b.cpp
./unittests/Makefile:#am_unittest_poly_holder_1b_OBJECTS =  \
./unittests/Makefile:#	unittest-poly-holder-1b.$(OBJEXT)
./unittests/Makefile:unittest_poly_holder_1b_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_poly_holder_1b_OBJECTS)
./unittests/Makefile:unittest_poly_holder_1b_LDADD = $(LDADD)
./unittests/Makefile:#unittest_poly_holder_1b_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_poly_holder_2b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-poly-holder-2b.cpp
./unittests/Makefile:#am_unittest_poly_holder_2b_OBJECTS =  \
./unittests/Makefile:#	unittest-poly-holder-2b.$(OBJEXT)
./unittests/Makefile:unittest_poly_holder_2b_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_poly_holder_2b_OBJECTS)
./unittests/Makefile:unittest_poly_holder_2b_LDADD = $(LDADD)
./unittests/Makefile:#unittest_poly_holder_2b_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_poly_holder_3b_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-poly-holder-3b.cpp
./unittests/Makefile:#am_unittest_poly_holder_3b_OBJECTS =  \
./unittests/Makefile:#	unittest-poly-holder-3b.$(OBJEXT)
./unittests/Makefile:unittest_poly_holder_3b_OBJECTS =  \
./unittests/Makefile:	$(am_unittest_poly_holder_3b_OBJECTS)
./unittests/Makefile:unittest_poly_holder_3b_LDADD = $(LDADD)
./unittests/Makefile:#unittest_poly_holder_3b_DEPENDENCIES =  \
./unittests/Makefile:am__unittest_topology_SOURCES_DIST = unittest-main.cpp \
./unittests/Makefile:	unittest-topology.cpp
./unittests/Makefile:#am_unittest_topology_OBJECTS = unittest-main.$(OBJEXT) \
./unittests/Makefile:#	unittest-topology.$(OBJEXT)
./unittests/Makefile:unittest_topology_OBJECTS = $(am_unittest_topology_OBJECTS)
./unittests/Makefile:unittest_topology_LDADD = $(LDADD)
./unittests/Makefile:#unittest_topology_DEPENDENCIES =  \
./unittests/Makefile:	$(unittest_pme_nopolarization_SOURCES) \
./unittests/Makefile:	$(unittest_pme_nopolarization_findif_SOURCES) \
./unittests/Makefile:	$(unittest_pme_withpolarization_SOURCES) \
./unittests/Makefile:	$(unittest_pme_withpolarization_findif_SOURCES) \
./unittests/Makefile:	$(unittest_poly_1b_SOURCES) $(unittest_poly_2b_SOURCES) \
./unittests/Makefile:	$(unittest_poly_3b_SOURCES) $(unittest_poly_holder_1b_SOURCES) \
./unittests/Makefile:	$(unittest_poly_holder_2b_SOURCES) \
./unittests/Makefile:	$(unittest_poly_holder_3b_SOURCES) $(unittest_ps_SOURCES) \
./unittests/Makefile:	$(unittest_tools_SOURCES) $(unittest_topology_SOURCES)
./unittests/Makefile:	$(am__unittest_pme_nopolarization_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_pme_nopolarization_findif_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_pme_withpolarization_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_pme_withpolarization_findif_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_poly_1b_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_poly_2b_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_poly_3b_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_poly_holder_1b_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_poly_holder_2b_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_poly_holder_3b_SOURCES_DIST) \
./unittests/Makefile:	$(am__unittest_topology_SOURCES_DIST)
./unittests/Makefile:#unittest_pme_nopolarization_SOURCES = unittest-main.cpp unittest-pme-nopolarization.cpp
./unittests/Makefile:#unittest_pme_nopolarization_findif_SOURCES = unittest-main.cpp unittest-pme-nopolarization-findif.cpp
./unittests/Makefile:#unittest_pme_withpolarization_SOURCES = unittest-main.cpp unittest-pme-withpolarization.cpp
./unittests/Makefile:#unittest_pme_withpolarization_findif_SOURCES = unittest-main.cpp unittest-pme-withpolarization-findif.cpp
./unittests/Makefile:#unittest_poly_1b_SOURCES = unittest-main.cpp unittest-poly-1b.cpp
./unittests/Makefile:#unittest_poly_2b_SOURCES = unittest-main.cpp unittest-poly-2b.cpp
./unittests/Makefile:#unittest_poly_3b_SOURCES = unittest-main.cpp unittest-poly-3b.cpp
./unittests/Makefile:#unittest_poly_holder_1b_SOURCES = unittest-main.cpp unittest-poly-holder-1b.cpp
./unittests/Makefile:#unittest_poly_holder_2b_SOURCES = unittest-main.cpp unittest-poly-holder-2b.cpp
./unittests/Makefile:#unittest_poly_holder_3b_SOURCES = unittest-main.cpp unittest-poly-holder-3b.cpp
./unittests/Makefile:#unittest_topology_SOURCES = unittest-main.cpp unittest-topology.cpp
./unittests/Makefile:unittest-pme-nopolarization$(EXEEXT): $(unittest_pme_nopolarization_OBJECTS) $(unittest_pme_nopolarization_DEPENDENCIES) $(EXTRA_unittest_pme_nopolarization_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-pme-nopolarization$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_nopolarization_OBJECTS) $(unittest_pme_nopolarization_LDADD) $(LIBS)
./unittests/Makefile:unittest-pme-nopolarization-findif$(EXEEXT): $(unittest_pme_nopolarization_findif_OBJECTS) $(unittest_pme_nopolarization_findif_DEPENDENCIES) $(EXTRA_unittest_pme_nopolarization_findif_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-pme-nopolarization-findif$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_nopolarization_findif_OBJECTS) $(unittest_pme_nopolarization_findif_LDADD) $(LIBS)
./unittests/Makefile:unittest-pme-withpolarization$(EXEEXT): $(unittest_pme_withpolarization_OBJECTS) $(unittest_pme_withpolarization_DEPENDENCIES) $(EXTRA_unittest_pme_withpolarization_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-pme-withpolarization$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_withpolarization_OBJECTS) $(unittest_pme_withpolarization_LDADD) $(LIBS)
./unittests/Makefile:unittest-pme-withpolarization-findif$(EXEEXT): $(unittest_pme_withpolarization_findif_OBJECTS) $(unittest_pme_withpolarization_findif_DEPENDENCIES) $(EXTRA_unittest_pme_withpolarization_findif_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-pme-withpolarization-findif$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_pme_withpolarization_findif_OBJECTS) $(unittest_pme_withpolarization_findif_LDADD) $(LIBS)
./unittests/Makefile:unittest-poly-1b$(EXEEXT): $(unittest_poly_1b_OBJECTS) $(unittest_poly_1b_DEPENDENCIES) $(EXTRA_unittest_poly_1b_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-poly-1b$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_1b_OBJECTS) $(unittest_poly_1b_LDADD) $(LIBS)
./unittests/Makefile:unittest-poly-2b$(EXEEXT): $(unittest_poly_2b_OBJECTS) $(unittest_poly_2b_DEPENDENCIES) $(EXTRA_unittest_poly_2b_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-poly-2b$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_2b_OBJECTS) $(unittest_poly_2b_LDADD) $(LIBS)
./unittests/Makefile:unittest-poly-3b$(EXEEXT): $(unittest_poly_3b_OBJECTS) $(unittest_poly_3b_DEPENDENCIES) $(EXTRA_unittest_poly_3b_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-poly-3b$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_3b_OBJECTS) $(unittest_poly_3b_LDADD) $(LIBS)
./unittests/Makefile:unittest-poly-holder-1b$(EXEEXT): $(unittest_poly_holder_1b_OBJECTS) $(unittest_poly_holder_1b_DEPENDENCIES) $(EXTRA_unittest_poly_holder_1b_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-poly-holder-1b$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_holder_1b_OBJECTS) $(unittest_poly_holder_1b_LDADD) $(LIBS)
./unittests/Makefile:unittest-poly-holder-2b$(EXEEXT): $(unittest_poly_holder_2b_OBJECTS) $(unittest_poly_holder_2b_DEPENDENCIES) $(EXTRA_unittest_poly_holder_2b_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-poly-holder-2b$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_holder_2b_OBJECTS) $(unittest_poly_holder_2b_LDADD) $(LIBS)
./unittests/Makefile:unittest-poly-holder-3b$(EXEEXT): $(unittest_poly_holder_3b_OBJECTS) $(unittest_poly_holder_3b_DEPENDENCIES) $(EXTRA_unittest_poly_holder_3b_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-poly-holder-3b$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_poly_holder_3b_OBJECTS) $(unittest_poly_holder_3b_LDADD) $(LIBS)
./unittests/Makefile:unittest-topology$(EXEEXT): $(unittest_topology_OBJECTS) $(unittest_topology_DEPENDENCIES) $(EXTRA_unittest_topology_DEPENDENCIES) 
./unittests/Makefile:	@rm -f unittest-topology$(EXEEXT)
./unittests/Makefile:	$(AM_V_CXXLD)$(CXXLINK) $(unittest_topology_OBJECTS) $(unittest_topology_LDADD) $(LIBS)
./unittests/Makefile:include ./$(DEPDIR)/unittest-pme-nopolarization-findif.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-pme-nopolarization.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-pme-withpolarization-findif.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-pme-withpolarization.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-poly-1b.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-poly-2b.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-poly-3b.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-poly-holder-1b.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-poly-holder-2b.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-poly-holder-3b.Po
./unittests/Makefile:include ./$(DEPDIR)/unittest-topology.Po
./unittests/Makefile:unittest-pme-nopolarization.log: unittest-pme-nopolarization$(EXEEXT)
./unittests/Makefile:	@p='unittest-pme-nopolarization$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-pme-nopolarization'; \
./unittests/Makefile:unittest-pme-nopolarization-findif.log: unittest-pme-nopolarization-findif$(EXEEXT)
./unittests/Makefile:	@p='unittest-pme-nopolarization-findif$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-pme-nopolarization-findif'; \
./unittests/Makefile:unittest-pme-withpolarization.log: unittest-pme-withpolarization$(EXEEXT)
./unittests/Makefile:	@p='unittest-pme-withpolarization$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-pme-withpolarization'; \
./unittests/Makefile:unittest-pme-withpolarization-findif.log: unittest-pme-withpolarization-findif$(EXEEXT)
./unittests/Makefile:	@p='unittest-pme-withpolarization-findif$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-pme-withpolarization-findif'; \
./unittests/Makefile:unittest-poly-1b.log: unittest-poly-1b$(EXEEXT)
./unittests/Makefile:	@p='unittest-poly-1b$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-poly-1b'; \
./unittests/Makefile:unittest-poly-2b.log: unittest-poly-2b$(EXEEXT)
./unittests/Makefile:	@p='unittest-poly-2b$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-poly-2b'; \
./unittests/Makefile:unittest-poly-3b.log: unittest-poly-3b$(EXEEXT)
./unittests/Makefile:	@p='unittest-poly-3b$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-poly-3b'; \
./unittests/Makefile:unittest-poly-holder-1b.log: unittest-poly-holder-1b$(EXEEXT)
./unittests/Makefile:	@p='unittest-poly-holder-1b$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-poly-holder-1b'; \
./unittests/Makefile:unittest-poly-holder-2b.log: unittest-poly-holder-2b$(EXEEXT)
./unittests/Makefile:	@p='unittest-poly-holder-2b$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-poly-holder-2b'; \
./unittests/Makefile:unittest-poly-holder-3b.log: unittest-poly-holder-3b$(EXEEXT)
./unittests/Makefile:	@p='unittest-poly-holder-3b$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-poly-holder-3b'; \
./unittests/Makefile:unittest-topology.log: unittest-topology$(EXEEXT)
./unittests/Makefile:	@p='unittest-topology$(EXEEXT)'; \
./unittests/Makefile:	b='unittest-topology'; \
